
Hamoksha_Short_Vedio_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000030e0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000006c  00800060  000030e0  00003154  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001e3c  00000000  00000000  000031c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000b12  00000000  00000000  00004ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00005b0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000018f  00000000  00000000  00005c6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002045  00000000  00000000  00005dfd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001101  00000000  00000000  00007e42  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f82  00000000  00000000  00008f43  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  00009ec8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c2  00000000  00000000  0000a048  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000088e  00000000  00000000  0000a30a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000ab98  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 ee       	ldi	r30, 0xE0	; 224
      68:	f0 e3       	ldi	r31, 0x30	; 48
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 3c       	cpi	r26, 0xCC	; 204
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 a4 10 	call	0x2148	; 0x2148 <main>
      7a:	0c 94 6e 18 	jmp	0x30dc	; 0x30dc <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 37 18 	jmp	0x306e	; 0x306e <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	ac e8       	ldi	r26, 0x8C	; 140
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 53 18 	jmp	0x30a6	; 0x30a6 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 43 18 	jmp	0x3086	; 0x3086 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 5f 18 	jmp	0x30be	; 0x30be <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 43 18 	jmp	0x3086	; 0x3086 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 5f 18 	jmp	0x30be	; 0x30be <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 37 18 	jmp	0x306e	; 0x306e <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	8c e8       	ldi	r24, 0x8C	; 140
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 53 18 	jmp	0x30a6	; 0x30a6 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 3f 18 	jmp	0x307e	; 0x307e <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	6c e8       	ldi	r22, 0x8C	; 140
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 5b 18 	jmp	0x30b6	; 0x30b6 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 43 18 	jmp	0x3086	; 0x3086 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 5f 18 	jmp	0x30be	; 0x30be <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 43 18 	jmp	0x3086	; 0x3086 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 5f 18 	jmp	0x30be	; 0x30be <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 43 18 	jmp	0x3086	; 0x3086 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 5f 18 	jmp	0x30be	; 0x30be <__epilogue_restores__+0x18>

0000089a <__fixsfsi>:
     89a:	ac e0       	ldi	r26, 0x0C	; 12
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 47 18 	jmp	0x308e	; 0x308e <__prologue_saves__+0x20>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	be 01       	movw	r22, r28
     8b4:	6b 5f       	subi	r22, 0xFB	; 251
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     8bc:	8d 81       	ldd	r24, Y+5	; 0x05
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	61 f1       	breq	.+88     	; 0x91a <__fixsfsi+0x80>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	50 f1       	brcs	.+84     	; 0x91a <__fixsfsi+0x80>
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <__fixsfsi+0x38>
     8ca:	8e 81       	ldd	r24, Y+6	; 0x06
     8cc:	88 23       	and	r24, r24
     8ce:	51 f1       	breq	.+84     	; 0x924 <__fixsfsi+0x8a>
     8d0:	2e c0       	rjmp	.+92     	; 0x92e <__fixsfsi+0x94>
     8d2:	2f 81       	ldd	r18, Y+7	; 0x07
     8d4:	38 85       	ldd	r19, Y+8	; 0x08
     8d6:	37 fd       	sbrc	r19, 7
     8d8:	20 c0       	rjmp	.+64     	; 0x91a <__fixsfsi+0x80>
     8da:	6e 81       	ldd	r22, Y+6	; 0x06
     8dc:	2f 31       	cpi	r18, 0x1F	; 31
     8de:	31 05       	cpc	r19, r1
     8e0:	1c f0       	brlt	.+6      	; 0x8e8 <__fixsfsi+0x4e>
     8e2:	66 23       	and	r22, r22
     8e4:	f9 f0       	breq	.+62     	; 0x924 <__fixsfsi+0x8a>
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <__fixsfsi+0x94>
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	82 1b       	sub	r24, r18
     8ee:	93 0b       	sbc	r25, r19
     8f0:	29 85       	ldd	r18, Y+9	; 0x09
     8f2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f4:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f6:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fixsfsi+0x68>
     8fa:	56 95       	lsr	r21
     8fc:	47 95       	ror	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	8a 95       	dec	r24
     904:	d2 f7       	brpl	.-12     	; 0x8fa <__fixsfsi+0x60>
     906:	66 23       	and	r22, r22
     908:	b1 f0       	breq	.+44     	; 0x936 <__fixsfsi+0x9c>
     90a:	50 95       	com	r21
     90c:	40 95       	com	r20
     90e:	30 95       	com	r19
     910:	21 95       	neg	r18
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	4f 4f       	sbci	r20, 0xFF	; 255
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	0e c0       	rjmp	.+28     	; 0x936 <__fixsfsi+0x9c>
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	09 c0       	rjmp	.+18     	; 0x936 <__fixsfsi+0x9c>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f ef       	ldi	r20, 0xFF	; 255
     92a:	5f e7       	ldi	r21, 0x7F	; 127
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fixsfsi+0x9c>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e8       	ldi	r21, 0x80	; 128
     936:	b9 01       	movw	r22, r18
     938:	ca 01       	movw	r24, r20
     93a:	2c 96       	adiw	r28, 0x0c	; 12
     93c:	e2 e0       	ldi	r30, 0x02	; 2
     93e:	0c 94 63 18 	jmp	0x30c6	; 0x30c6 <__epilogue_restores__+0x20>

00000942 <__pack_f>:
     942:	df 92       	push	r13
     944:	ef 92       	push	r14
     946:	ff 92       	push	r15
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	fc 01       	movw	r30, r24
     94e:	e4 80       	ldd	r14, Z+4	; 0x04
     950:	f5 80       	ldd	r15, Z+5	; 0x05
     952:	06 81       	ldd	r16, Z+6	; 0x06
     954:	17 81       	ldd	r17, Z+7	; 0x07
     956:	d1 80       	ldd	r13, Z+1	; 0x01
     958:	80 81       	ld	r24, Z
     95a:	82 30       	cpi	r24, 0x02	; 2
     95c:	48 f4       	brcc	.+18     	; 0x970 <__pack_f+0x2e>
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	a0 e1       	ldi	r26, 0x10	; 16
     964:	b0 e0       	ldi	r27, 0x00	; 0
     966:	e8 2a       	or	r14, r24
     968:	f9 2a       	or	r15, r25
     96a:	0a 2b       	or	r16, r26
     96c:	1b 2b       	or	r17, r27
     96e:	a5 c0       	rjmp	.+330    	; 0xaba <__pack_f+0x178>
     970:	84 30       	cpi	r24, 0x04	; 4
     972:	09 f4       	brne	.+2      	; 0x976 <__pack_f+0x34>
     974:	9f c0       	rjmp	.+318    	; 0xab4 <__pack_f+0x172>
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	21 f4       	brne	.+8      	; 0x982 <__pack_f+0x40>
     97a:	ee 24       	eor	r14, r14
     97c:	ff 24       	eor	r15, r15
     97e:	87 01       	movw	r16, r14
     980:	05 c0       	rjmp	.+10     	; 0x98c <__pack_f+0x4a>
     982:	e1 14       	cp	r14, r1
     984:	f1 04       	cpc	r15, r1
     986:	01 05       	cpc	r16, r1
     988:	11 05       	cpc	r17, r1
     98a:	19 f4       	brne	.+6      	; 0x992 <__pack_f+0x50>
     98c:	e0 e0       	ldi	r30, 0x00	; 0
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	96 c0       	rjmp	.+300    	; 0xabe <__pack_f+0x17c>
     992:	62 81       	ldd	r22, Z+2	; 0x02
     994:	73 81       	ldd	r23, Z+3	; 0x03
     996:	9f ef       	ldi	r25, 0xFF	; 255
     998:	62 38       	cpi	r22, 0x82	; 130
     99a:	79 07       	cpc	r23, r25
     99c:	0c f0       	brlt	.+2      	; 0x9a0 <__pack_f+0x5e>
     99e:	5b c0       	rjmp	.+182    	; 0xa56 <__pack_f+0x114>
     9a0:	22 e8       	ldi	r18, 0x82	; 130
     9a2:	3f ef       	ldi	r19, 0xFF	; 255
     9a4:	26 1b       	sub	r18, r22
     9a6:	37 0b       	sbc	r19, r23
     9a8:	2a 31       	cpi	r18, 0x1A	; 26
     9aa:	31 05       	cpc	r19, r1
     9ac:	2c f0       	brlt	.+10     	; 0x9b8 <__pack_f+0x76>
     9ae:	20 e0       	ldi	r18, 0x00	; 0
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	40 e0       	ldi	r20, 0x00	; 0
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	2a c0       	rjmp	.+84     	; 0xa0c <__pack_f+0xca>
     9b8:	b8 01       	movw	r22, r16
     9ba:	a7 01       	movw	r20, r14
     9bc:	02 2e       	mov	r0, r18
     9be:	04 c0       	rjmp	.+8      	; 0x9c8 <__pack_f+0x86>
     9c0:	76 95       	lsr	r23
     9c2:	67 95       	ror	r22
     9c4:	57 95       	ror	r21
     9c6:	47 95       	ror	r20
     9c8:	0a 94       	dec	r0
     9ca:	d2 f7       	brpl	.-12     	; 0x9c0 <__pack_f+0x7e>
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	a0 e0       	ldi	r26, 0x00	; 0
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__pack_f+0x9c>
     9d6:	88 0f       	add	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	aa 1f       	adc	r26, r26
     9dc:	bb 1f       	adc	r27, r27
     9de:	2a 95       	dec	r18
     9e0:	d2 f7       	brpl	.-12     	; 0x9d6 <__pack_f+0x94>
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	a1 09       	sbc	r26, r1
     9e6:	b1 09       	sbc	r27, r1
     9e8:	8e 21       	and	r24, r14
     9ea:	9f 21       	and	r25, r15
     9ec:	a0 23       	and	r26, r16
     9ee:	b1 23       	and	r27, r17
     9f0:	00 97       	sbiw	r24, 0x00	; 0
     9f2:	a1 05       	cpc	r26, r1
     9f4:	b1 05       	cpc	r27, r1
     9f6:	21 f0       	breq	.+8      	; 0xa00 <__pack_f+0xbe>
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	a0 e0       	ldi	r26, 0x00	; 0
     9fe:	b0 e0       	ldi	r27, 0x00	; 0
     a00:	9a 01       	movw	r18, r20
     a02:	ab 01       	movw	r20, r22
     a04:	28 2b       	or	r18, r24
     a06:	39 2b       	or	r19, r25
     a08:	4a 2b       	or	r20, r26
     a0a:	5b 2b       	or	r21, r27
     a0c:	da 01       	movw	r26, r20
     a0e:	c9 01       	movw	r24, r18
     a10:	8f 77       	andi	r24, 0x7F	; 127
     a12:	90 70       	andi	r25, 0x00	; 0
     a14:	a0 70       	andi	r26, 0x00	; 0
     a16:	b0 70       	andi	r27, 0x00	; 0
     a18:	80 34       	cpi	r24, 0x40	; 64
     a1a:	91 05       	cpc	r25, r1
     a1c:	a1 05       	cpc	r26, r1
     a1e:	b1 05       	cpc	r27, r1
     a20:	39 f4       	brne	.+14     	; 0xa30 <__pack_f+0xee>
     a22:	27 ff       	sbrs	r18, 7
     a24:	09 c0       	rjmp	.+18     	; 0xa38 <__pack_f+0xf6>
     a26:	20 5c       	subi	r18, 0xC0	; 192
     a28:	3f 4f       	sbci	r19, 0xFF	; 255
     a2a:	4f 4f       	sbci	r20, 0xFF	; 255
     a2c:	5f 4f       	sbci	r21, 0xFF	; 255
     a2e:	04 c0       	rjmp	.+8      	; 0xa38 <__pack_f+0xf6>
     a30:	21 5c       	subi	r18, 0xC1	; 193
     a32:	3f 4f       	sbci	r19, 0xFF	; 255
     a34:	4f 4f       	sbci	r20, 0xFF	; 255
     a36:	5f 4f       	sbci	r21, 0xFF	; 255
     a38:	e0 e0       	ldi	r30, 0x00	; 0
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	20 30       	cpi	r18, 0x00	; 0
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	3a 07       	cpc	r19, r26
     a42:	a0 e0       	ldi	r26, 0x00	; 0
     a44:	4a 07       	cpc	r20, r26
     a46:	a0 e4       	ldi	r26, 0x40	; 64
     a48:	5a 07       	cpc	r21, r26
     a4a:	10 f0       	brcs	.+4      	; 0xa50 <__pack_f+0x10e>
     a4c:	e1 e0       	ldi	r30, 0x01	; 1
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	79 01       	movw	r14, r18
     a52:	8a 01       	movw	r16, r20
     a54:	27 c0       	rjmp	.+78     	; 0xaa4 <__pack_f+0x162>
     a56:	60 38       	cpi	r22, 0x80	; 128
     a58:	71 05       	cpc	r23, r1
     a5a:	64 f5       	brge	.+88     	; 0xab4 <__pack_f+0x172>
     a5c:	fb 01       	movw	r30, r22
     a5e:	e1 58       	subi	r30, 0x81	; 129
     a60:	ff 4f       	sbci	r31, 0xFF	; 255
     a62:	d8 01       	movw	r26, r16
     a64:	c7 01       	movw	r24, r14
     a66:	8f 77       	andi	r24, 0x7F	; 127
     a68:	90 70       	andi	r25, 0x00	; 0
     a6a:	a0 70       	andi	r26, 0x00	; 0
     a6c:	b0 70       	andi	r27, 0x00	; 0
     a6e:	80 34       	cpi	r24, 0x40	; 64
     a70:	91 05       	cpc	r25, r1
     a72:	a1 05       	cpc	r26, r1
     a74:	b1 05       	cpc	r27, r1
     a76:	39 f4       	brne	.+14     	; 0xa86 <__pack_f+0x144>
     a78:	e7 fe       	sbrs	r14, 7
     a7a:	0d c0       	rjmp	.+26     	; 0xa96 <__pack_f+0x154>
     a7c:	80 e4       	ldi	r24, 0x40	; 64
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	a0 e0       	ldi	r26, 0x00	; 0
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <__pack_f+0x14c>
     a86:	8f e3       	ldi	r24, 0x3F	; 63
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	e8 0e       	add	r14, r24
     a90:	f9 1e       	adc	r15, r25
     a92:	0a 1f       	adc	r16, r26
     a94:	1b 1f       	adc	r17, r27
     a96:	17 ff       	sbrs	r17, 7
     a98:	05 c0       	rjmp	.+10     	; 0xaa4 <__pack_f+0x162>
     a9a:	16 95       	lsr	r17
     a9c:	07 95       	ror	r16
     a9e:	f7 94       	ror	r15
     aa0:	e7 94       	ror	r14
     aa2:	31 96       	adiw	r30, 0x01	; 1
     aa4:	87 e0       	ldi	r24, 0x07	; 7
     aa6:	16 95       	lsr	r17
     aa8:	07 95       	ror	r16
     aaa:	f7 94       	ror	r15
     aac:	e7 94       	ror	r14
     aae:	8a 95       	dec	r24
     ab0:	d1 f7       	brne	.-12     	; 0xaa6 <__pack_f+0x164>
     ab2:	05 c0       	rjmp	.+10     	; 0xabe <__pack_f+0x17c>
     ab4:	ee 24       	eor	r14, r14
     ab6:	ff 24       	eor	r15, r15
     ab8:	87 01       	movw	r16, r14
     aba:	ef ef       	ldi	r30, 0xFF	; 255
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	6e 2f       	mov	r22, r30
     ac0:	67 95       	ror	r22
     ac2:	66 27       	eor	r22, r22
     ac4:	67 95       	ror	r22
     ac6:	90 2f       	mov	r25, r16
     ac8:	9f 77       	andi	r25, 0x7F	; 127
     aca:	d7 94       	ror	r13
     acc:	dd 24       	eor	r13, r13
     ace:	d7 94       	ror	r13
     ad0:	8e 2f       	mov	r24, r30
     ad2:	86 95       	lsr	r24
     ad4:	49 2f       	mov	r20, r25
     ad6:	46 2b       	or	r20, r22
     ad8:	58 2f       	mov	r21, r24
     ada:	5d 29       	or	r21, r13
     adc:	b7 01       	movw	r22, r14
     ade:	ca 01       	movw	r24, r20
     ae0:	1f 91       	pop	r17
     ae2:	0f 91       	pop	r16
     ae4:	ff 90       	pop	r15
     ae6:	ef 90       	pop	r14
     ae8:	df 90       	pop	r13
     aea:	08 95       	ret

00000aec <__unpack_f>:
     aec:	fc 01       	movw	r30, r24
     aee:	db 01       	movw	r26, r22
     af0:	40 81       	ld	r20, Z
     af2:	51 81       	ldd	r21, Z+1	; 0x01
     af4:	22 81       	ldd	r18, Z+2	; 0x02
     af6:	62 2f       	mov	r22, r18
     af8:	6f 77       	andi	r22, 0x7F	; 127
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	22 1f       	adc	r18, r18
     afe:	22 27       	eor	r18, r18
     b00:	22 1f       	adc	r18, r18
     b02:	93 81       	ldd	r25, Z+3	; 0x03
     b04:	89 2f       	mov	r24, r25
     b06:	88 0f       	add	r24, r24
     b08:	82 2b       	or	r24, r18
     b0a:	28 2f       	mov	r18, r24
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	99 1f       	adc	r25, r25
     b10:	99 27       	eor	r25, r25
     b12:	99 1f       	adc	r25, r25
     b14:	11 96       	adiw	r26, 0x01	; 1
     b16:	9c 93       	st	X, r25
     b18:	11 97       	sbiw	r26, 0x01	; 1
     b1a:	21 15       	cp	r18, r1
     b1c:	31 05       	cpc	r19, r1
     b1e:	a9 f5       	brne	.+106    	; 0xb8a <__unpack_f+0x9e>
     b20:	41 15       	cp	r20, r1
     b22:	51 05       	cpc	r21, r1
     b24:	61 05       	cpc	r22, r1
     b26:	71 05       	cpc	r23, r1
     b28:	11 f4       	brne	.+4      	; 0xb2e <__unpack_f+0x42>
     b2a:	82 e0       	ldi	r24, 0x02	; 2
     b2c:	37 c0       	rjmp	.+110    	; 0xb9c <__unpack_f+0xb0>
     b2e:	82 e8       	ldi	r24, 0x82	; 130
     b30:	9f ef       	ldi	r25, 0xFF	; 255
     b32:	13 96       	adiw	r26, 0x03	; 3
     b34:	9c 93       	st	X, r25
     b36:	8e 93       	st	-X, r24
     b38:	12 97       	sbiw	r26, 0x02	; 2
     b3a:	9a 01       	movw	r18, r20
     b3c:	ab 01       	movw	r20, r22
     b3e:	67 e0       	ldi	r22, 0x07	; 7
     b40:	22 0f       	add	r18, r18
     b42:	33 1f       	adc	r19, r19
     b44:	44 1f       	adc	r20, r20
     b46:	55 1f       	adc	r21, r21
     b48:	6a 95       	dec	r22
     b4a:	d1 f7       	brne	.-12     	; 0xb40 <__unpack_f+0x54>
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	8c 93       	st	X, r24
     b50:	0d c0       	rjmp	.+26     	; 0xb6c <__unpack_f+0x80>
     b52:	22 0f       	add	r18, r18
     b54:	33 1f       	adc	r19, r19
     b56:	44 1f       	adc	r20, r20
     b58:	55 1f       	adc	r21, r21
     b5a:	12 96       	adiw	r26, 0x02	; 2
     b5c:	8d 91       	ld	r24, X+
     b5e:	9c 91       	ld	r25, X
     b60:	13 97       	sbiw	r26, 0x03	; 3
     b62:	01 97       	sbiw	r24, 0x01	; 1
     b64:	13 96       	adiw	r26, 0x03	; 3
     b66:	9c 93       	st	X, r25
     b68:	8e 93       	st	-X, r24
     b6a:	12 97       	sbiw	r26, 0x02	; 2
     b6c:	20 30       	cpi	r18, 0x00	; 0
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	38 07       	cpc	r19, r24
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	48 07       	cpc	r20, r24
     b76:	80 e4       	ldi	r24, 0x40	; 64
     b78:	58 07       	cpc	r21, r24
     b7a:	58 f3       	brcs	.-42     	; 0xb52 <__unpack_f+0x66>
     b7c:	14 96       	adiw	r26, 0x04	; 4
     b7e:	2d 93       	st	X+, r18
     b80:	3d 93       	st	X+, r19
     b82:	4d 93       	st	X+, r20
     b84:	5c 93       	st	X, r21
     b86:	17 97       	sbiw	r26, 0x07	; 7
     b88:	08 95       	ret
     b8a:	2f 3f       	cpi	r18, 0xFF	; 255
     b8c:	31 05       	cpc	r19, r1
     b8e:	79 f4       	brne	.+30     	; 0xbae <__unpack_f+0xc2>
     b90:	41 15       	cp	r20, r1
     b92:	51 05       	cpc	r21, r1
     b94:	61 05       	cpc	r22, r1
     b96:	71 05       	cpc	r23, r1
     b98:	19 f4       	brne	.+6      	; 0xba0 <__unpack_f+0xb4>
     b9a:	84 e0       	ldi	r24, 0x04	; 4
     b9c:	8c 93       	st	X, r24
     b9e:	08 95       	ret
     ba0:	64 ff       	sbrs	r22, 4
     ba2:	03 c0       	rjmp	.+6      	; 0xbaa <__unpack_f+0xbe>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	8c 93       	st	X, r24
     ba8:	12 c0       	rjmp	.+36     	; 0xbce <__unpack_f+0xe2>
     baa:	1c 92       	st	X, r1
     bac:	10 c0       	rjmp	.+32     	; 0xbce <__unpack_f+0xe2>
     bae:	2f 57       	subi	r18, 0x7F	; 127
     bb0:	30 40       	sbci	r19, 0x00	; 0
     bb2:	13 96       	adiw	r26, 0x03	; 3
     bb4:	3c 93       	st	X, r19
     bb6:	2e 93       	st	-X, r18
     bb8:	12 97       	sbiw	r26, 0x02	; 2
     bba:	83 e0       	ldi	r24, 0x03	; 3
     bbc:	8c 93       	st	X, r24
     bbe:	87 e0       	ldi	r24, 0x07	; 7
     bc0:	44 0f       	add	r20, r20
     bc2:	55 1f       	adc	r21, r21
     bc4:	66 1f       	adc	r22, r22
     bc6:	77 1f       	adc	r23, r23
     bc8:	8a 95       	dec	r24
     bca:	d1 f7       	brne	.-12     	; 0xbc0 <__unpack_f+0xd4>
     bcc:	70 64       	ori	r23, 0x40	; 64
     bce:	14 96       	adiw	r26, 0x04	; 4
     bd0:	4d 93       	st	X+, r20
     bd2:	5d 93       	st	X+, r21
     bd4:	6d 93       	st	X+, r22
     bd6:	7c 93       	st	X, r23
     bd8:	17 97       	sbiw	r26, 0x07	; 7
     bda:	08 95       	ret

00000bdc <__fpcmp_parts_f>:
     bdc:	1f 93       	push	r17
     bde:	dc 01       	movw	r26, r24
     be0:	fb 01       	movw	r30, r22
     be2:	9c 91       	ld	r25, X
     be4:	92 30       	cpi	r25, 0x02	; 2
     be6:	08 f4       	brcc	.+2      	; 0xbea <__fpcmp_parts_f+0xe>
     be8:	47 c0       	rjmp	.+142    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bea:	80 81       	ld	r24, Z
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	08 f4       	brcc	.+2      	; 0xbf2 <__fpcmp_parts_f+0x16>
     bf0:	43 c0       	rjmp	.+134    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bf2:	94 30       	cpi	r25, 0x04	; 4
     bf4:	51 f4       	brne	.+20     	; 0xc0a <__fpcmp_parts_f+0x2e>
     bf6:	11 96       	adiw	r26, 0x01	; 1
     bf8:	1c 91       	ld	r17, X
     bfa:	84 30       	cpi	r24, 0x04	; 4
     bfc:	99 f5       	brne	.+102    	; 0xc64 <__fpcmp_parts_f+0x88>
     bfe:	81 81       	ldd	r24, Z+1	; 0x01
     c00:	68 2f       	mov	r22, r24
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	61 1b       	sub	r22, r17
     c06:	71 09       	sbc	r23, r1
     c08:	3f c0       	rjmp	.+126    	; 0xc88 <__fpcmp_parts_f+0xac>
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	21 f0       	breq	.+8      	; 0xc16 <__fpcmp_parts_f+0x3a>
     c0e:	92 30       	cpi	r25, 0x02	; 2
     c10:	31 f4       	brne	.+12     	; 0xc1e <__fpcmp_parts_f+0x42>
     c12:	82 30       	cpi	r24, 0x02	; 2
     c14:	b9 f1       	breq	.+110    	; 0xc84 <__fpcmp_parts_f+0xa8>
     c16:	81 81       	ldd	r24, Z+1	; 0x01
     c18:	88 23       	and	r24, r24
     c1a:	89 f1       	breq	.+98     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c1c:	2d c0       	rjmp	.+90     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c1e:	11 96       	adiw	r26, 0x01	; 1
     c20:	1c 91       	ld	r17, X
     c22:	11 97       	sbiw	r26, 0x01	; 1
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	f1 f0       	breq	.+60     	; 0xc64 <__fpcmp_parts_f+0x88>
     c28:	81 81       	ldd	r24, Z+1	; 0x01
     c2a:	18 17       	cp	r17, r24
     c2c:	d9 f4       	brne	.+54     	; 0xc64 <__fpcmp_parts_f+0x88>
     c2e:	12 96       	adiw	r26, 0x02	; 2
     c30:	2d 91       	ld	r18, X+
     c32:	3c 91       	ld	r19, X
     c34:	13 97       	sbiw	r26, 0x03	; 3
     c36:	82 81       	ldd	r24, Z+2	; 0x02
     c38:	93 81       	ldd	r25, Z+3	; 0x03
     c3a:	82 17       	cp	r24, r18
     c3c:	93 07       	cpc	r25, r19
     c3e:	94 f0       	brlt	.+36     	; 0xc64 <__fpcmp_parts_f+0x88>
     c40:	28 17       	cp	r18, r24
     c42:	39 07       	cpc	r19, r25
     c44:	bc f0       	brlt	.+46     	; 0xc74 <__fpcmp_parts_f+0x98>
     c46:	14 96       	adiw	r26, 0x04	; 4
     c48:	8d 91       	ld	r24, X+
     c4a:	9d 91       	ld	r25, X+
     c4c:	0d 90       	ld	r0, X+
     c4e:	bc 91       	ld	r27, X
     c50:	a0 2d       	mov	r26, r0
     c52:	24 81       	ldd	r18, Z+4	; 0x04
     c54:	35 81       	ldd	r19, Z+5	; 0x05
     c56:	46 81       	ldd	r20, Z+6	; 0x06
     c58:	57 81       	ldd	r21, Z+7	; 0x07
     c5a:	28 17       	cp	r18, r24
     c5c:	39 07       	cpc	r19, r25
     c5e:	4a 07       	cpc	r20, r26
     c60:	5b 07       	cpc	r21, r27
     c62:	18 f4       	brcc	.+6      	; 0xc6a <__fpcmp_parts_f+0x8e>
     c64:	11 23       	and	r17, r17
     c66:	41 f0       	breq	.+16     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c68:	0a c0       	rjmp	.+20     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c6a:	82 17       	cp	r24, r18
     c6c:	93 07       	cpc	r25, r19
     c6e:	a4 07       	cpc	r26, r20
     c70:	b5 07       	cpc	r27, r21
     c72:	40 f4       	brcc	.+16     	; 0xc84 <__fpcmp_parts_f+0xa8>
     c74:	11 23       	and	r17, r17
     c76:	19 f0       	breq	.+6      	; 0xc7e <__fpcmp_parts_f+0xa2>
     c78:	61 e0       	ldi	r22, 0x01	; 1
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	05 c0       	rjmp	.+10     	; 0xc88 <__fpcmp_parts_f+0xac>
     c7e:	6f ef       	ldi	r22, 0xFF	; 255
     c80:	7f ef       	ldi	r23, 0xFF	; 255
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <__fpcmp_parts_f+0xac>
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	cb 01       	movw	r24, r22
     c8a:	1f 91       	pop	r17
     c8c:	08 95       	ret

00000c8e <INTIAL_DIR>:
/*****************************************************************************/
/***********************************fucntion**********************************/
/********************************************************************************/

u8 INTIAL_DIR(u8 p0 , u8 p1 , u8 p2 , u8 p3 , u8 p4 , u8 p5 , u8 p6 , u8 p7)
{
     c8e:	af 92       	push	r10
     c90:	cf 92       	push	r12
     c92:	ef 92       	push	r14
     c94:	0f 93       	push	r16
     c96:	df 93       	push	r29
     c98:	cf 93       	push	r28
     c9a:	cd b7       	in	r28, 0x3d	; 61
     c9c:	de b7       	in	r29, 0x3e	; 62
     c9e:	29 97       	sbiw	r28, 0x09	; 9
     ca0:	0f b6       	in	r0, 0x3f	; 63
     ca2:	f8 94       	cli
     ca4:	de bf       	out	0x3e, r29	; 62
     ca6:	0f be       	out	0x3f, r0	; 63
     ca8:	cd bf       	out	0x3d, r28	; 61
     caa:	8a 83       	std	Y+2, r24	; 0x02
     cac:	6b 83       	std	Y+3, r22	; 0x03
     cae:	4c 83       	std	Y+4, r20	; 0x04
     cb0:	2d 83       	std	Y+5, r18	; 0x05
     cb2:	0e 83       	std	Y+6, r16	; 0x06
     cb4:	ef 82       	std	Y+7, r14	; 0x07
     cb6:	c8 86       	std	Y+8, r12	; 0x08
     cb8:	a9 86       	std	Y+9, r10	; 0x09
	u8 port = 0x00 ;
     cba:	19 82       	std	Y+1, r1	; 0x01
	Assign_Bit(port,DIO_U8_PIN0,p0);
     cbc:	8a 81       	ldd	r24, Y+2	; 0x02
     cbe:	81 30       	cpi	r24, 0x01	; 1
     cc0:	21 f4       	brne	.+8      	; 0xcca <INTIAL_DIR+0x3c>
     cc2:	89 81       	ldd	r24, Y+1	; 0x01
     cc4:	81 60       	ori	r24, 0x01	; 1
     cc6:	89 83       	std	Y+1, r24	; 0x01
     cc8:	03 c0       	rjmp	.+6      	; 0xcd0 <INTIAL_DIR+0x42>
     cca:	89 81       	ldd	r24, Y+1	; 0x01
     ccc:	8e 7f       	andi	r24, 0xFE	; 254
     cce:	89 83       	std	Y+1, r24	; 0x01
	Assign_Bit(port,DIO_U8_PIN1,p1);
     cd0:	8b 81       	ldd	r24, Y+3	; 0x03
     cd2:	81 30       	cpi	r24, 0x01	; 1
     cd4:	21 f4       	brne	.+8      	; 0xcde <INTIAL_DIR+0x50>
     cd6:	89 81       	ldd	r24, Y+1	; 0x01
     cd8:	82 60       	ori	r24, 0x02	; 2
     cda:	89 83       	std	Y+1, r24	; 0x01
     cdc:	03 c0       	rjmp	.+6      	; 0xce4 <INTIAL_DIR+0x56>
     cde:	89 81       	ldd	r24, Y+1	; 0x01
     ce0:	8d 7f       	andi	r24, 0xFD	; 253
     ce2:	89 83       	std	Y+1, r24	; 0x01
	Assign_Bit(port,DIO_U8_PIN2,p2);
     ce4:	8c 81       	ldd	r24, Y+4	; 0x04
     ce6:	81 30       	cpi	r24, 0x01	; 1
     ce8:	21 f4       	brne	.+8      	; 0xcf2 <INTIAL_DIR+0x64>
     cea:	89 81       	ldd	r24, Y+1	; 0x01
     cec:	84 60       	ori	r24, 0x04	; 4
     cee:	89 83       	std	Y+1, r24	; 0x01
     cf0:	03 c0       	rjmp	.+6      	; 0xcf8 <INTIAL_DIR+0x6a>
     cf2:	89 81       	ldd	r24, Y+1	; 0x01
     cf4:	8b 7f       	andi	r24, 0xFB	; 251
     cf6:	89 83       	std	Y+1, r24	; 0x01
	Assign_Bit(port,DIO_U8_PIN3,p3);
     cf8:	8d 81       	ldd	r24, Y+5	; 0x05
     cfa:	81 30       	cpi	r24, 0x01	; 1
     cfc:	21 f4       	brne	.+8      	; 0xd06 <INTIAL_DIR+0x78>
     cfe:	89 81       	ldd	r24, Y+1	; 0x01
     d00:	88 60       	ori	r24, 0x08	; 8
     d02:	89 83       	std	Y+1, r24	; 0x01
     d04:	03 c0       	rjmp	.+6      	; 0xd0c <INTIAL_DIR+0x7e>
     d06:	89 81       	ldd	r24, Y+1	; 0x01
     d08:	87 7f       	andi	r24, 0xF7	; 247
     d0a:	89 83       	std	Y+1, r24	; 0x01
	Assign_Bit(port,DIO_U8_PIN4,p4);
     d0c:	8e 81       	ldd	r24, Y+6	; 0x06
     d0e:	81 30       	cpi	r24, 0x01	; 1
     d10:	21 f4       	brne	.+8      	; 0xd1a <INTIAL_DIR+0x8c>
     d12:	89 81       	ldd	r24, Y+1	; 0x01
     d14:	80 61       	ori	r24, 0x10	; 16
     d16:	89 83       	std	Y+1, r24	; 0x01
     d18:	03 c0       	rjmp	.+6      	; 0xd20 <INTIAL_DIR+0x92>
     d1a:	89 81       	ldd	r24, Y+1	; 0x01
     d1c:	8f 7e       	andi	r24, 0xEF	; 239
     d1e:	89 83       	std	Y+1, r24	; 0x01
	Assign_Bit(port,DIO_U8_PIN5,p5);
     d20:	8f 81       	ldd	r24, Y+7	; 0x07
     d22:	81 30       	cpi	r24, 0x01	; 1
     d24:	21 f4       	brne	.+8      	; 0xd2e <INTIAL_DIR+0xa0>
     d26:	89 81       	ldd	r24, Y+1	; 0x01
     d28:	80 62       	ori	r24, 0x20	; 32
     d2a:	89 83       	std	Y+1, r24	; 0x01
     d2c:	03 c0       	rjmp	.+6      	; 0xd34 <INTIAL_DIR+0xa6>
     d2e:	89 81       	ldd	r24, Y+1	; 0x01
     d30:	8f 7d       	andi	r24, 0xDF	; 223
     d32:	89 83       	std	Y+1, r24	; 0x01
	Assign_Bit(port,DIO_U8_PIN6,p6);
     d34:	88 85       	ldd	r24, Y+8	; 0x08
     d36:	81 30       	cpi	r24, 0x01	; 1
     d38:	21 f4       	brne	.+8      	; 0xd42 <INTIAL_DIR+0xb4>
     d3a:	89 81       	ldd	r24, Y+1	; 0x01
     d3c:	80 64       	ori	r24, 0x40	; 64
     d3e:	89 83       	std	Y+1, r24	; 0x01
     d40:	03 c0       	rjmp	.+6      	; 0xd48 <INTIAL_DIR+0xba>
     d42:	89 81       	ldd	r24, Y+1	; 0x01
     d44:	8f 7b       	andi	r24, 0xBF	; 191
     d46:	89 83       	std	Y+1, r24	; 0x01
	Assign_Bit(port,DIO_U8_PIN7,p7);
     d48:	89 85       	ldd	r24, Y+9	; 0x09
     d4a:	81 30       	cpi	r24, 0x01	; 1
     d4c:	21 f4       	brne	.+8      	; 0xd56 <INTIAL_DIR+0xc8>
     d4e:	89 81       	ldd	r24, Y+1	; 0x01
     d50:	80 68       	ori	r24, 0x80	; 128
     d52:	89 83       	std	Y+1, r24	; 0x01
     d54:	03 c0       	rjmp	.+6      	; 0xd5c <INTIAL_DIR+0xce>
     d56:	89 81       	ldd	r24, Y+1	; 0x01
     d58:	8f 77       	andi	r24, 0x7F	; 127
     d5a:	89 83       	std	Y+1, r24	; 0x01
	return port;
     d5c:	89 81       	ldd	r24, Y+1	; 0x01

}
     d5e:	29 96       	adiw	r28, 0x09	; 9
     d60:	0f b6       	in	r0, 0x3f	; 63
     d62:	f8 94       	cli
     d64:	de bf       	out	0x3e, r29	; 62
     d66:	0f be       	out	0x3f, r0	; 63
     d68:	cd bf       	out	0x3d, r28	; 61
     d6a:	cf 91       	pop	r28
     d6c:	df 91       	pop	r29
     d6e:	0f 91       	pop	r16
     d70:	ef 90       	pop	r14
     d72:	cf 90       	pop	r12
     d74:	af 90       	pop	r10
     d76:	08 95       	ret

00000d78 <DIO_void_Init>:


void DIO_void_Init(void)
{
     d78:	8f 92       	push	r8
     d7a:	9f 92       	push	r9
     d7c:	af 92       	push	r10
     d7e:	cf 92       	push	r12
     d80:	ef 92       	push	r14
     d82:	0f 93       	push	r16
     d84:	df 93       	push	r29
     d86:	cf 93       	push	r28
     d88:	cd b7       	in	r28, 0x3d	; 61
     d8a:	de b7       	in	r29, 0x3e	; 62
	/*direction*/
	DIO_U8_DDRA =INTIAL_DIR(DIO_u8_PA0_INTIAL_DIR,DIO_u8_PA1_INTIAL_DIR,DIO_u8_PA2_INTIAL_DIR,DIO_u8_PA3_INTIAL_DIR,DIO_u8_PA4_INTIAL_DIR,DIO_u8_PA5_INTIAL_DIR,DIO_u8_PA6_INTIAL_DIR,DIO_u8_PA7_INTIAL_DIR);
     d8c:	0f 2e       	mov	r0, r31
     d8e:	fa e3       	ldi	r31, 0x3A	; 58
     d90:	8f 2e       	mov	r8, r31
     d92:	99 24       	eor	r9, r9
     d94:	f0 2d       	mov	r31, r0
     d96:	80 e0       	ldi	r24, 0x00	; 0
     d98:	60 e0       	ldi	r22, 0x00	; 0
     d9a:	40 e0       	ldi	r20, 0x00	; 0
     d9c:	20 e0       	ldi	r18, 0x00	; 0
     d9e:	01 e0       	ldi	r16, 0x01	; 1
     da0:	ee 24       	eor	r14, r14
     da2:	e3 94       	inc	r14
     da4:	cc 24       	eor	r12, r12
     da6:	c3 94       	inc	r12
     da8:	aa 24       	eor	r10, r10
     daa:	a3 94       	inc	r10
     dac:	0e 94 47 06 	call	0xc8e	; 0xc8e <INTIAL_DIR>
     db0:	f4 01       	movw	r30, r8
     db2:	80 83       	st	Z, r24
	DIO_U8_DDRB =INTIAL_DIR(DIO_u8_PB0_INTIAL_DIR,DIO_u8_PB1_INTIAL_DIR,DIO_u8_PB2_INTIAL_DIR,DIO_u8_PB3_INTIAL_DIR,DIO_u8_PB4_INTIAL_DIR,DIO_u8_PB5_INTIAL_DIR,DIO_u8_PB6_INTIAL_DIR,DIO_u8_PB7_INTIAL_DIR);
     db4:	0f 2e       	mov	r0, r31
     db6:	f7 e3       	ldi	r31, 0x37	; 55
     db8:	8f 2e       	mov	r8, r31
     dba:	99 24       	eor	r9, r9
     dbc:	f0 2d       	mov	r31, r0
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	60 e0       	ldi	r22, 0x00	; 0
     dc2:	40 e0       	ldi	r20, 0x00	; 0
     dc4:	20 e0       	ldi	r18, 0x00	; 0
     dc6:	00 e0       	ldi	r16, 0x00	; 0
     dc8:	ee 24       	eor	r14, r14
     dca:	cc 24       	eor	r12, r12
     dcc:	aa 24       	eor	r10, r10
     dce:	0e 94 47 06 	call	0xc8e	; 0xc8e <INTIAL_DIR>
     dd2:	f4 01       	movw	r30, r8
     dd4:	80 83       	st	Z, r24
	DIO_U8_DDRC =INTIAL_DIR(DIO_u8_PC0_INTIAL_DIR,DIO_u8_PC1_INTIAL_DIR,DIO_u8_PC2_INTIAL_DIR,DIO_u8_PC3_INTIAL_DIR,DIO_u8_PC4_INTIAL_DIR,DIO_u8_PC5_INTIAL_DIR,DIO_u8_PC6_INTIAL_DIR,DIO_u8_PC7_INTIAL_DIR);
     dd6:	0f 2e       	mov	r0, r31
     dd8:	f4 e3       	ldi	r31, 0x34	; 52
     dda:	8f 2e       	mov	r8, r31
     ddc:	99 24       	eor	r9, r9
     dde:	f0 2d       	mov	r31, r0
     de0:	81 e0       	ldi	r24, 0x01	; 1
     de2:	61 e0       	ldi	r22, 0x01	; 1
     de4:	41 e0       	ldi	r20, 0x01	; 1
     de6:	20 e0       	ldi	r18, 0x00	; 0
     de8:	00 e0       	ldi	r16, 0x00	; 0
     dea:	ee 24       	eor	r14, r14
     dec:	cc 24       	eor	r12, r12
     dee:	aa 24       	eor	r10, r10
     df0:	0e 94 47 06 	call	0xc8e	; 0xc8e <INTIAL_DIR>
     df4:	f4 01       	movw	r30, r8
     df6:	80 83       	st	Z, r24
	DIO_U8_DDRD =INTIAL_DIR(DIO_u8_PD0_INTIAL_DIR,DIO_u8_PD1_INTIAL_DIR,DIO_u8_PD2_INTIAL_DIR,DIO_u8_PD3_INTIAL_DIR,DIO_u8_PD4_INTIAL_DIR,DIO_u8_PD5_INTIAL_DIR,DIO_u8_PD6_INTIAL_DIR,DIO_u8_PD7_INTIAL_DIR);
     df8:	0f 2e       	mov	r0, r31
     dfa:	f1 e3       	ldi	r31, 0x31	; 49
     dfc:	8f 2e       	mov	r8, r31
     dfe:	99 24       	eor	r9, r9
     e00:	f0 2d       	mov	r31, r0
     e02:	80 e0       	ldi	r24, 0x00	; 0
     e04:	60 e0       	ldi	r22, 0x00	; 0
     e06:	40 e0       	ldi	r20, 0x00	; 0
     e08:	20 e0       	ldi	r18, 0x00	; 0
     e0a:	00 e0       	ldi	r16, 0x00	; 0
     e0c:	ee 24       	eor	r14, r14
     e0e:	cc 24       	eor	r12, r12
     e10:	aa 24       	eor	r10, r10
     e12:	0e 94 47 06 	call	0xc8e	; 0xc8e <INTIAL_DIR>
     e16:	f4 01       	movw	r30, r8
     e18:	80 83       	st	Z, r24
}
     e1a:	cf 91       	pop	r28
     e1c:	df 91       	pop	r29
     e1e:	0f 91       	pop	r16
     e20:	ef 90       	pop	r14
     e22:	cf 90       	pop	r12
     e24:	af 90       	pop	r10
     e26:	9f 90       	pop	r9
     e28:	8f 90       	pop	r8
     e2a:	08 95       	ret

00000e2c <DIO_U8_Set_Pin_Dir>:

u8 DIO_U8_Set_Pin_Dir(u8 Copy_U8_Port_ID , u8 Copy_U8_Pin_ID , u8 Copy_U8_Pin_Dir)
{
     e2c:	df 93       	push	r29
     e2e:	cf 93       	push	r28
     e30:	00 d0       	rcall	.+0      	; 0xe32 <DIO_U8_Set_Pin_Dir+0x6>
     e32:	00 d0       	rcall	.+0      	; 0xe34 <DIO_U8_Set_Pin_Dir+0x8>
     e34:	00 d0       	rcall	.+0      	; 0xe36 <DIO_U8_Set_Pin_Dir+0xa>
     e36:	cd b7       	in	r28, 0x3d	; 61
     e38:	de b7       	in	r29, 0x3e	; 62
     e3a:	89 83       	std	Y+1, r24	; 0x01
     e3c:	6a 83       	std	Y+2, r22	; 0x02
     e3e:	4b 83       	std	Y+3, r20	; 0x03
	if((Copy_U8_Port_ID>=DIO_MIN_U8_PROT_ID)&&(Copy_U8_Port_ID<=DIO_MAX_U8_PROT_ID))
     e40:	89 81       	ldd	r24, Y+1	; 0x01
     e42:	84 30       	cpi	r24, 0x04	; 4
     e44:	08 f0       	brcs	.+2      	; 0xe48 <DIO_U8_Set_Pin_Dir+0x1c>
     e46:	e4 c0       	rjmp	.+456    	; 0x1010 <DIO_U8_Set_Pin_Dir+0x1e4>
	{
		if((Copy_U8_Pin_ID>=DIO_MIN_U8_PIN_ID)&&(Copy_U8_Pin_ID<=DIO_MAX_U8_PIN_ID))
     e48:	8a 81       	ldd	r24, Y+2	; 0x02
     e4a:	88 30       	cpi	r24, 0x08	; 8
     e4c:	08 f0       	brcs	.+2      	; 0xe50 <DIO_U8_Set_Pin_Dir+0x24>
     e4e:	dd c0       	rjmp	.+442    	; 0x100a <DIO_U8_Set_Pin_Dir+0x1de>
		{
			if((Copy_U8_Pin_Dir==PIN_INPUT)||(Copy_U8_Pin_Dir==PIN_OUTPUT))
     e50:	8b 81       	ldd	r24, Y+3	; 0x03
     e52:	88 23       	and	r24, r24
     e54:	21 f0       	breq	.+8      	; 0xe5e <DIO_U8_Set_Pin_Dir+0x32>
     e56:	8b 81       	ldd	r24, Y+3	; 0x03
     e58:	81 30       	cpi	r24, 0x01	; 1
     e5a:	09 f0       	breq	.+2      	; 0xe5e <DIO_U8_Set_Pin_Dir+0x32>
     e5c:	d4 c0       	rjmp	.+424    	; 0x1006 <DIO_U8_Set_Pin_Dir+0x1da>
			{
				switch(Copy_U8_Port_ID)
     e5e:	89 81       	ldd	r24, Y+1	; 0x01
     e60:	28 2f       	mov	r18, r24
     e62:	30 e0       	ldi	r19, 0x00	; 0
     e64:	3e 83       	std	Y+6, r19	; 0x06
     e66:	2d 83       	std	Y+5, r18	; 0x05
     e68:	8d 81       	ldd	r24, Y+5	; 0x05
     e6a:	9e 81       	ldd	r25, Y+6	; 0x06
     e6c:	81 30       	cpi	r24, 0x01	; 1
     e6e:	91 05       	cpc	r25, r1
     e70:	09 f4       	brne	.+2      	; 0xe74 <DIO_U8_Set_Pin_Dir+0x48>
     e72:	43 c0       	rjmp	.+134    	; 0xefa <DIO_U8_Set_Pin_Dir+0xce>
     e74:	2d 81       	ldd	r18, Y+5	; 0x05
     e76:	3e 81       	ldd	r19, Y+6	; 0x06
     e78:	22 30       	cpi	r18, 0x02	; 2
     e7a:	31 05       	cpc	r19, r1
     e7c:	2c f4       	brge	.+10     	; 0xe88 <DIO_U8_Set_Pin_Dir+0x5c>
     e7e:	8d 81       	ldd	r24, Y+5	; 0x05
     e80:	9e 81       	ldd	r25, Y+6	; 0x06
     e82:	00 97       	sbiw	r24, 0x00	; 0
     e84:	71 f0       	breq	.+28     	; 0xea2 <DIO_U8_Set_Pin_Dir+0x76>
     e86:	bc c0       	rjmp	.+376    	; 0x1000 <DIO_U8_Set_Pin_Dir+0x1d4>
     e88:	2d 81       	ldd	r18, Y+5	; 0x05
     e8a:	3e 81       	ldd	r19, Y+6	; 0x06
     e8c:	22 30       	cpi	r18, 0x02	; 2
     e8e:	31 05       	cpc	r19, r1
     e90:	09 f4       	brne	.+2      	; 0xe94 <DIO_U8_Set_Pin_Dir+0x68>
     e92:	5f c0       	rjmp	.+190    	; 0xf52 <DIO_U8_Set_Pin_Dir+0x126>
     e94:	8d 81       	ldd	r24, Y+5	; 0x05
     e96:	9e 81       	ldd	r25, Y+6	; 0x06
     e98:	83 30       	cpi	r24, 0x03	; 3
     e9a:	91 05       	cpc	r25, r1
     e9c:	09 f4       	brne	.+2      	; 0xea0 <DIO_U8_Set_Pin_Dir+0x74>
     e9e:	85 c0       	rjmp	.+266    	; 0xfaa <DIO_U8_Set_Pin_Dir+0x17e>
     ea0:	af c0       	rjmp	.+350    	; 0x1000 <DIO_U8_Set_Pin_Dir+0x1d4>
				{
				case PORTA_ID:
					Assign_Bit(DIO_U8_DDRA,Copy_U8_Pin_ID,Copy_U8_Pin_Dir);
     ea2:	8b 81       	ldd	r24, Y+3	; 0x03
     ea4:	81 30       	cpi	r24, 0x01	; 1
     ea6:	a1 f4       	brne	.+40     	; 0xed0 <DIO_U8_Set_Pin_Dir+0xa4>
     ea8:	aa e3       	ldi	r26, 0x3A	; 58
     eaa:	b0 e0       	ldi	r27, 0x00	; 0
     eac:	ea e3       	ldi	r30, 0x3A	; 58
     eae:	f0 e0       	ldi	r31, 0x00	; 0
     eb0:	80 81       	ld	r24, Z
     eb2:	48 2f       	mov	r20, r24
     eb4:	8a 81       	ldd	r24, Y+2	; 0x02
     eb6:	28 2f       	mov	r18, r24
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	02 2e       	mov	r0, r18
     ec0:	02 c0       	rjmp	.+4      	; 0xec6 <DIO_U8_Set_Pin_Dir+0x9a>
     ec2:	88 0f       	add	r24, r24
     ec4:	99 1f       	adc	r25, r25
     ec6:	0a 94       	dec	r0
     ec8:	e2 f7       	brpl	.-8      	; 0xec2 <DIO_U8_Set_Pin_Dir+0x96>
     eca:	84 2b       	or	r24, r20
     ecc:	8c 93       	st	X, r24
     ece:	98 c0       	rjmp	.+304    	; 0x1000 <DIO_U8_Set_Pin_Dir+0x1d4>
     ed0:	aa e3       	ldi	r26, 0x3A	; 58
     ed2:	b0 e0       	ldi	r27, 0x00	; 0
     ed4:	ea e3       	ldi	r30, 0x3A	; 58
     ed6:	f0 e0       	ldi	r31, 0x00	; 0
     ed8:	80 81       	ld	r24, Z
     eda:	48 2f       	mov	r20, r24
     edc:	8a 81       	ldd	r24, Y+2	; 0x02
     ede:	28 2f       	mov	r18, r24
     ee0:	30 e0       	ldi	r19, 0x00	; 0
     ee2:	81 e0       	ldi	r24, 0x01	; 1
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	02 2e       	mov	r0, r18
     ee8:	02 c0       	rjmp	.+4      	; 0xeee <DIO_U8_Set_Pin_Dir+0xc2>
     eea:	88 0f       	add	r24, r24
     eec:	99 1f       	adc	r25, r25
     eee:	0a 94       	dec	r0
     ef0:	e2 f7       	brpl	.-8      	; 0xeea <DIO_U8_Set_Pin_Dir+0xbe>
     ef2:	80 95       	com	r24
     ef4:	84 23       	and	r24, r20
     ef6:	8c 93       	st	X, r24
     ef8:	83 c0       	rjmp	.+262    	; 0x1000 <DIO_U8_Set_Pin_Dir+0x1d4>
					break;
				case PORTB_ID:
					Assign_Bit(DIO_U8_DDRB,Copy_U8_Pin_ID,Copy_U8_Pin_Dir);
     efa:	8b 81       	ldd	r24, Y+3	; 0x03
     efc:	81 30       	cpi	r24, 0x01	; 1
     efe:	a1 f4       	brne	.+40     	; 0xf28 <DIO_U8_Set_Pin_Dir+0xfc>
     f00:	a7 e3       	ldi	r26, 0x37	; 55
     f02:	b0 e0       	ldi	r27, 0x00	; 0
     f04:	e7 e3       	ldi	r30, 0x37	; 55
     f06:	f0 e0       	ldi	r31, 0x00	; 0
     f08:	80 81       	ld	r24, Z
     f0a:	48 2f       	mov	r20, r24
     f0c:	8a 81       	ldd	r24, Y+2	; 0x02
     f0e:	28 2f       	mov	r18, r24
     f10:	30 e0       	ldi	r19, 0x00	; 0
     f12:	81 e0       	ldi	r24, 0x01	; 1
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	02 2e       	mov	r0, r18
     f18:	02 c0       	rjmp	.+4      	; 0xf1e <DIO_U8_Set_Pin_Dir+0xf2>
     f1a:	88 0f       	add	r24, r24
     f1c:	99 1f       	adc	r25, r25
     f1e:	0a 94       	dec	r0
     f20:	e2 f7       	brpl	.-8      	; 0xf1a <DIO_U8_Set_Pin_Dir+0xee>
     f22:	84 2b       	or	r24, r20
     f24:	8c 93       	st	X, r24
     f26:	6c c0       	rjmp	.+216    	; 0x1000 <DIO_U8_Set_Pin_Dir+0x1d4>
     f28:	a7 e3       	ldi	r26, 0x37	; 55
     f2a:	b0 e0       	ldi	r27, 0x00	; 0
     f2c:	e7 e3       	ldi	r30, 0x37	; 55
     f2e:	f0 e0       	ldi	r31, 0x00	; 0
     f30:	80 81       	ld	r24, Z
     f32:	48 2f       	mov	r20, r24
     f34:	8a 81       	ldd	r24, Y+2	; 0x02
     f36:	28 2f       	mov	r18, r24
     f38:	30 e0       	ldi	r19, 0x00	; 0
     f3a:	81 e0       	ldi	r24, 0x01	; 1
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	02 2e       	mov	r0, r18
     f40:	02 c0       	rjmp	.+4      	; 0xf46 <DIO_U8_Set_Pin_Dir+0x11a>
     f42:	88 0f       	add	r24, r24
     f44:	99 1f       	adc	r25, r25
     f46:	0a 94       	dec	r0
     f48:	e2 f7       	brpl	.-8      	; 0xf42 <DIO_U8_Set_Pin_Dir+0x116>
     f4a:	80 95       	com	r24
     f4c:	84 23       	and	r24, r20
     f4e:	8c 93       	st	X, r24
     f50:	57 c0       	rjmp	.+174    	; 0x1000 <DIO_U8_Set_Pin_Dir+0x1d4>
					break;
				case PORTC_ID:
					Assign_Bit(DIO_U8_DDRC,Copy_U8_Pin_ID,Copy_U8_Pin_Dir);
     f52:	8b 81       	ldd	r24, Y+3	; 0x03
     f54:	81 30       	cpi	r24, 0x01	; 1
     f56:	a1 f4       	brne	.+40     	; 0xf80 <DIO_U8_Set_Pin_Dir+0x154>
     f58:	a4 e3       	ldi	r26, 0x34	; 52
     f5a:	b0 e0       	ldi	r27, 0x00	; 0
     f5c:	e4 e3       	ldi	r30, 0x34	; 52
     f5e:	f0 e0       	ldi	r31, 0x00	; 0
     f60:	80 81       	ld	r24, Z
     f62:	48 2f       	mov	r20, r24
     f64:	8a 81       	ldd	r24, Y+2	; 0x02
     f66:	28 2f       	mov	r18, r24
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	81 e0       	ldi	r24, 0x01	; 1
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	02 2e       	mov	r0, r18
     f70:	02 c0       	rjmp	.+4      	; 0xf76 <DIO_U8_Set_Pin_Dir+0x14a>
     f72:	88 0f       	add	r24, r24
     f74:	99 1f       	adc	r25, r25
     f76:	0a 94       	dec	r0
     f78:	e2 f7       	brpl	.-8      	; 0xf72 <DIO_U8_Set_Pin_Dir+0x146>
     f7a:	84 2b       	or	r24, r20
     f7c:	8c 93       	st	X, r24
     f7e:	40 c0       	rjmp	.+128    	; 0x1000 <DIO_U8_Set_Pin_Dir+0x1d4>
     f80:	a4 e3       	ldi	r26, 0x34	; 52
     f82:	b0 e0       	ldi	r27, 0x00	; 0
     f84:	e4 e3       	ldi	r30, 0x34	; 52
     f86:	f0 e0       	ldi	r31, 0x00	; 0
     f88:	80 81       	ld	r24, Z
     f8a:	48 2f       	mov	r20, r24
     f8c:	8a 81       	ldd	r24, Y+2	; 0x02
     f8e:	28 2f       	mov	r18, r24
     f90:	30 e0       	ldi	r19, 0x00	; 0
     f92:	81 e0       	ldi	r24, 0x01	; 1
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	02 2e       	mov	r0, r18
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <DIO_U8_Set_Pin_Dir+0x172>
     f9a:	88 0f       	add	r24, r24
     f9c:	99 1f       	adc	r25, r25
     f9e:	0a 94       	dec	r0
     fa0:	e2 f7       	brpl	.-8      	; 0xf9a <DIO_U8_Set_Pin_Dir+0x16e>
     fa2:	80 95       	com	r24
     fa4:	84 23       	and	r24, r20
     fa6:	8c 93       	st	X, r24
     fa8:	2b c0       	rjmp	.+86     	; 0x1000 <DIO_U8_Set_Pin_Dir+0x1d4>
					break;
				case PORTD_ID:
					Assign_Bit(DIO_U8_DDRD,Copy_U8_Pin_ID,Copy_U8_Pin_Dir);
     faa:	8b 81       	ldd	r24, Y+3	; 0x03
     fac:	81 30       	cpi	r24, 0x01	; 1
     fae:	a1 f4       	brne	.+40     	; 0xfd8 <DIO_U8_Set_Pin_Dir+0x1ac>
     fb0:	a1 e3       	ldi	r26, 0x31	; 49
     fb2:	b0 e0       	ldi	r27, 0x00	; 0
     fb4:	e1 e3       	ldi	r30, 0x31	; 49
     fb6:	f0 e0       	ldi	r31, 0x00	; 0
     fb8:	80 81       	ld	r24, Z
     fba:	48 2f       	mov	r20, r24
     fbc:	8a 81       	ldd	r24, Y+2	; 0x02
     fbe:	28 2f       	mov	r18, r24
     fc0:	30 e0       	ldi	r19, 0x00	; 0
     fc2:	81 e0       	ldi	r24, 0x01	; 1
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	02 2e       	mov	r0, r18
     fc8:	02 c0       	rjmp	.+4      	; 0xfce <DIO_U8_Set_Pin_Dir+0x1a2>
     fca:	88 0f       	add	r24, r24
     fcc:	99 1f       	adc	r25, r25
     fce:	0a 94       	dec	r0
     fd0:	e2 f7       	brpl	.-8      	; 0xfca <DIO_U8_Set_Pin_Dir+0x19e>
     fd2:	84 2b       	or	r24, r20
     fd4:	8c 93       	st	X, r24
     fd6:	14 c0       	rjmp	.+40     	; 0x1000 <DIO_U8_Set_Pin_Dir+0x1d4>
     fd8:	a1 e3       	ldi	r26, 0x31	; 49
     fda:	b0 e0       	ldi	r27, 0x00	; 0
     fdc:	e1 e3       	ldi	r30, 0x31	; 49
     fde:	f0 e0       	ldi	r31, 0x00	; 0
     fe0:	80 81       	ld	r24, Z
     fe2:	48 2f       	mov	r20, r24
     fe4:	8a 81       	ldd	r24, Y+2	; 0x02
     fe6:	28 2f       	mov	r18, r24
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	81 e0       	ldi	r24, 0x01	; 1
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	02 2e       	mov	r0, r18
     ff0:	02 c0       	rjmp	.+4      	; 0xff6 <DIO_U8_Set_Pin_Dir+0x1ca>
     ff2:	88 0f       	add	r24, r24
     ff4:	99 1f       	adc	r25, r25
     ff6:	0a 94       	dec	r0
     ff8:	e2 f7       	brpl	.-8      	; 0xff2 <DIO_U8_Set_Pin_Dir+0x1c6>
     ffa:	80 95       	com	r24
     ffc:	84 23       	and	r24, r20
     ffe:	8c 93       	st	X, r24
	else
	{
		return WRONG_PORT;
	}

	return NO_ERRORS;
    1000:	93 e0       	ldi	r25, 0x03	; 3
    1002:	9c 83       	std	Y+4, r25	; 0x04
    1004:	07 c0       	rjmp	.+14     	; 0x1014 <DIO_U8_Set_Pin_Dir+0x1e8>

				}
			}
			else
			{
				return WRONG_PIN_DIR;
    1006:	1c 82       	std	Y+4, r1	; 0x04
    1008:	05 c0       	rjmp	.+10     	; 0x1014 <DIO_U8_Set_Pin_Dir+0x1e8>
			}
		}
		else{
			return WRONG_PIN;
    100a:	21 e0       	ldi	r18, 0x01	; 1
    100c:	2c 83       	std	Y+4, r18	; 0x04
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <DIO_U8_Set_Pin_Dir+0x1e8>


	}
	else
	{
		return WRONG_PORT;
    1010:	32 e0       	ldi	r19, 0x02	; 2
    1012:	3c 83       	std	Y+4, r19	; 0x04
    1014:	8c 81       	ldd	r24, Y+4	; 0x04
	}

	return NO_ERRORS;
}
    1016:	26 96       	adiw	r28, 0x06	; 6
    1018:	0f b6       	in	r0, 0x3f	; 63
    101a:	f8 94       	cli
    101c:	de bf       	out	0x3e, r29	; 62
    101e:	0f be       	out	0x3f, r0	; 63
    1020:	cd bf       	out	0x3d, r28	; 61
    1022:	cf 91       	pop	r28
    1024:	df 91       	pop	r29
    1026:	08 95       	ret

00001028 <DIO_U8_Set_Port_Dir>:




u8 DIO_U8_Set_Port_Dir(u8 Copy_U8_Port_ID  , u16 Copy_U8_PORT_Dir)
{
    1028:	df 93       	push	r29
    102a:	cf 93       	push	r28
    102c:	00 d0       	rcall	.+0      	; 0x102e <DIO_U8_Set_Port_Dir+0x6>
    102e:	00 d0       	rcall	.+0      	; 0x1030 <DIO_U8_Set_Port_Dir+0x8>
    1030:	00 d0       	rcall	.+0      	; 0x1032 <DIO_U8_Set_Port_Dir+0xa>
    1032:	cd b7       	in	r28, 0x3d	; 61
    1034:	de b7       	in	r29, 0x3e	; 62
    1036:	89 83       	std	Y+1, r24	; 0x01
    1038:	7b 83       	std	Y+3, r23	; 0x03
    103a:	6a 83       	std	Y+2, r22	; 0x02
	if((Copy_U8_Port_ID>=DIO_MIN_U8_PROT_ID)&&(Copy_U8_Port_ID<=DIO_MAX_U8_PROT_ID))
    103c:	89 81       	ldd	r24, Y+1	; 0x01
    103e:	84 30       	cpi	r24, 0x04	; 4
    1040:	08 f0       	brcs	.+2      	; 0x1044 <DIO_U8_Set_Port_Dir+0x1c>
    1042:	3d c0       	rjmp	.+122    	; 0x10be <DIO_U8_Set_Port_Dir+0x96>
	{
		if((Copy_U8_PORT_Dir)>=MIN_DIR_OR_VALUE&&(Copy_U8_PORT_Dir)<=MAX_DIR_OR_VALUE)
    1044:	8a 81       	ldd	r24, Y+2	; 0x02
    1046:	9b 81       	ldd	r25, Y+3	; 0x03
    1048:	8f 3f       	cpi	r24, 0xFF	; 255
    104a:	91 05       	cpc	r25, r1
    104c:	09 f0       	breq	.+2      	; 0x1050 <DIO_U8_Set_Port_Dir+0x28>
    104e:	a8 f5       	brcc	.+106    	; 0x10ba <DIO_U8_Set_Port_Dir+0x92>
		{
				switch(Copy_U8_Port_ID)
    1050:	89 81       	ldd	r24, Y+1	; 0x01
    1052:	28 2f       	mov	r18, r24
    1054:	30 e0       	ldi	r19, 0x00	; 0
    1056:	3e 83       	std	Y+6, r19	; 0x06
    1058:	2d 83       	std	Y+5, r18	; 0x05
    105a:	8d 81       	ldd	r24, Y+5	; 0x05
    105c:	9e 81       	ldd	r25, Y+6	; 0x06
    105e:	81 30       	cpi	r24, 0x01	; 1
    1060:	91 05       	cpc	r25, r1
    1062:	d1 f0       	breq	.+52     	; 0x1098 <DIO_U8_Set_Port_Dir+0x70>
    1064:	2d 81       	ldd	r18, Y+5	; 0x05
    1066:	3e 81       	ldd	r19, Y+6	; 0x06
    1068:	22 30       	cpi	r18, 0x02	; 2
    106a:	31 05       	cpc	r19, r1
    106c:	2c f4       	brge	.+10     	; 0x1078 <DIO_U8_Set_Port_Dir+0x50>
    106e:	8d 81       	ldd	r24, Y+5	; 0x05
    1070:	9e 81       	ldd	r25, Y+6	; 0x06
    1072:	00 97       	sbiw	r24, 0x00	; 0
    1074:	61 f0       	breq	.+24     	; 0x108e <DIO_U8_Set_Port_Dir+0x66>
    1076:	1e c0       	rjmp	.+60     	; 0x10b4 <DIO_U8_Set_Port_Dir+0x8c>
    1078:	2d 81       	ldd	r18, Y+5	; 0x05
    107a:	3e 81       	ldd	r19, Y+6	; 0x06
    107c:	22 30       	cpi	r18, 0x02	; 2
    107e:	31 05       	cpc	r19, r1
    1080:	81 f0       	breq	.+32     	; 0x10a2 <DIO_U8_Set_Port_Dir+0x7a>
    1082:	8d 81       	ldd	r24, Y+5	; 0x05
    1084:	9e 81       	ldd	r25, Y+6	; 0x06
    1086:	83 30       	cpi	r24, 0x03	; 3
    1088:	91 05       	cpc	r25, r1
    108a:	81 f0       	breq	.+32     	; 0x10ac <DIO_U8_Set_Port_Dir+0x84>
    108c:	13 c0       	rjmp	.+38     	; 0x10b4 <DIO_U8_Set_Port_Dir+0x8c>
				{
				case PORTA_ID:
					DIO_U8_DDRA=Copy_U8_PORT_Dir;
    108e:	ea e3       	ldi	r30, 0x3A	; 58
    1090:	f0 e0       	ldi	r31, 0x00	; 0
    1092:	8a 81       	ldd	r24, Y+2	; 0x02
    1094:	80 83       	st	Z, r24
    1096:	0e c0       	rjmp	.+28     	; 0x10b4 <DIO_U8_Set_Port_Dir+0x8c>
					break;
				case PORTB_ID:
					DIO_U8_DDRB=Copy_U8_PORT_Dir;
    1098:	e7 e3       	ldi	r30, 0x37	; 55
    109a:	f0 e0       	ldi	r31, 0x00	; 0
    109c:	8a 81       	ldd	r24, Y+2	; 0x02
    109e:	80 83       	st	Z, r24
    10a0:	09 c0       	rjmp	.+18     	; 0x10b4 <DIO_U8_Set_Port_Dir+0x8c>
					break;
				case PORTC_ID:
					DIO_U8_DDRC=Copy_U8_PORT_Dir;
    10a2:	e4 e3       	ldi	r30, 0x34	; 52
    10a4:	f0 e0       	ldi	r31, 0x00	; 0
    10a6:	8a 81       	ldd	r24, Y+2	; 0x02
    10a8:	80 83       	st	Z, r24
    10aa:	04 c0       	rjmp	.+8      	; 0x10b4 <DIO_U8_Set_Port_Dir+0x8c>
					break;
				case PORTD_ID:
					DIO_U8_DDRD=Copy_U8_PORT_Dir;
    10ac:	e1 e3       	ldi	r30, 0x31	; 49
    10ae:	f0 e0       	ldi	r31, 0x00	; 0
    10b0:	8a 81       	ldd	r24, Y+2	; 0x02
    10b2:	80 83       	st	Z, r24
	else
	{
		return WRONG_PORT;
	}

	return NO_ERRORS;
    10b4:	93 e0       	ldi	r25, 0x03	; 3
    10b6:	9c 83       	std	Y+4, r25	; 0x04
    10b8:	04 c0       	rjmp	.+8      	; 0x10c2 <DIO_U8_Set_Port_Dir+0x9a>

				}
		}
		else
		{
			return WRONG_PORT_DIR;
    10ba:	1c 82       	std	Y+4, r1	; 0x04
    10bc:	02 c0       	rjmp	.+4      	; 0x10c2 <DIO_U8_Set_Port_Dir+0x9a>
		}

	}
	else
	{
		return WRONG_PORT;
    10be:	22 e0       	ldi	r18, 0x02	; 2
    10c0:	2c 83       	std	Y+4, r18	; 0x04
    10c2:	8c 81       	ldd	r24, Y+4	; 0x04
	}

	return NO_ERRORS;
}
    10c4:	26 96       	adiw	r28, 0x06	; 6
    10c6:	0f b6       	in	r0, 0x3f	; 63
    10c8:	f8 94       	cli
    10ca:	de bf       	out	0x3e, r29	; 62
    10cc:	0f be       	out	0x3f, r0	; 63
    10ce:	cd bf       	out	0x3d, r28	; 61
    10d0:	cf 91       	pop	r28
    10d2:	df 91       	pop	r29
    10d4:	08 95       	ret

000010d6 <DIO_U8_Set_Pin_value>:




u8 DIO_U8_Set_Pin_value(u8 Copy_U8_Port_ID , u8 Copy_U8_Pin_ID , u8 Copy_U8_Pin_value)
{
    10d6:	df 93       	push	r29
    10d8:	cf 93       	push	r28
    10da:	00 d0       	rcall	.+0      	; 0x10dc <DIO_U8_Set_Pin_value+0x6>
    10dc:	00 d0       	rcall	.+0      	; 0x10de <DIO_U8_Set_Pin_value+0x8>
    10de:	00 d0       	rcall	.+0      	; 0x10e0 <DIO_U8_Set_Pin_value+0xa>
    10e0:	cd b7       	in	r28, 0x3d	; 61
    10e2:	de b7       	in	r29, 0x3e	; 62
    10e4:	89 83       	std	Y+1, r24	; 0x01
    10e6:	6a 83       	std	Y+2, r22	; 0x02
    10e8:	4b 83       	std	Y+3, r20	; 0x03
	if((Copy_U8_Port_ID>=DIO_MIN_U8_PROT_ID)&&(Copy_U8_Port_ID<=DIO_MAX_U8_PROT_ID))
    10ea:	89 81       	ldd	r24, Y+1	; 0x01
    10ec:	84 30       	cpi	r24, 0x04	; 4
    10ee:	08 f0       	brcs	.+2      	; 0x10f2 <DIO_U8_Set_Pin_value+0x1c>
    10f0:	e4 c0       	rjmp	.+456    	; 0x12ba <DIO_U8_Set_Pin_value+0x1e4>
	{
		if((Copy_U8_Pin_ID>=DIO_MIN_U8_PIN_ID)&&(Copy_U8_Pin_ID<=DIO_MAX_U8_PIN_ID))
    10f2:	8a 81       	ldd	r24, Y+2	; 0x02
    10f4:	88 30       	cpi	r24, 0x08	; 8
    10f6:	08 f0       	brcs	.+2      	; 0x10fa <DIO_U8_Set_Pin_value+0x24>
    10f8:	dd c0       	rjmp	.+442    	; 0x12b4 <DIO_U8_Set_Pin_value+0x1de>
		{
			if((Copy_U8_Pin_value==PIN_LOW)||(Copy_U8_Pin_value==PIN_HIGH))
    10fa:	8b 81       	ldd	r24, Y+3	; 0x03
    10fc:	88 23       	and	r24, r24
    10fe:	21 f0       	breq	.+8      	; 0x1108 <DIO_U8_Set_Pin_value+0x32>
    1100:	8b 81       	ldd	r24, Y+3	; 0x03
    1102:	81 30       	cpi	r24, 0x01	; 1
    1104:	09 f0       	breq	.+2      	; 0x1108 <DIO_U8_Set_Pin_value+0x32>
    1106:	d4 c0       	rjmp	.+424    	; 0x12b0 <DIO_U8_Set_Pin_value+0x1da>
			{
				switch(Copy_U8_Port_ID)
    1108:	89 81       	ldd	r24, Y+1	; 0x01
    110a:	28 2f       	mov	r18, r24
    110c:	30 e0       	ldi	r19, 0x00	; 0
    110e:	3e 83       	std	Y+6, r19	; 0x06
    1110:	2d 83       	std	Y+5, r18	; 0x05
    1112:	8d 81       	ldd	r24, Y+5	; 0x05
    1114:	9e 81       	ldd	r25, Y+6	; 0x06
    1116:	81 30       	cpi	r24, 0x01	; 1
    1118:	91 05       	cpc	r25, r1
    111a:	09 f4       	brne	.+2      	; 0x111e <DIO_U8_Set_Pin_value+0x48>
    111c:	43 c0       	rjmp	.+134    	; 0x11a4 <DIO_U8_Set_Pin_value+0xce>
    111e:	2d 81       	ldd	r18, Y+5	; 0x05
    1120:	3e 81       	ldd	r19, Y+6	; 0x06
    1122:	22 30       	cpi	r18, 0x02	; 2
    1124:	31 05       	cpc	r19, r1
    1126:	2c f4       	brge	.+10     	; 0x1132 <DIO_U8_Set_Pin_value+0x5c>
    1128:	8d 81       	ldd	r24, Y+5	; 0x05
    112a:	9e 81       	ldd	r25, Y+6	; 0x06
    112c:	00 97       	sbiw	r24, 0x00	; 0
    112e:	71 f0       	breq	.+28     	; 0x114c <DIO_U8_Set_Pin_value+0x76>
    1130:	bc c0       	rjmp	.+376    	; 0x12aa <DIO_U8_Set_Pin_value+0x1d4>
    1132:	2d 81       	ldd	r18, Y+5	; 0x05
    1134:	3e 81       	ldd	r19, Y+6	; 0x06
    1136:	22 30       	cpi	r18, 0x02	; 2
    1138:	31 05       	cpc	r19, r1
    113a:	09 f4       	brne	.+2      	; 0x113e <DIO_U8_Set_Pin_value+0x68>
    113c:	5f c0       	rjmp	.+190    	; 0x11fc <DIO_U8_Set_Pin_value+0x126>
    113e:	8d 81       	ldd	r24, Y+5	; 0x05
    1140:	9e 81       	ldd	r25, Y+6	; 0x06
    1142:	83 30       	cpi	r24, 0x03	; 3
    1144:	91 05       	cpc	r25, r1
    1146:	09 f4       	brne	.+2      	; 0x114a <DIO_U8_Set_Pin_value+0x74>
    1148:	85 c0       	rjmp	.+266    	; 0x1254 <DIO_U8_Set_Pin_value+0x17e>
    114a:	af c0       	rjmp	.+350    	; 0x12aa <DIO_U8_Set_Pin_value+0x1d4>
				{
				case PORTA_ID:
					Assign_Bit(DIO_U8_PORTA,Copy_U8_Pin_ID,Copy_U8_Pin_value);
    114c:	8b 81       	ldd	r24, Y+3	; 0x03
    114e:	81 30       	cpi	r24, 0x01	; 1
    1150:	a1 f4       	brne	.+40     	; 0x117a <DIO_U8_Set_Pin_value+0xa4>
    1152:	ab e3       	ldi	r26, 0x3B	; 59
    1154:	b0 e0       	ldi	r27, 0x00	; 0
    1156:	eb e3       	ldi	r30, 0x3B	; 59
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	80 81       	ld	r24, Z
    115c:	48 2f       	mov	r20, r24
    115e:	8a 81       	ldd	r24, Y+2	; 0x02
    1160:	28 2f       	mov	r18, r24
    1162:	30 e0       	ldi	r19, 0x00	; 0
    1164:	81 e0       	ldi	r24, 0x01	; 1
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	02 2e       	mov	r0, r18
    116a:	02 c0       	rjmp	.+4      	; 0x1170 <DIO_U8_Set_Pin_value+0x9a>
    116c:	88 0f       	add	r24, r24
    116e:	99 1f       	adc	r25, r25
    1170:	0a 94       	dec	r0
    1172:	e2 f7       	brpl	.-8      	; 0x116c <DIO_U8_Set_Pin_value+0x96>
    1174:	84 2b       	or	r24, r20
    1176:	8c 93       	st	X, r24
    1178:	98 c0       	rjmp	.+304    	; 0x12aa <DIO_U8_Set_Pin_value+0x1d4>
    117a:	ab e3       	ldi	r26, 0x3B	; 59
    117c:	b0 e0       	ldi	r27, 0x00	; 0
    117e:	eb e3       	ldi	r30, 0x3B	; 59
    1180:	f0 e0       	ldi	r31, 0x00	; 0
    1182:	80 81       	ld	r24, Z
    1184:	48 2f       	mov	r20, r24
    1186:	8a 81       	ldd	r24, Y+2	; 0x02
    1188:	28 2f       	mov	r18, r24
    118a:	30 e0       	ldi	r19, 0x00	; 0
    118c:	81 e0       	ldi	r24, 0x01	; 1
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	02 2e       	mov	r0, r18
    1192:	02 c0       	rjmp	.+4      	; 0x1198 <DIO_U8_Set_Pin_value+0xc2>
    1194:	88 0f       	add	r24, r24
    1196:	99 1f       	adc	r25, r25
    1198:	0a 94       	dec	r0
    119a:	e2 f7       	brpl	.-8      	; 0x1194 <DIO_U8_Set_Pin_value+0xbe>
    119c:	80 95       	com	r24
    119e:	84 23       	and	r24, r20
    11a0:	8c 93       	st	X, r24
    11a2:	83 c0       	rjmp	.+262    	; 0x12aa <DIO_U8_Set_Pin_value+0x1d4>
					break;
				case PORTB_ID:
					Assign_Bit(DIO_U8_PORTB,Copy_U8_Pin_ID,Copy_U8_Pin_value);
    11a4:	8b 81       	ldd	r24, Y+3	; 0x03
    11a6:	81 30       	cpi	r24, 0x01	; 1
    11a8:	a1 f4       	brne	.+40     	; 0x11d2 <DIO_U8_Set_Pin_value+0xfc>
    11aa:	a8 e3       	ldi	r26, 0x38	; 56
    11ac:	b0 e0       	ldi	r27, 0x00	; 0
    11ae:	e8 e3       	ldi	r30, 0x38	; 56
    11b0:	f0 e0       	ldi	r31, 0x00	; 0
    11b2:	80 81       	ld	r24, Z
    11b4:	48 2f       	mov	r20, r24
    11b6:	8a 81       	ldd	r24, Y+2	; 0x02
    11b8:	28 2f       	mov	r18, r24
    11ba:	30 e0       	ldi	r19, 0x00	; 0
    11bc:	81 e0       	ldi	r24, 0x01	; 1
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	02 2e       	mov	r0, r18
    11c2:	02 c0       	rjmp	.+4      	; 0x11c8 <DIO_U8_Set_Pin_value+0xf2>
    11c4:	88 0f       	add	r24, r24
    11c6:	99 1f       	adc	r25, r25
    11c8:	0a 94       	dec	r0
    11ca:	e2 f7       	brpl	.-8      	; 0x11c4 <DIO_U8_Set_Pin_value+0xee>
    11cc:	84 2b       	or	r24, r20
    11ce:	8c 93       	st	X, r24
    11d0:	6c c0       	rjmp	.+216    	; 0x12aa <DIO_U8_Set_Pin_value+0x1d4>
    11d2:	a8 e3       	ldi	r26, 0x38	; 56
    11d4:	b0 e0       	ldi	r27, 0x00	; 0
    11d6:	e8 e3       	ldi	r30, 0x38	; 56
    11d8:	f0 e0       	ldi	r31, 0x00	; 0
    11da:	80 81       	ld	r24, Z
    11dc:	48 2f       	mov	r20, r24
    11de:	8a 81       	ldd	r24, Y+2	; 0x02
    11e0:	28 2f       	mov	r18, r24
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	81 e0       	ldi	r24, 0x01	; 1
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	02 2e       	mov	r0, r18
    11ea:	02 c0       	rjmp	.+4      	; 0x11f0 <DIO_U8_Set_Pin_value+0x11a>
    11ec:	88 0f       	add	r24, r24
    11ee:	99 1f       	adc	r25, r25
    11f0:	0a 94       	dec	r0
    11f2:	e2 f7       	brpl	.-8      	; 0x11ec <DIO_U8_Set_Pin_value+0x116>
    11f4:	80 95       	com	r24
    11f6:	84 23       	and	r24, r20
    11f8:	8c 93       	st	X, r24
    11fa:	57 c0       	rjmp	.+174    	; 0x12aa <DIO_U8_Set_Pin_value+0x1d4>
					break;
				case PORTC_ID:
					Assign_Bit(DIO_U8_PORTC,Copy_U8_Pin_ID,Copy_U8_Pin_value);
    11fc:	8b 81       	ldd	r24, Y+3	; 0x03
    11fe:	81 30       	cpi	r24, 0x01	; 1
    1200:	a1 f4       	brne	.+40     	; 0x122a <DIO_U8_Set_Pin_value+0x154>
    1202:	a5 e3       	ldi	r26, 0x35	; 53
    1204:	b0 e0       	ldi	r27, 0x00	; 0
    1206:	e5 e3       	ldi	r30, 0x35	; 53
    1208:	f0 e0       	ldi	r31, 0x00	; 0
    120a:	80 81       	ld	r24, Z
    120c:	48 2f       	mov	r20, r24
    120e:	8a 81       	ldd	r24, Y+2	; 0x02
    1210:	28 2f       	mov	r18, r24
    1212:	30 e0       	ldi	r19, 0x00	; 0
    1214:	81 e0       	ldi	r24, 0x01	; 1
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	02 2e       	mov	r0, r18
    121a:	02 c0       	rjmp	.+4      	; 0x1220 <DIO_U8_Set_Pin_value+0x14a>
    121c:	88 0f       	add	r24, r24
    121e:	99 1f       	adc	r25, r25
    1220:	0a 94       	dec	r0
    1222:	e2 f7       	brpl	.-8      	; 0x121c <DIO_U8_Set_Pin_value+0x146>
    1224:	84 2b       	or	r24, r20
    1226:	8c 93       	st	X, r24
    1228:	40 c0       	rjmp	.+128    	; 0x12aa <DIO_U8_Set_Pin_value+0x1d4>
    122a:	a5 e3       	ldi	r26, 0x35	; 53
    122c:	b0 e0       	ldi	r27, 0x00	; 0
    122e:	e5 e3       	ldi	r30, 0x35	; 53
    1230:	f0 e0       	ldi	r31, 0x00	; 0
    1232:	80 81       	ld	r24, Z
    1234:	48 2f       	mov	r20, r24
    1236:	8a 81       	ldd	r24, Y+2	; 0x02
    1238:	28 2f       	mov	r18, r24
    123a:	30 e0       	ldi	r19, 0x00	; 0
    123c:	81 e0       	ldi	r24, 0x01	; 1
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	02 2e       	mov	r0, r18
    1242:	02 c0       	rjmp	.+4      	; 0x1248 <DIO_U8_Set_Pin_value+0x172>
    1244:	88 0f       	add	r24, r24
    1246:	99 1f       	adc	r25, r25
    1248:	0a 94       	dec	r0
    124a:	e2 f7       	brpl	.-8      	; 0x1244 <DIO_U8_Set_Pin_value+0x16e>
    124c:	80 95       	com	r24
    124e:	84 23       	and	r24, r20
    1250:	8c 93       	st	X, r24
    1252:	2b c0       	rjmp	.+86     	; 0x12aa <DIO_U8_Set_Pin_value+0x1d4>
					break;
				case PORTD_ID:
					Assign_Bit(DIO_U8_PORTD,Copy_U8_Pin_ID,Copy_U8_Pin_value);
    1254:	8b 81       	ldd	r24, Y+3	; 0x03
    1256:	81 30       	cpi	r24, 0x01	; 1
    1258:	a1 f4       	brne	.+40     	; 0x1282 <DIO_U8_Set_Pin_value+0x1ac>
    125a:	a2 e3       	ldi	r26, 0x32	; 50
    125c:	b0 e0       	ldi	r27, 0x00	; 0
    125e:	e2 e3       	ldi	r30, 0x32	; 50
    1260:	f0 e0       	ldi	r31, 0x00	; 0
    1262:	80 81       	ld	r24, Z
    1264:	48 2f       	mov	r20, r24
    1266:	8a 81       	ldd	r24, Y+2	; 0x02
    1268:	28 2f       	mov	r18, r24
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	81 e0       	ldi	r24, 0x01	; 1
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	02 2e       	mov	r0, r18
    1272:	02 c0       	rjmp	.+4      	; 0x1278 <DIO_U8_Set_Pin_value+0x1a2>
    1274:	88 0f       	add	r24, r24
    1276:	99 1f       	adc	r25, r25
    1278:	0a 94       	dec	r0
    127a:	e2 f7       	brpl	.-8      	; 0x1274 <DIO_U8_Set_Pin_value+0x19e>
    127c:	84 2b       	or	r24, r20
    127e:	8c 93       	st	X, r24
    1280:	14 c0       	rjmp	.+40     	; 0x12aa <DIO_U8_Set_Pin_value+0x1d4>
    1282:	a2 e3       	ldi	r26, 0x32	; 50
    1284:	b0 e0       	ldi	r27, 0x00	; 0
    1286:	e2 e3       	ldi	r30, 0x32	; 50
    1288:	f0 e0       	ldi	r31, 0x00	; 0
    128a:	80 81       	ld	r24, Z
    128c:	48 2f       	mov	r20, r24
    128e:	8a 81       	ldd	r24, Y+2	; 0x02
    1290:	28 2f       	mov	r18, r24
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	81 e0       	ldi	r24, 0x01	; 1
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	02 2e       	mov	r0, r18
    129a:	02 c0       	rjmp	.+4      	; 0x12a0 <DIO_U8_Set_Pin_value+0x1ca>
    129c:	88 0f       	add	r24, r24
    129e:	99 1f       	adc	r25, r25
    12a0:	0a 94       	dec	r0
    12a2:	e2 f7       	brpl	.-8      	; 0x129c <DIO_U8_Set_Pin_value+0x1c6>
    12a4:	80 95       	com	r24
    12a6:	84 23       	and	r24, r20
    12a8:	8c 93       	st	X, r24
	else
	{
		return WRONG_PORT;
	}

	return NO_ERRORS;
    12aa:	93 e0       	ldi	r25, 0x03	; 3
    12ac:	9c 83       	std	Y+4, r25	; 0x04
    12ae:	07 c0       	rjmp	.+14     	; 0x12be <DIO_U8_Set_Pin_value+0x1e8>

				}
			}
			else
			{
				return WRONG_PIN_value;
    12b0:	1c 82       	std	Y+4, r1	; 0x04
    12b2:	05 c0       	rjmp	.+10     	; 0x12be <DIO_U8_Set_Pin_value+0x1e8>
			}
		}
		else{
			return WRONG_PIN;
    12b4:	21 e0       	ldi	r18, 0x01	; 1
    12b6:	2c 83       	std	Y+4, r18	; 0x04
    12b8:	02 c0       	rjmp	.+4      	; 0x12be <DIO_U8_Set_Pin_value+0x1e8>


	}
	else
	{
		return WRONG_PORT;
    12ba:	32 e0       	ldi	r19, 0x02	; 2
    12bc:	3c 83       	std	Y+4, r19	; 0x04
    12be:	8c 81       	ldd	r24, Y+4	; 0x04
	}

	return NO_ERRORS;
}
    12c0:	26 96       	adiw	r28, 0x06	; 6
    12c2:	0f b6       	in	r0, 0x3f	; 63
    12c4:	f8 94       	cli
    12c6:	de bf       	out	0x3e, r29	; 62
    12c8:	0f be       	out	0x3f, r0	; 63
    12ca:	cd bf       	out	0x3d, r28	; 61
    12cc:	cf 91       	pop	r28
    12ce:	df 91       	pop	r29
    12d0:	08 95       	ret

000012d2 <DIO_U8_Set_Port_Value>:




u8 DIO_U8_Set_Port_Value(u8 Copy_U8_Port_ID  , u16 Copy_U8_PORT_value)
{
    12d2:	df 93       	push	r29
    12d4:	cf 93       	push	r28
    12d6:	00 d0       	rcall	.+0      	; 0x12d8 <DIO_U8_Set_Port_Value+0x6>
    12d8:	00 d0       	rcall	.+0      	; 0x12da <DIO_U8_Set_Port_Value+0x8>
    12da:	00 d0       	rcall	.+0      	; 0x12dc <DIO_U8_Set_Port_Value+0xa>
    12dc:	cd b7       	in	r28, 0x3d	; 61
    12de:	de b7       	in	r29, 0x3e	; 62
    12e0:	89 83       	std	Y+1, r24	; 0x01
    12e2:	7b 83       	std	Y+3, r23	; 0x03
    12e4:	6a 83       	std	Y+2, r22	; 0x02
	if((Copy_U8_PORT_value>=DIO_MIN_U8_PROT_ID)&&(Copy_U8_PORT_value<=DIO_MAX_U8_PROT_ID))
    12e6:	8a 81       	ldd	r24, Y+2	; 0x02
    12e8:	9b 81       	ldd	r25, Y+3	; 0x03
    12ea:	84 30       	cpi	r24, 0x04	; 4
    12ec:	91 05       	cpc	r25, r1
    12ee:	08 f0       	brcs	.+2      	; 0x12f2 <DIO_U8_Set_Port_Value+0x20>
    12f0:	3d c0       	rjmp	.+122    	; 0x136c <DIO_U8_Set_Port_Value+0x9a>
	{
			if((Copy_U8_PORT_value)>=MIN_DIR_OR_VALUE&&(Copy_U8_PORT_value)<=MAX_DIR_OR_VALUE)
    12f2:	8a 81       	ldd	r24, Y+2	; 0x02
    12f4:	9b 81       	ldd	r25, Y+3	; 0x03
    12f6:	8f 3f       	cpi	r24, 0xFF	; 255
    12f8:	91 05       	cpc	r25, r1
    12fa:	09 f0       	breq	.+2      	; 0x12fe <DIO_U8_Set_Port_Value+0x2c>
    12fc:	a8 f5       	brcc	.+106    	; 0x1368 <DIO_U8_Set_Port_Value+0x96>
			{
				switch(Copy_U8_Port_ID)
    12fe:	89 81       	ldd	r24, Y+1	; 0x01
    1300:	28 2f       	mov	r18, r24
    1302:	30 e0       	ldi	r19, 0x00	; 0
    1304:	3e 83       	std	Y+6, r19	; 0x06
    1306:	2d 83       	std	Y+5, r18	; 0x05
    1308:	8d 81       	ldd	r24, Y+5	; 0x05
    130a:	9e 81       	ldd	r25, Y+6	; 0x06
    130c:	81 30       	cpi	r24, 0x01	; 1
    130e:	91 05       	cpc	r25, r1
    1310:	d1 f0       	breq	.+52     	; 0x1346 <DIO_U8_Set_Port_Value+0x74>
    1312:	2d 81       	ldd	r18, Y+5	; 0x05
    1314:	3e 81       	ldd	r19, Y+6	; 0x06
    1316:	22 30       	cpi	r18, 0x02	; 2
    1318:	31 05       	cpc	r19, r1
    131a:	2c f4       	brge	.+10     	; 0x1326 <DIO_U8_Set_Port_Value+0x54>
    131c:	8d 81       	ldd	r24, Y+5	; 0x05
    131e:	9e 81       	ldd	r25, Y+6	; 0x06
    1320:	00 97       	sbiw	r24, 0x00	; 0
    1322:	61 f0       	breq	.+24     	; 0x133c <DIO_U8_Set_Port_Value+0x6a>
    1324:	1e c0       	rjmp	.+60     	; 0x1362 <DIO_U8_Set_Port_Value+0x90>
    1326:	2d 81       	ldd	r18, Y+5	; 0x05
    1328:	3e 81       	ldd	r19, Y+6	; 0x06
    132a:	22 30       	cpi	r18, 0x02	; 2
    132c:	31 05       	cpc	r19, r1
    132e:	81 f0       	breq	.+32     	; 0x1350 <DIO_U8_Set_Port_Value+0x7e>
    1330:	8d 81       	ldd	r24, Y+5	; 0x05
    1332:	9e 81       	ldd	r25, Y+6	; 0x06
    1334:	83 30       	cpi	r24, 0x03	; 3
    1336:	91 05       	cpc	r25, r1
    1338:	81 f0       	breq	.+32     	; 0x135a <DIO_U8_Set_Port_Value+0x88>
    133a:	13 c0       	rjmp	.+38     	; 0x1362 <DIO_U8_Set_Port_Value+0x90>
				{
				case PORTA_ID:
					DIO_U8_PORTA=Copy_U8_PORT_value;
    133c:	eb e3       	ldi	r30, 0x3B	; 59
    133e:	f0 e0       	ldi	r31, 0x00	; 0
    1340:	8a 81       	ldd	r24, Y+2	; 0x02
    1342:	80 83       	st	Z, r24
    1344:	0e c0       	rjmp	.+28     	; 0x1362 <DIO_U8_Set_Port_Value+0x90>
					break;
				case PORTB_ID:
					DIO_U8_PORTB=Copy_U8_PORT_value;
    1346:	e8 e3       	ldi	r30, 0x38	; 56
    1348:	f0 e0       	ldi	r31, 0x00	; 0
    134a:	8a 81       	ldd	r24, Y+2	; 0x02
    134c:	80 83       	st	Z, r24
    134e:	09 c0       	rjmp	.+18     	; 0x1362 <DIO_U8_Set_Port_Value+0x90>
					break;
				case PORTC_ID:
					DIO_U8_PORTC=Copy_U8_PORT_value;
    1350:	e5 e3       	ldi	r30, 0x35	; 53
    1352:	f0 e0       	ldi	r31, 0x00	; 0
    1354:	8a 81       	ldd	r24, Y+2	; 0x02
    1356:	80 83       	st	Z, r24
    1358:	04 c0       	rjmp	.+8      	; 0x1362 <DIO_U8_Set_Port_Value+0x90>
					break;
				case PORTD_ID:
					DIO_U8_PORTD=Copy_U8_PORT_value;
    135a:	e2 e3       	ldi	r30, 0x32	; 50
    135c:	f0 e0       	ldi	r31, 0x00	; 0
    135e:	8a 81       	ldd	r24, Y+2	; 0x02
    1360:	80 83       	st	Z, r24
	else
	{
		return WRONG_PORT;
	}

	return NO_ERRORS;
    1362:	93 e0       	ldi	r25, 0x03	; 3
    1364:	9c 83       	std	Y+4, r25	; 0x04
    1366:	04 c0       	rjmp	.+8      	; 0x1370 <DIO_U8_Set_Port_Value+0x9e>

				}
			}
			else
			{
				return WRONG_PORT_VALUE;
    1368:	1c 82       	std	Y+4, r1	; 0x04
    136a:	02 c0       	rjmp	.+4      	; 0x1370 <DIO_U8_Set_Port_Value+0x9e>


	}
	else
	{
		return WRONG_PORT;
    136c:	22 e0       	ldi	r18, 0x02	; 2
    136e:	2c 83       	std	Y+4, r18	; 0x04
    1370:	8c 81       	ldd	r24, Y+4	; 0x04
	}

	return NO_ERRORS;
}
    1372:	26 96       	adiw	r28, 0x06	; 6
    1374:	0f b6       	in	r0, 0x3f	; 63
    1376:	f8 94       	cli
    1378:	de bf       	out	0x3e, r29	; 62
    137a:	0f be       	out	0x3f, r0	; 63
    137c:	cd bf       	out	0x3d, r28	; 61
    137e:	cf 91       	pop	r28
    1380:	df 91       	pop	r29
    1382:	08 95       	ret

00001384 <DIO_U8_Get_pin_value>:




u8 DIO_U8_Get_pin_value(u8 Copy_U8_Port_ID,u8 Copy_U8_Pin_ID , u8 *Copy_U8_Pin_Value)
{
    1384:	df 93       	push	r29
    1386:	cf 93       	push	r28
    1388:	cd b7       	in	r28, 0x3d	; 61
    138a:	de b7       	in	r29, 0x3e	; 62
    138c:	28 97       	sbiw	r28, 0x08	; 8
    138e:	0f b6       	in	r0, 0x3f	; 63
    1390:	f8 94       	cli
    1392:	de bf       	out	0x3e, r29	; 62
    1394:	0f be       	out	0x3f, r0	; 63
    1396:	cd bf       	out	0x3d, r28	; 61
    1398:	89 83       	std	Y+1, r24	; 0x01
    139a:	6a 83       	std	Y+2, r22	; 0x02
    139c:	5c 83       	std	Y+4, r21	; 0x04
    139e:	4b 83       	std	Y+3, r20	; 0x03
	if((Copy_U8_Port_ID>=DIO_MIN_U8_PROT_ID)&&(Copy_U8_Port_ID<=DIO_MAX_U8_PROT_ID))
    13a0:	89 81       	ldd	r24, Y+1	; 0x01
    13a2:	84 30       	cpi	r24, 0x04	; 4
    13a4:	08 f0       	brcs	.+2      	; 0x13a8 <DIO_U8_Get_pin_value+0x24>
    13a6:	78 c0       	rjmp	.+240    	; 0x1498 <DIO_U8_Get_pin_value+0x114>
	{
		if((Copy_U8_Pin_ID>=DIO_MIN_U8_PIN_ID)&&(Copy_U8_Pin_ID<=DIO_MAX_U8_PIN_ID))
    13a8:	8a 81       	ldd	r24, Y+2	; 0x02
    13aa:	88 30       	cpi	r24, 0x08	; 8
    13ac:	08 f0       	brcs	.+2      	; 0x13b0 <DIO_U8_Get_pin_value+0x2c>
    13ae:	71 c0       	rjmp	.+226    	; 0x1492 <DIO_U8_Get_pin_value+0x10e>
		{

			switch(Copy_U8_Port_ID)
    13b0:	89 81       	ldd	r24, Y+1	; 0x01
    13b2:	28 2f       	mov	r18, r24
    13b4:	30 e0       	ldi	r19, 0x00	; 0
    13b6:	3f 83       	std	Y+7, r19	; 0x07
    13b8:	2e 83       	std	Y+6, r18	; 0x06
    13ba:	4e 81       	ldd	r20, Y+6	; 0x06
    13bc:	5f 81       	ldd	r21, Y+7	; 0x07
    13be:	41 30       	cpi	r20, 0x01	; 1
    13c0:	51 05       	cpc	r21, r1
    13c2:	59 f1       	breq	.+86     	; 0x141a <DIO_U8_Get_pin_value+0x96>
    13c4:	8e 81       	ldd	r24, Y+6	; 0x06
    13c6:	9f 81       	ldd	r25, Y+7	; 0x07
    13c8:	82 30       	cpi	r24, 0x02	; 2
    13ca:	91 05       	cpc	r25, r1
    13cc:	34 f4       	brge	.+12     	; 0x13da <DIO_U8_Get_pin_value+0x56>
    13ce:	2e 81       	ldd	r18, Y+6	; 0x06
    13d0:	3f 81       	ldd	r19, Y+7	; 0x07
    13d2:	21 15       	cp	r18, r1
    13d4:	31 05       	cpc	r19, r1
    13d6:	69 f0       	breq	.+26     	; 0x13f2 <DIO_U8_Get_pin_value+0x6e>
    13d8:	5b c0       	rjmp	.+182    	; 0x1490 <DIO_U8_Get_pin_value+0x10c>
    13da:	4e 81       	ldd	r20, Y+6	; 0x06
    13dc:	5f 81       	ldd	r21, Y+7	; 0x07
    13de:	42 30       	cpi	r20, 0x02	; 2
    13e0:	51 05       	cpc	r21, r1
    13e2:	79 f1       	breq	.+94     	; 0x1442 <DIO_U8_Get_pin_value+0xbe>
    13e4:	8e 81       	ldd	r24, Y+6	; 0x06
    13e6:	9f 81       	ldd	r25, Y+7	; 0x07
    13e8:	83 30       	cpi	r24, 0x03	; 3
    13ea:	91 05       	cpc	r25, r1
    13ec:	09 f4       	brne	.+2      	; 0x13f0 <DIO_U8_Get_pin_value+0x6c>
    13ee:	3d c0       	rjmp	.+122    	; 0x146a <DIO_U8_Get_pin_value+0xe6>
    13f0:	4f c0       	rjmp	.+158    	; 0x1490 <DIO_U8_Get_pin_value+0x10c>
							{
				case PORTA_ID:
					*Copy_U8_Pin_Value = Get_Bit(DIO_U8_PINA,Copy_U8_Pin_ID);
    13f2:	e9 e3       	ldi	r30, 0x39	; 57
    13f4:	f0 e0       	ldi	r31, 0x00	; 0
    13f6:	80 81       	ld	r24, Z
    13f8:	28 2f       	mov	r18, r24
    13fa:	30 e0       	ldi	r19, 0x00	; 0
    13fc:	8a 81       	ldd	r24, Y+2	; 0x02
    13fe:	88 2f       	mov	r24, r24
    1400:	90 e0       	ldi	r25, 0x00	; 0
    1402:	a9 01       	movw	r20, r18
    1404:	02 c0       	rjmp	.+4      	; 0x140a <DIO_U8_Get_pin_value+0x86>
    1406:	55 95       	asr	r21
    1408:	47 95       	ror	r20
    140a:	8a 95       	dec	r24
    140c:	e2 f7       	brpl	.-8      	; 0x1406 <DIO_U8_Get_pin_value+0x82>
    140e:	ca 01       	movw	r24, r20
    1410:	81 70       	andi	r24, 0x01	; 1
    1412:	eb 81       	ldd	r30, Y+3	; 0x03
    1414:	fc 81       	ldd	r31, Y+4	; 0x04
    1416:	80 83       	st	Z, r24
    1418:	3b c0       	rjmp	.+118    	; 0x1490 <DIO_U8_Get_pin_value+0x10c>
					break;
				case PORTB_ID:
					*Copy_U8_Pin_Value = Get_Bit(DIO_U8_PINB,Copy_U8_Pin_ID);
    141a:	e6 e3       	ldi	r30, 0x36	; 54
    141c:	f0 e0       	ldi	r31, 0x00	; 0
    141e:	80 81       	ld	r24, Z
    1420:	28 2f       	mov	r18, r24
    1422:	30 e0       	ldi	r19, 0x00	; 0
    1424:	8a 81       	ldd	r24, Y+2	; 0x02
    1426:	88 2f       	mov	r24, r24
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	a9 01       	movw	r20, r18
    142c:	02 c0       	rjmp	.+4      	; 0x1432 <DIO_U8_Get_pin_value+0xae>
    142e:	55 95       	asr	r21
    1430:	47 95       	ror	r20
    1432:	8a 95       	dec	r24
    1434:	e2 f7       	brpl	.-8      	; 0x142e <DIO_U8_Get_pin_value+0xaa>
    1436:	ca 01       	movw	r24, r20
    1438:	81 70       	andi	r24, 0x01	; 1
    143a:	eb 81       	ldd	r30, Y+3	; 0x03
    143c:	fc 81       	ldd	r31, Y+4	; 0x04
    143e:	80 83       	st	Z, r24
    1440:	27 c0       	rjmp	.+78     	; 0x1490 <DIO_U8_Get_pin_value+0x10c>
					break;
				case PORTC_ID:
					*Copy_U8_Pin_Value = Get_Bit(DIO_U8_PINC,Copy_U8_Pin_ID);
    1442:	e3 e3       	ldi	r30, 0x33	; 51
    1444:	f0 e0       	ldi	r31, 0x00	; 0
    1446:	80 81       	ld	r24, Z
    1448:	28 2f       	mov	r18, r24
    144a:	30 e0       	ldi	r19, 0x00	; 0
    144c:	8a 81       	ldd	r24, Y+2	; 0x02
    144e:	88 2f       	mov	r24, r24
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	a9 01       	movw	r20, r18
    1454:	02 c0       	rjmp	.+4      	; 0x145a <DIO_U8_Get_pin_value+0xd6>
    1456:	55 95       	asr	r21
    1458:	47 95       	ror	r20
    145a:	8a 95       	dec	r24
    145c:	e2 f7       	brpl	.-8      	; 0x1456 <DIO_U8_Get_pin_value+0xd2>
    145e:	ca 01       	movw	r24, r20
    1460:	81 70       	andi	r24, 0x01	; 1
    1462:	eb 81       	ldd	r30, Y+3	; 0x03
    1464:	fc 81       	ldd	r31, Y+4	; 0x04
    1466:	80 83       	st	Z, r24
    1468:	13 c0       	rjmp	.+38     	; 0x1490 <DIO_U8_Get_pin_value+0x10c>
					break;
				case PORTD_ID:
					*Copy_U8_Pin_Value = Get_Bit(DIO_U8_PIND,Copy_U8_Pin_ID);
    146a:	e0 e3       	ldi	r30, 0x30	; 48
    146c:	f0 e0       	ldi	r31, 0x00	; 0
    146e:	80 81       	ld	r24, Z
    1470:	28 2f       	mov	r18, r24
    1472:	30 e0       	ldi	r19, 0x00	; 0
    1474:	8a 81       	ldd	r24, Y+2	; 0x02
    1476:	88 2f       	mov	r24, r24
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	a9 01       	movw	r20, r18
    147c:	02 c0       	rjmp	.+4      	; 0x1482 <DIO_U8_Get_pin_value+0xfe>
    147e:	55 95       	asr	r21
    1480:	47 95       	ror	r20
    1482:	8a 95       	dec	r24
    1484:	e2 f7       	brpl	.-8      	; 0x147e <DIO_U8_Get_pin_value+0xfa>
    1486:	ca 01       	movw	r24, r20
    1488:	81 70       	andi	r24, 0x01	; 1
    148a:	eb 81       	ldd	r30, Y+3	; 0x03
    148c:	fc 81       	ldd	r31, Y+4	; 0x04
    148e:	80 83       	st	Z, r24
    1490:	07 c0       	rjmp	.+14     	; 0x14a0 <DIO_U8_Get_pin_value+0x11c>
					break;
							}
		}
		else
		{
			return WRONG_PIN;
    1492:	51 e0       	ldi	r21, 0x01	; 1
    1494:	5d 83       	std	Y+5, r21	; 0x05
    1496:	02 c0       	rjmp	.+4      	; 0x149c <DIO_U8_Get_pin_value+0x118>
		}
	}
	else
	{
		return WRONG_PORT;
    1498:	82 e0       	ldi	r24, 0x02	; 2
    149a:	8d 83       	std	Y+5, r24	; 0x05
    149c:	9d 81       	ldd	r25, Y+5	; 0x05
    149e:	98 87       	std	Y+8, r25	; 0x08
	}
}
    14a0:	88 85       	ldd	r24, Y+8	; 0x08
    14a2:	28 96       	adiw	r28, 0x08	; 8
    14a4:	0f b6       	in	r0, 0x3f	; 63
    14a6:	f8 94       	cli
    14a8:	de bf       	out	0x3e, r29	; 62
    14aa:	0f be       	out	0x3f, r0	; 63
    14ac:	cd bf       	out	0x3d, r28	; 61
    14ae:	cf 91       	pop	r28
    14b0:	df 91       	pop	r29
    14b2:	08 95       	ret

000014b4 <LCD_void_Init>:
#include"LCD_private.h"




void LCD_void_Init(void){
    14b4:	0f 93       	push	r16
    14b6:	1f 93       	push	r17
    14b8:	df 93       	push	r29
    14ba:	cf 93       	push	r28
    14bc:	cd b7       	in	r28, 0x3d	; 61
    14be:	de b7       	in	r29, 0x3e	; 62
    14c0:	cc 54       	subi	r28, 0x4C	; 76
    14c2:	d0 40       	sbci	r29, 0x00	; 0
    14c4:	0f b6       	in	r0, 0x3f	; 63
    14c6:	f8 94       	cli
    14c8:	de bf       	out	0x3e, r29	; 62
    14ca:	0f be       	out	0x3f, r0	; 63
    14cc:	cd bf       	out	0x3d, r28	; 61
    14ce:	fe 01       	movw	r30, r28
    14d0:	e7 5b       	subi	r30, 0xB7	; 183
    14d2:	ff 4f       	sbci	r31, 0xFF	; 255
    14d4:	80 e0       	ldi	r24, 0x00	; 0
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	ac e0       	ldi	r26, 0x0C	; 12
    14da:	b2 e4       	ldi	r27, 0x42	; 66
    14dc:	80 83       	st	Z, r24
    14de:	91 83       	std	Z+1, r25	; 0x01
    14e0:	a2 83       	std	Z+2, r26	; 0x02
    14e2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14e4:	8e 01       	movw	r16, r28
    14e6:	0b 5b       	subi	r16, 0xBB	; 187
    14e8:	1f 4f       	sbci	r17, 0xFF	; 255
    14ea:	fe 01       	movw	r30, r28
    14ec:	e7 5b       	subi	r30, 0xB7	; 183
    14ee:	ff 4f       	sbci	r31, 0xFF	; 255
    14f0:	60 81       	ld	r22, Z
    14f2:	71 81       	ldd	r23, Z+1	; 0x01
    14f4:	82 81       	ldd	r24, Z+2	; 0x02
    14f6:	93 81       	ldd	r25, Z+3	; 0x03
    14f8:	20 e0       	ldi	r18, 0x00	; 0
    14fa:	30 e0       	ldi	r19, 0x00	; 0
    14fc:	4a ef       	ldi	r20, 0xFA	; 250
    14fe:	54 e4       	ldi	r21, 0x44	; 68
    1500:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1504:	dc 01       	movw	r26, r24
    1506:	cb 01       	movw	r24, r22
    1508:	f8 01       	movw	r30, r16
    150a:	80 83       	st	Z, r24
    150c:	91 83       	std	Z+1, r25	; 0x01
    150e:	a2 83       	std	Z+2, r26	; 0x02
    1510:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1512:	fe 01       	movw	r30, r28
    1514:	eb 5b       	subi	r30, 0xBB	; 187
    1516:	ff 4f       	sbci	r31, 0xFF	; 255
    1518:	60 81       	ld	r22, Z
    151a:	71 81       	ldd	r23, Z+1	; 0x01
    151c:	82 81       	ldd	r24, Z+2	; 0x02
    151e:	93 81       	ldd	r25, Z+3	; 0x03
    1520:	20 e0       	ldi	r18, 0x00	; 0
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	40 e8       	ldi	r20, 0x80	; 128
    1526:	5f e3       	ldi	r21, 0x3F	; 63
    1528:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    152c:	88 23       	and	r24, r24
    152e:	44 f4       	brge	.+16     	; 0x1540 <LCD_void_Init+0x8c>
		__ticks = 1;
    1530:	fe 01       	movw	r30, r28
    1532:	ed 5b       	subi	r30, 0xBD	; 189
    1534:	ff 4f       	sbci	r31, 0xFF	; 255
    1536:	81 e0       	ldi	r24, 0x01	; 1
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	91 83       	std	Z+1, r25	; 0x01
    153c:	80 83       	st	Z, r24
    153e:	64 c0       	rjmp	.+200    	; 0x1608 <LCD_void_Init+0x154>
	else if (__tmp > 65535)
    1540:	fe 01       	movw	r30, r28
    1542:	eb 5b       	subi	r30, 0xBB	; 187
    1544:	ff 4f       	sbci	r31, 0xFF	; 255
    1546:	60 81       	ld	r22, Z
    1548:	71 81       	ldd	r23, Z+1	; 0x01
    154a:	82 81       	ldd	r24, Z+2	; 0x02
    154c:	93 81       	ldd	r25, Z+3	; 0x03
    154e:	20 e0       	ldi	r18, 0x00	; 0
    1550:	3f ef       	ldi	r19, 0xFF	; 255
    1552:	4f e7       	ldi	r20, 0x7F	; 127
    1554:	57 e4       	ldi	r21, 0x47	; 71
    1556:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    155a:	18 16       	cp	r1, r24
    155c:	0c f0       	brlt	.+2      	; 0x1560 <LCD_void_Init+0xac>
    155e:	43 c0       	rjmp	.+134    	; 0x15e6 <LCD_void_Init+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1560:	fe 01       	movw	r30, r28
    1562:	e7 5b       	subi	r30, 0xB7	; 183
    1564:	ff 4f       	sbci	r31, 0xFF	; 255
    1566:	60 81       	ld	r22, Z
    1568:	71 81       	ldd	r23, Z+1	; 0x01
    156a:	82 81       	ldd	r24, Z+2	; 0x02
    156c:	93 81       	ldd	r25, Z+3	; 0x03
    156e:	20 e0       	ldi	r18, 0x00	; 0
    1570:	30 e0       	ldi	r19, 0x00	; 0
    1572:	40 e2       	ldi	r20, 0x20	; 32
    1574:	51 e4       	ldi	r21, 0x41	; 65
    1576:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    157a:	dc 01       	movw	r26, r24
    157c:	cb 01       	movw	r24, r22
    157e:	8e 01       	movw	r16, r28
    1580:	0d 5b       	subi	r16, 0xBD	; 189
    1582:	1f 4f       	sbci	r17, 0xFF	; 255
    1584:	bc 01       	movw	r22, r24
    1586:	cd 01       	movw	r24, r26
    1588:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    158c:	dc 01       	movw	r26, r24
    158e:	cb 01       	movw	r24, r22
    1590:	f8 01       	movw	r30, r16
    1592:	91 83       	std	Z+1, r25	; 0x01
    1594:	80 83       	st	Z, r24
    1596:	1f c0       	rjmp	.+62     	; 0x15d6 <LCD_void_Init+0x122>
    1598:	fe 01       	movw	r30, r28
    159a:	ef 5b       	subi	r30, 0xBF	; 191
    159c:	ff 4f       	sbci	r31, 0xFF	; 255
    159e:	88 ec       	ldi	r24, 0xC8	; 200
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	91 83       	std	Z+1, r25	; 0x01
    15a4:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15a6:	fe 01       	movw	r30, r28
    15a8:	ef 5b       	subi	r30, 0xBF	; 191
    15aa:	ff 4f       	sbci	r31, 0xFF	; 255
    15ac:	80 81       	ld	r24, Z
    15ae:	91 81       	ldd	r25, Z+1	; 0x01
    15b0:	01 97       	sbiw	r24, 0x01	; 1
    15b2:	f1 f7       	brne	.-4      	; 0x15b0 <LCD_void_Init+0xfc>
    15b4:	fe 01       	movw	r30, r28
    15b6:	ef 5b       	subi	r30, 0xBF	; 191
    15b8:	ff 4f       	sbci	r31, 0xFF	; 255
    15ba:	91 83       	std	Z+1, r25	; 0x01
    15bc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15be:	de 01       	movw	r26, r28
    15c0:	ad 5b       	subi	r26, 0xBD	; 189
    15c2:	bf 4f       	sbci	r27, 0xFF	; 255
    15c4:	fe 01       	movw	r30, r28
    15c6:	ed 5b       	subi	r30, 0xBD	; 189
    15c8:	ff 4f       	sbci	r31, 0xFF	; 255
    15ca:	80 81       	ld	r24, Z
    15cc:	91 81       	ldd	r25, Z+1	; 0x01
    15ce:	01 97       	sbiw	r24, 0x01	; 1
    15d0:	11 96       	adiw	r26, 0x01	; 1
    15d2:	9c 93       	st	X, r25
    15d4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15d6:	fe 01       	movw	r30, r28
    15d8:	ed 5b       	subi	r30, 0xBD	; 189
    15da:	ff 4f       	sbci	r31, 0xFF	; 255
    15dc:	80 81       	ld	r24, Z
    15de:	91 81       	ldd	r25, Z+1	; 0x01
    15e0:	00 97       	sbiw	r24, 0x00	; 0
    15e2:	d1 f6       	brne	.-76     	; 0x1598 <LCD_void_Init+0xe4>
    15e4:	24 c0       	rjmp	.+72     	; 0x162e <LCD_void_Init+0x17a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15e6:	8e 01       	movw	r16, r28
    15e8:	0d 5b       	subi	r16, 0xBD	; 189
    15ea:	1f 4f       	sbci	r17, 0xFF	; 255
    15ec:	fe 01       	movw	r30, r28
    15ee:	eb 5b       	subi	r30, 0xBB	; 187
    15f0:	ff 4f       	sbci	r31, 0xFF	; 255
    15f2:	60 81       	ld	r22, Z
    15f4:	71 81       	ldd	r23, Z+1	; 0x01
    15f6:	82 81       	ldd	r24, Z+2	; 0x02
    15f8:	93 81       	ldd	r25, Z+3	; 0x03
    15fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15fe:	dc 01       	movw	r26, r24
    1600:	cb 01       	movw	r24, r22
    1602:	f8 01       	movw	r30, r16
    1604:	91 83       	std	Z+1, r25	; 0x01
    1606:	80 83       	st	Z, r24
    1608:	fe 01       	movw	r30, r28
    160a:	ed 5b       	subi	r30, 0xBD	; 189
    160c:	ff 4f       	sbci	r31, 0xFF	; 255
    160e:	80 81       	ld	r24, Z
    1610:	91 81       	ldd	r25, Z+1	; 0x01
    1612:	fe 01       	movw	r30, r28
    1614:	ff 96       	adiw	r30, 0x3f	; 63
    1616:	91 83       	std	Z+1, r25	; 0x01
    1618:	80 83       	st	Z, r24
    161a:	fe 01       	movw	r30, r28
    161c:	ff 96       	adiw	r30, 0x3f	; 63
    161e:	80 81       	ld	r24, Z
    1620:	91 81       	ldd	r25, Z+1	; 0x01
    1622:	01 97       	sbiw	r24, 0x01	; 1
    1624:	f1 f7       	brne	.-4      	; 0x1622 <LCD_void_Init+0x16e>
    1626:	fe 01       	movw	r30, r28
    1628:	ff 96       	adiw	r30, 0x3f	; 63
    162a:	91 83       	std	Z+1, r25	; 0x01
    162c:	80 83       	st	Z, r24
#elif LCD_U8_MODE==LCD_U8_4_BIT_MODE
		/*code of send intializtion of 4 bit mode*/
		/*delay more than 30ms*/
		_delay_ms(35);
		/*send function set */
		LCD_void_Write_CMD(LCD_TWO_LINES_FOUR_BITS_MODE_INIT1);
    162e:	83 e3       	ldi	r24, 0x33	; 51
    1630:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <LCD_void_Write_CMD>
		LCD_void_Write_CMD(LCD_TWO_LINES_FOUR_BITS_MODE_INIT2);
    1634:	82 e3       	ldi	r24, 0x32	; 50
    1636:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <LCD_void_Write_CMD>
		LCD_void_Write_CMD(LCD_Function_set_4_bit_2_line_mode);
    163a:	88 e2       	ldi	r24, 0x28	; 40
    163c:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <LCD_void_Write_CMD>
		LCD_void_Write_CMD(LCD_Function_set_4_bit_2_line_mode);
    1640:	88 e2       	ldi	r24, 0x28	; 40
    1642:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <LCD_void_Write_CMD>
    1646:	80 e0       	ldi	r24, 0x00	; 0
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	a0 e2       	ldi	r26, 0x20	; 32
    164c:	b2 e4       	ldi	r27, 0x42	; 66
    164e:	8b af       	std	Y+59, r24	; 0x3b
    1650:	9c af       	std	Y+60, r25	; 0x3c
    1652:	ad af       	std	Y+61, r26	; 0x3d
    1654:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1656:	6b ad       	ldd	r22, Y+59	; 0x3b
    1658:	7c ad       	ldd	r23, Y+60	; 0x3c
    165a:	8d ad       	ldd	r24, Y+61	; 0x3d
    165c:	9e ad       	ldd	r25, Y+62	; 0x3e
    165e:	2b ea       	ldi	r18, 0xAB	; 171
    1660:	3a ea       	ldi	r19, 0xAA	; 170
    1662:	4a e2       	ldi	r20, 0x2A	; 42
    1664:	50 e4       	ldi	r21, 0x40	; 64
    1666:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    166a:	dc 01       	movw	r26, r24
    166c:	cb 01       	movw	r24, r22
    166e:	8f ab       	std	Y+55, r24	; 0x37
    1670:	98 af       	std	Y+56, r25	; 0x38
    1672:	a9 af       	std	Y+57, r26	; 0x39
    1674:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    1676:	6f a9       	ldd	r22, Y+55	; 0x37
    1678:	78 ad       	ldd	r23, Y+56	; 0x38
    167a:	89 ad       	ldd	r24, Y+57	; 0x39
    167c:	9a ad       	ldd	r25, Y+58	; 0x3a
    167e:	20 e0       	ldi	r18, 0x00	; 0
    1680:	30 e0       	ldi	r19, 0x00	; 0
    1682:	40 e8       	ldi	r20, 0x80	; 128
    1684:	5f e3       	ldi	r21, 0x3F	; 63
    1686:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    168a:	88 23       	and	r24, r24
    168c:	1c f4       	brge	.+6      	; 0x1694 <LCD_void_Init+0x1e0>
		__ticks = 1;
    168e:	81 e0       	ldi	r24, 0x01	; 1
    1690:	8e ab       	std	Y+54, r24	; 0x36
    1692:	91 c0       	rjmp	.+290    	; 0x17b6 <LCD_void_Init+0x302>
	else if (__tmp > 255)
    1694:	6f a9       	ldd	r22, Y+55	; 0x37
    1696:	78 ad       	ldd	r23, Y+56	; 0x38
    1698:	89 ad       	ldd	r24, Y+57	; 0x39
    169a:	9a ad       	ldd	r25, Y+58	; 0x3a
    169c:	20 e0       	ldi	r18, 0x00	; 0
    169e:	30 e0       	ldi	r19, 0x00	; 0
    16a0:	4f e7       	ldi	r20, 0x7F	; 127
    16a2:	53 e4       	ldi	r21, 0x43	; 67
    16a4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    16a8:	18 16       	cp	r1, r24
    16aa:	0c f0       	brlt	.+2      	; 0x16ae <LCD_void_Init+0x1fa>
    16ac:	7b c0       	rjmp	.+246    	; 0x17a4 <LCD_void_Init+0x2f0>
	{
		_delay_ms(__us / 1000.0);
    16ae:	6b ad       	ldd	r22, Y+59	; 0x3b
    16b0:	7c ad       	ldd	r23, Y+60	; 0x3c
    16b2:	8d ad       	ldd	r24, Y+61	; 0x3d
    16b4:	9e ad       	ldd	r25, Y+62	; 0x3e
    16b6:	20 e0       	ldi	r18, 0x00	; 0
    16b8:	30 e0       	ldi	r19, 0x00	; 0
    16ba:	4a e7       	ldi	r20, 0x7A	; 122
    16bc:	54 e4       	ldi	r21, 0x44	; 68
    16be:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    16c2:	dc 01       	movw	r26, r24
    16c4:	cb 01       	movw	r24, r22
    16c6:	8a ab       	std	Y+50, r24	; 0x32
    16c8:	9b ab       	std	Y+51, r25	; 0x33
    16ca:	ac ab       	std	Y+52, r26	; 0x34
    16cc:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16ce:	6a a9       	ldd	r22, Y+50	; 0x32
    16d0:	7b a9       	ldd	r23, Y+51	; 0x33
    16d2:	8c a9       	ldd	r24, Y+52	; 0x34
    16d4:	9d a9       	ldd	r25, Y+53	; 0x35
    16d6:	20 e0       	ldi	r18, 0x00	; 0
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	4a ef       	ldi	r20, 0xFA	; 250
    16dc:	54 e4       	ldi	r21, 0x44	; 68
    16de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16e2:	dc 01       	movw	r26, r24
    16e4:	cb 01       	movw	r24, r22
    16e6:	8e a7       	std	Y+46, r24	; 0x2e
    16e8:	9f a7       	std	Y+47, r25	; 0x2f
    16ea:	a8 ab       	std	Y+48, r26	; 0x30
    16ec:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    16ee:	6e a5       	ldd	r22, Y+46	; 0x2e
    16f0:	7f a5       	ldd	r23, Y+47	; 0x2f
    16f2:	88 a9       	ldd	r24, Y+48	; 0x30
    16f4:	99 a9       	ldd	r25, Y+49	; 0x31
    16f6:	20 e0       	ldi	r18, 0x00	; 0
    16f8:	30 e0       	ldi	r19, 0x00	; 0
    16fa:	40 e8       	ldi	r20, 0x80	; 128
    16fc:	5f e3       	ldi	r21, 0x3F	; 63
    16fe:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1702:	88 23       	and	r24, r24
    1704:	2c f4       	brge	.+10     	; 0x1710 <LCD_void_Init+0x25c>
		__ticks = 1;
    1706:	81 e0       	ldi	r24, 0x01	; 1
    1708:	90 e0       	ldi	r25, 0x00	; 0
    170a:	9d a7       	std	Y+45, r25	; 0x2d
    170c:	8c a7       	std	Y+44, r24	; 0x2c
    170e:	3f c0       	rjmp	.+126    	; 0x178e <LCD_void_Init+0x2da>
	else if (__tmp > 65535)
    1710:	6e a5       	ldd	r22, Y+46	; 0x2e
    1712:	7f a5       	ldd	r23, Y+47	; 0x2f
    1714:	88 a9       	ldd	r24, Y+48	; 0x30
    1716:	99 a9       	ldd	r25, Y+49	; 0x31
    1718:	20 e0       	ldi	r18, 0x00	; 0
    171a:	3f ef       	ldi	r19, 0xFF	; 255
    171c:	4f e7       	ldi	r20, 0x7F	; 127
    171e:	57 e4       	ldi	r21, 0x47	; 71
    1720:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1724:	18 16       	cp	r1, r24
    1726:	4c f5       	brge	.+82     	; 0x177a <LCD_void_Init+0x2c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1728:	6a a9       	ldd	r22, Y+50	; 0x32
    172a:	7b a9       	ldd	r23, Y+51	; 0x33
    172c:	8c a9       	ldd	r24, Y+52	; 0x34
    172e:	9d a9       	ldd	r25, Y+53	; 0x35
    1730:	20 e0       	ldi	r18, 0x00	; 0
    1732:	30 e0       	ldi	r19, 0x00	; 0
    1734:	40 e2       	ldi	r20, 0x20	; 32
    1736:	51 e4       	ldi	r21, 0x41	; 65
    1738:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    173c:	dc 01       	movw	r26, r24
    173e:	cb 01       	movw	r24, r22
    1740:	bc 01       	movw	r22, r24
    1742:	cd 01       	movw	r24, r26
    1744:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1748:	dc 01       	movw	r26, r24
    174a:	cb 01       	movw	r24, r22
    174c:	9d a7       	std	Y+45, r25	; 0x2d
    174e:	8c a7       	std	Y+44, r24	; 0x2c
    1750:	0f c0       	rjmp	.+30     	; 0x1770 <LCD_void_Init+0x2bc>
    1752:	88 ec       	ldi	r24, 0xC8	; 200
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	9b a7       	std	Y+43, r25	; 0x2b
    1758:	8a a7       	std	Y+42, r24	; 0x2a
    175a:	8a a5       	ldd	r24, Y+42	; 0x2a
    175c:	9b a5       	ldd	r25, Y+43	; 0x2b
    175e:	01 97       	sbiw	r24, 0x01	; 1
    1760:	f1 f7       	brne	.-4      	; 0x175e <LCD_void_Init+0x2aa>
    1762:	9b a7       	std	Y+43, r25	; 0x2b
    1764:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1766:	8c a5       	ldd	r24, Y+44	; 0x2c
    1768:	9d a5       	ldd	r25, Y+45	; 0x2d
    176a:	01 97       	sbiw	r24, 0x01	; 1
    176c:	9d a7       	std	Y+45, r25	; 0x2d
    176e:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1770:	8c a5       	ldd	r24, Y+44	; 0x2c
    1772:	9d a5       	ldd	r25, Y+45	; 0x2d
    1774:	00 97       	sbiw	r24, 0x00	; 0
    1776:	69 f7       	brne	.-38     	; 0x1752 <LCD_void_Init+0x29e>
    1778:	24 c0       	rjmp	.+72     	; 0x17c2 <LCD_void_Init+0x30e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    177a:	6e a5       	ldd	r22, Y+46	; 0x2e
    177c:	7f a5       	ldd	r23, Y+47	; 0x2f
    177e:	88 a9       	ldd	r24, Y+48	; 0x30
    1780:	99 a9       	ldd	r25, Y+49	; 0x31
    1782:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1786:	dc 01       	movw	r26, r24
    1788:	cb 01       	movw	r24, r22
    178a:	9d a7       	std	Y+45, r25	; 0x2d
    178c:	8c a7       	std	Y+44, r24	; 0x2c
    178e:	8c a5       	ldd	r24, Y+44	; 0x2c
    1790:	9d a5       	ldd	r25, Y+45	; 0x2d
    1792:	99 a7       	std	Y+41, r25	; 0x29
    1794:	88 a7       	std	Y+40, r24	; 0x28
    1796:	88 a5       	ldd	r24, Y+40	; 0x28
    1798:	99 a5       	ldd	r25, Y+41	; 0x29
    179a:	01 97       	sbiw	r24, 0x01	; 1
    179c:	f1 f7       	brne	.-4      	; 0x179a <LCD_void_Init+0x2e6>
    179e:	99 a7       	std	Y+41, r25	; 0x29
    17a0:	88 a7       	std	Y+40, r24	; 0x28
    17a2:	0f c0       	rjmp	.+30     	; 0x17c2 <LCD_void_Init+0x30e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    17a4:	6f a9       	ldd	r22, Y+55	; 0x37
    17a6:	78 ad       	ldd	r23, Y+56	; 0x38
    17a8:	89 ad       	ldd	r24, Y+57	; 0x39
    17aa:	9a ad       	ldd	r25, Y+58	; 0x3a
    17ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17b0:	dc 01       	movw	r26, r24
    17b2:	cb 01       	movw	r24, r22
    17b4:	8e ab       	std	Y+54, r24	; 0x36
    17b6:	8e a9       	ldd	r24, Y+54	; 0x36
    17b8:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    17ba:	8f a1       	ldd	r24, Y+39	; 0x27
    17bc:	8a 95       	dec	r24
    17be:	f1 f7       	brne	.-4      	; 0x17bc <LCD_void_Init+0x308>
    17c0:	8f a3       	std	Y+39, r24	; 0x27
			/*delay more than 39us*/
		_delay_us(40);
		/*send cursor mode */
		LCD_void_Write_CMD(LCD_Cursor_OFF);
    17c2:	8c e0       	ldi	r24, 0x0C	; 12
    17c4:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <LCD_void_Write_CMD>
    17c8:	80 e0       	ldi	r24, 0x00	; 0
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	a0 e2       	ldi	r26, 0x20	; 32
    17ce:	b2 e4       	ldi	r27, 0x42	; 66
    17d0:	8b a3       	std	Y+35, r24	; 0x23
    17d2:	9c a3       	std	Y+36, r25	; 0x24
    17d4:	ad a3       	std	Y+37, r26	; 0x25
    17d6:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    17d8:	6b a1       	ldd	r22, Y+35	; 0x23
    17da:	7c a1       	ldd	r23, Y+36	; 0x24
    17dc:	8d a1       	ldd	r24, Y+37	; 0x25
    17de:	9e a1       	ldd	r25, Y+38	; 0x26
    17e0:	2b ea       	ldi	r18, 0xAB	; 171
    17e2:	3a ea       	ldi	r19, 0xAA	; 170
    17e4:	4a e2       	ldi	r20, 0x2A	; 42
    17e6:	50 e4       	ldi	r21, 0x40	; 64
    17e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17ec:	dc 01       	movw	r26, r24
    17ee:	cb 01       	movw	r24, r22
    17f0:	8f 8f       	std	Y+31, r24	; 0x1f
    17f2:	98 a3       	std	Y+32, r25	; 0x20
    17f4:	a9 a3       	std	Y+33, r26	; 0x21
    17f6:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    17f8:	6f 8d       	ldd	r22, Y+31	; 0x1f
    17fa:	78 a1       	ldd	r23, Y+32	; 0x20
    17fc:	89 a1       	ldd	r24, Y+33	; 0x21
    17fe:	9a a1       	ldd	r25, Y+34	; 0x22
    1800:	20 e0       	ldi	r18, 0x00	; 0
    1802:	30 e0       	ldi	r19, 0x00	; 0
    1804:	40 e8       	ldi	r20, 0x80	; 128
    1806:	5f e3       	ldi	r21, 0x3F	; 63
    1808:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    180c:	88 23       	and	r24, r24
    180e:	1c f4       	brge	.+6      	; 0x1816 <LCD_void_Init+0x362>
		__ticks = 1;
    1810:	81 e0       	ldi	r24, 0x01	; 1
    1812:	8e 8f       	std	Y+30, r24	; 0x1e
    1814:	91 c0       	rjmp	.+290    	; 0x1938 <LCD_void_Init+0x484>
	else if (__tmp > 255)
    1816:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1818:	78 a1       	ldd	r23, Y+32	; 0x20
    181a:	89 a1       	ldd	r24, Y+33	; 0x21
    181c:	9a a1       	ldd	r25, Y+34	; 0x22
    181e:	20 e0       	ldi	r18, 0x00	; 0
    1820:	30 e0       	ldi	r19, 0x00	; 0
    1822:	4f e7       	ldi	r20, 0x7F	; 127
    1824:	53 e4       	ldi	r21, 0x43	; 67
    1826:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    182a:	18 16       	cp	r1, r24
    182c:	0c f0       	brlt	.+2      	; 0x1830 <LCD_void_Init+0x37c>
    182e:	7b c0       	rjmp	.+246    	; 0x1926 <LCD_void_Init+0x472>
	{
		_delay_ms(__us / 1000.0);
    1830:	6b a1       	ldd	r22, Y+35	; 0x23
    1832:	7c a1       	ldd	r23, Y+36	; 0x24
    1834:	8d a1       	ldd	r24, Y+37	; 0x25
    1836:	9e a1       	ldd	r25, Y+38	; 0x26
    1838:	20 e0       	ldi	r18, 0x00	; 0
    183a:	30 e0       	ldi	r19, 0x00	; 0
    183c:	4a e7       	ldi	r20, 0x7A	; 122
    183e:	54 e4       	ldi	r21, 0x44	; 68
    1840:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1844:	dc 01       	movw	r26, r24
    1846:	cb 01       	movw	r24, r22
    1848:	8a 8f       	std	Y+26, r24	; 0x1a
    184a:	9b 8f       	std	Y+27, r25	; 0x1b
    184c:	ac 8f       	std	Y+28, r26	; 0x1c
    184e:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1850:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1852:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1854:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1856:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1858:	20 e0       	ldi	r18, 0x00	; 0
    185a:	30 e0       	ldi	r19, 0x00	; 0
    185c:	4a ef       	ldi	r20, 0xFA	; 250
    185e:	54 e4       	ldi	r21, 0x44	; 68
    1860:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1864:	dc 01       	movw	r26, r24
    1866:	cb 01       	movw	r24, r22
    1868:	8e 8b       	std	Y+22, r24	; 0x16
    186a:	9f 8b       	std	Y+23, r25	; 0x17
    186c:	a8 8f       	std	Y+24, r26	; 0x18
    186e:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    1870:	6e 89       	ldd	r22, Y+22	; 0x16
    1872:	7f 89       	ldd	r23, Y+23	; 0x17
    1874:	88 8d       	ldd	r24, Y+24	; 0x18
    1876:	99 8d       	ldd	r25, Y+25	; 0x19
    1878:	20 e0       	ldi	r18, 0x00	; 0
    187a:	30 e0       	ldi	r19, 0x00	; 0
    187c:	40 e8       	ldi	r20, 0x80	; 128
    187e:	5f e3       	ldi	r21, 0x3F	; 63
    1880:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1884:	88 23       	and	r24, r24
    1886:	2c f4       	brge	.+10     	; 0x1892 <LCD_void_Init+0x3de>
		__ticks = 1;
    1888:	81 e0       	ldi	r24, 0x01	; 1
    188a:	90 e0       	ldi	r25, 0x00	; 0
    188c:	9d 8b       	std	Y+21, r25	; 0x15
    188e:	8c 8b       	std	Y+20, r24	; 0x14
    1890:	3f c0       	rjmp	.+126    	; 0x1910 <LCD_void_Init+0x45c>
	else if (__tmp > 65535)
    1892:	6e 89       	ldd	r22, Y+22	; 0x16
    1894:	7f 89       	ldd	r23, Y+23	; 0x17
    1896:	88 8d       	ldd	r24, Y+24	; 0x18
    1898:	99 8d       	ldd	r25, Y+25	; 0x19
    189a:	20 e0       	ldi	r18, 0x00	; 0
    189c:	3f ef       	ldi	r19, 0xFF	; 255
    189e:	4f e7       	ldi	r20, 0x7F	; 127
    18a0:	57 e4       	ldi	r21, 0x47	; 71
    18a2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    18a6:	18 16       	cp	r1, r24
    18a8:	4c f5       	brge	.+82     	; 0x18fc <LCD_void_Init+0x448>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18aa:	6a 8d       	ldd	r22, Y+26	; 0x1a
    18ac:	7b 8d       	ldd	r23, Y+27	; 0x1b
    18ae:	8c 8d       	ldd	r24, Y+28	; 0x1c
    18b0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    18b2:	20 e0       	ldi	r18, 0x00	; 0
    18b4:	30 e0       	ldi	r19, 0x00	; 0
    18b6:	40 e2       	ldi	r20, 0x20	; 32
    18b8:	51 e4       	ldi	r21, 0x41	; 65
    18ba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18be:	dc 01       	movw	r26, r24
    18c0:	cb 01       	movw	r24, r22
    18c2:	bc 01       	movw	r22, r24
    18c4:	cd 01       	movw	r24, r26
    18c6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18ca:	dc 01       	movw	r26, r24
    18cc:	cb 01       	movw	r24, r22
    18ce:	9d 8b       	std	Y+21, r25	; 0x15
    18d0:	8c 8b       	std	Y+20, r24	; 0x14
    18d2:	0f c0       	rjmp	.+30     	; 0x18f2 <LCD_void_Init+0x43e>
    18d4:	88 ec       	ldi	r24, 0xC8	; 200
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	9b 8b       	std	Y+19, r25	; 0x13
    18da:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    18dc:	8a 89       	ldd	r24, Y+18	; 0x12
    18de:	9b 89       	ldd	r25, Y+19	; 0x13
    18e0:	01 97       	sbiw	r24, 0x01	; 1
    18e2:	f1 f7       	brne	.-4      	; 0x18e0 <LCD_void_Init+0x42c>
    18e4:	9b 8b       	std	Y+19, r25	; 0x13
    18e6:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18e8:	8c 89       	ldd	r24, Y+20	; 0x14
    18ea:	9d 89       	ldd	r25, Y+21	; 0x15
    18ec:	01 97       	sbiw	r24, 0x01	; 1
    18ee:	9d 8b       	std	Y+21, r25	; 0x15
    18f0:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18f2:	8c 89       	ldd	r24, Y+20	; 0x14
    18f4:	9d 89       	ldd	r25, Y+21	; 0x15
    18f6:	00 97       	sbiw	r24, 0x00	; 0
    18f8:	69 f7       	brne	.-38     	; 0x18d4 <LCD_void_Init+0x420>
    18fa:	24 c0       	rjmp	.+72     	; 0x1944 <LCD_void_Init+0x490>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18fc:	6e 89       	ldd	r22, Y+22	; 0x16
    18fe:	7f 89       	ldd	r23, Y+23	; 0x17
    1900:	88 8d       	ldd	r24, Y+24	; 0x18
    1902:	99 8d       	ldd	r25, Y+25	; 0x19
    1904:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1908:	dc 01       	movw	r26, r24
    190a:	cb 01       	movw	r24, r22
    190c:	9d 8b       	std	Y+21, r25	; 0x15
    190e:	8c 8b       	std	Y+20, r24	; 0x14
    1910:	8c 89       	ldd	r24, Y+20	; 0x14
    1912:	9d 89       	ldd	r25, Y+21	; 0x15
    1914:	99 8b       	std	Y+17, r25	; 0x11
    1916:	88 8b       	std	Y+16, r24	; 0x10
    1918:	88 89       	ldd	r24, Y+16	; 0x10
    191a:	99 89       	ldd	r25, Y+17	; 0x11
    191c:	01 97       	sbiw	r24, 0x01	; 1
    191e:	f1 f7       	brne	.-4      	; 0x191c <LCD_void_Init+0x468>
    1920:	99 8b       	std	Y+17, r25	; 0x11
    1922:	88 8b       	std	Y+16, r24	; 0x10
    1924:	0f c0       	rjmp	.+30     	; 0x1944 <LCD_void_Init+0x490>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1926:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1928:	78 a1       	ldd	r23, Y+32	; 0x20
    192a:	89 a1       	ldd	r24, Y+33	; 0x21
    192c:	9a a1       	ldd	r25, Y+34	; 0x22
    192e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1932:	dc 01       	movw	r26, r24
    1934:	cb 01       	movw	r24, r22
    1936:	8e 8f       	std	Y+30, r24	; 0x1e
    1938:	8e 8d       	ldd	r24, Y+30	; 0x1e
    193a:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    193c:	8f 85       	ldd	r24, Y+15	; 0x0f
    193e:	8a 95       	dec	r24
    1940:	f1 f7       	brne	.-4      	; 0x193e <LCD_void_Init+0x48a>
    1942:	8f 87       	std	Y+15, r24	; 0x0f
		/*delay more than 39us*/
		_delay_us(40);
		/*send command clear display*/
		LCD_void_Write_CMD(LCD_Clear_Display_Screen);
    1944:	81 e0       	ldi	r24, 0x01	; 1
    1946:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <LCD_void_Write_CMD>
    194a:	80 e0       	ldi	r24, 0x00	; 0
    194c:	90 e0       	ldi	r25, 0x00	; 0
    194e:	a0 e0       	ldi	r26, 0x00	; 0
    1950:	b0 e4       	ldi	r27, 0x40	; 64
    1952:	8b 87       	std	Y+11, r24	; 0x0b
    1954:	9c 87       	std	Y+12, r25	; 0x0c
    1956:	ad 87       	std	Y+13, r26	; 0x0d
    1958:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    195a:	6b 85       	ldd	r22, Y+11	; 0x0b
    195c:	7c 85       	ldd	r23, Y+12	; 0x0c
    195e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1960:	9e 85       	ldd	r25, Y+14	; 0x0e
    1962:	20 e0       	ldi	r18, 0x00	; 0
    1964:	30 e0       	ldi	r19, 0x00	; 0
    1966:	4a ef       	ldi	r20, 0xFA	; 250
    1968:	54 e4       	ldi	r21, 0x44	; 68
    196a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    196e:	dc 01       	movw	r26, r24
    1970:	cb 01       	movw	r24, r22
    1972:	8f 83       	std	Y+7, r24	; 0x07
    1974:	98 87       	std	Y+8, r25	; 0x08
    1976:	a9 87       	std	Y+9, r26	; 0x09
    1978:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    197a:	6f 81       	ldd	r22, Y+7	; 0x07
    197c:	78 85       	ldd	r23, Y+8	; 0x08
    197e:	89 85       	ldd	r24, Y+9	; 0x09
    1980:	9a 85       	ldd	r25, Y+10	; 0x0a
    1982:	20 e0       	ldi	r18, 0x00	; 0
    1984:	30 e0       	ldi	r19, 0x00	; 0
    1986:	40 e8       	ldi	r20, 0x80	; 128
    1988:	5f e3       	ldi	r21, 0x3F	; 63
    198a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    198e:	88 23       	and	r24, r24
    1990:	2c f4       	brge	.+10     	; 0x199c <LCD_void_Init+0x4e8>
		__ticks = 1;
    1992:	81 e0       	ldi	r24, 0x01	; 1
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	9e 83       	std	Y+6, r25	; 0x06
    1998:	8d 83       	std	Y+5, r24	; 0x05
    199a:	3f c0       	rjmp	.+126    	; 0x1a1a <LCD_void_Init+0x566>
	else if (__tmp > 65535)
    199c:	6f 81       	ldd	r22, Y+7	; 0x07
    199e:	78 85       	ldd	r23, Y+8	; 0x08
    19a0:	89 85       	ldd	r24, Y+9	; 0x09
    19a2:	9a 85       	ldd	r25, Y+10	; 0x0a
    19a4:	20 e0       	ldi	r18, 0x00	; 0
    19a6:	3f ef       	ldi	r19, 0xFF	; 255
    19a8:	4f e7       	ldi	r20, 0x7F	; 127
    19aa:	57 e4       	ldi	r21, 0x47	; 71
    19ac:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    19b0:	18 16       	cp	r1, r24
    19b2:	4c f5       	brge	.+82     	; 0x1a06 <LCD_void_Init+0x552>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19b4:	6b 85       	ldd	r22, Y+11	; 0x0b
    19b6:	7c 85       	ldd	r23, Y+12	; 0x0c
    19b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    19ba:	9e 85       	ldd	r25, Y+14	; 0x0e
    19bc:	20 e0       	ldi	r18, 0x00	; 0
    19be:	30 e0       	ldi	r19, 0x00	; 0
    19c0:	40 e2       	ldi	r20, 0x20	; 32
    19c2:	51 e4       	ldi	r21, 0x41	; 65
    19c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19c8:	dc 01       	movw	r26, r24
    19ca:	cb 01       	movw	r24, r22
    19cc:	bc 01       	movw	r22, r24
    19ce:	cd 01       	movw	r24, r26
    19d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19d4:	dc 01       	movw	r26, r24
    19d6:	cb 01       	movw	r24, r22
    19d8:	9e 83       	std	Y+6, r25	; 0x06
    19da:	8d 83       	std	Y+5, r24	; 0x05
    19dc:	0f c0       	rjmp	.+30     	; 0x19fc <LCD_void_Init+0x548>
    19de:	88 ec       	ldi	r24, 0xC8	; 200
    19e0:	90 e0       	ldi	r25, 0x00	; 0
    19e2:	9c 83       	std	Y+4, r25	; 0x04
    19e4:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    19e6:	8b 81       	ldd	r24, Y+3	; 0x03
    19e8:	9c 81       	ldd	r25, Y+4	; 0x04
    19ea:	01 97       	sbiw	r24, 0x01	; 1
    19ec:	f1 f7       	brne	.-4      	; 0x19ea <LCD_void_Init+0x536>
    19ee:	9c 83       	std	Y+4, r25	; 0x04
    19f0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19f2:	8d 81       	ldd	r24, Y+5	; 0x05
    19f4:	9e 81       	ldd	r25, Y+6	; 0x06
    19f6:	01 97       	sbiw	r24, 0x01	; 1
    19f8:	9e 83       	std	Y+6, r25	; 0x06
    19fa:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19fc:	8d 81       	ldd	r24, Y+5	; 0x05
    19fe:	9e 81       	ldd	r25, Y+6	; 0x06
    1a00:	00 97       	sbiw	r24, 0x00	; 0
    1a02:	69 f7       	brne	.-38     	; 0x19de <LCD_void_Init+0x52a>
    1a04:	14 c0       	rjmp	.+40     	; 0x1a2e <LCD_void_Init+0x57a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a06:	6f 81       	ldd	r22, Y+7	; 0x07
    1a08:	78 85       	ldd	r23, Y+8	; 0x08
    1a0a:	89 85       	ldd	r24, Y+9	; 0x09
    1a0c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a12:	dc 01       	movw	r26, r24
    1a14:	cb 01       	movw	r24, r22
    1a16:	9e 83       	std	Y+6, r25	; 0x06
    1a18:	8d 83       	std	Y+5, r24	; 0x05
    1a1a:	8d 81       	ldd	r24, Y+5	; 0x05
    1a1c:	9e 81       	ldd	r25, Y+6	; 0x06
    1a1e:	9a 83       	std	Y+2, r25	; 0x02
    1a20:	89 83       	std	Y+1, r24	; 0x01
    1a22:	89 81       	ldd	r24, Y+1	; 0x01
    1a24:	9a 81       	ldd	r25, Y+2	; 0x02
    1a26:	01 97       	sbiw	r24, 0x01	; 1
    1a28:	f1 f7       	brne	.-4      	; 0x1a26 <LCD_void_Init+0x572>
    1a2a:	9a 83       	std	Y+2, r25	; 0x02
    1a2c:	89 83       	std	Y+1, r24	; 0x01
		/*delay more than 1.53ms*/
		_delay_ms(2);
		/*increment cursor*/
		LCD_void_Write_CMD(LCD_Cursor_Increment);
    1a2e:	86 e0       	ldi	r24, 0x06	; 6
    1a30:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <LCD_void_Write_CMD>
#endif




}
    1a34:	c4 5b       	subi	r28, 0xB4	; 180
    1a36:	df 4f       	sbci	r29, 0xFF	; 255
    1a38:	0f b6       	in	r0, 0x3f	; 63
    1a3a:	f8 94       	cli
    1a3c:	de bf       	out	0x3e, r29	; 62
    1a3e:	0f be       	out	0x3f, r0	; 63
    1a40:	cd bf       	out	0x3d, r28	; 61
    1a42:	cf 91       	pop	r28
    1a44:	df 91       	pop	r29
    1a46:	1f 91       	pop	r17
    1a48:	0f 91       	pop	r16
    1a4a:	08 95       	ret

00001a4c <LCD_void_Write_CMD>:

void LCD_void_Write_CMD(u8 Copy_u8_CMD){
    1a4c:	df 93       	push	r29
    1a4e:	cf 93       	push	r28
    1a50:	0f 92       	push	r0
    1a52:	cd b7       	in	r28, 0x3d	; 61
    1a54:	de b7       	in	r29, 0x3e	; 62
    1a56:	89 83       	std	Y+1, r24	; 0x01
	/*RW=0*/
	/*write a command*/
	/*E=1*/
	/*E=0*/
//	DIO_U8_Set_Pin_Dir(LCD_U8_CTRL_PORT,LCD_U8_RS_PIN,PIN_OUTPUT);
	DIO_U8_Set_Pin_value(LCD_U8_CTRL_PORT,LCD_U8_RS_PIN,PIN_LOW);
    1a58:	82 e0       	ldi	r24, 0x02	; 2
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	60 e0       	ldi	r22, 0x00	; 0
    1a5e:	70 e0       	ldi	r23, 0x00	; 0
    1a60:	40 e0       	ldi	r20, 0x00	; 0
    1a62:	50 e0       	ldi	r21, 0x00	; 0
    1a64:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>

	LCD_void_Write(Copy_u8_CMD);
    1a68:	89 81       	ldd	r24, Y+1	; 0x01
    1a6a:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <LCD_void_Write>

}
    1a6e:	0f 90       	pop	r0
    1a70:	cf 91       	pop	r28
    1a72:	df 91       	pop	r29
    1a74:	08 95       	ret

00001a76 <LCD_void_Write>:



void LCD_void_Write(u8 Copy_u8_val){
    1a76:	df 93       	push	r29
    1a78:	cf 93       	push	r28
    1a7a:	cd b7       	in	r28, 0x3d	; 61
    1a7c:	de b7       	in	r29, 0x3e	; 62
    1a7e:	e1 97       	sbiw	r28, 0x31	; 49
    1a80:	0f b6       	in	r0, 0x3f	; 63
    1a82:	f8 94       	cli
    1a84:	de bf       	out	0x3e, r29	; 62
    1a86:	0f be       	out	0x3f, r0	; 63
    1a88:	cd bf       	out	0x3d, r28	; 61
    1a8a:	89 ab       	std	Y+49, r24	; 0x31

	/*RW=0*/
		DIO_U8_Set_Pin_value(LCD_U8_CTRL_PORT,LCD_U8_RW_PIN,PIN_LOW);
    1a8c:	82 e0       	ldi	r24, 0x02	; 2
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	61 e0       	ldi	r22, 0x01	; 1
    1a92:	70 e0       	ldi	r23, 0x00	; 0
    1a94:	40 e0       	ldi	r20, 0x00	; 0
    1a96:	50 e0       	ldi	r21, 0x00	; 0
    1a98:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>

#elif LCD_U8_MODE==LCD_U8_4_BIT_MODE
		/*code of send intializtion of 4 bit mode*/
/*MSB*/

		DIO_U8_Set_Pin_value(LCD_u8_DATA_PORT,LCD_u8_DATA_PIN4,Get_Bit(Copy_u8_val,DIO_U8_PIN4));
    1a9c:	89 a9       	ldd	r24, Y+49	; 0x31
    1a9e:	82 95       	swap	r24
    1aa0:	8f 70       	andi	r24, 0x0F	; 15
    1aa2:	88 2f       	mov	r24, r24
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	9c 01       	movw	r18, r24
    1aa8:	21 70       	andi	r18, 0x01	; 1
    1aaa:	30 70       	andi	r19, 0x00	; 0
    1aac:	80 e0       	ldi	r24, 0x00	; 0
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	64 e0       	ldi	r22, 0x04	; 4
    1ab2:	70 e0       	ldi	r23, 0x00	; 0
    1ab4:	a9 01       	movw	r20, r18
    1ab6:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>
		DIO_U8_Set_Pin_value(LCD_u8_DATA_PORT,LCD_u8_DATA_PIN5,Get_Bit(Copy_u8_val,DIO_U8_PIN5));
    1aba:	89 a9       	ldd	r24, Y+49	; 0x31
    1abc:	82 95       	swap	r24
    1abe:	86 95       	lsr	r24
    1ac0:	87 70       	andi	r24, 0x07	; 7
    1ac2:	88 2f       	mov	r24, r24
    1ac4:	90 e0       	ldi	r25, 0x00	; 0
    1ac6:	9c 01       	movw	r18, r24
    1ac8:	21 70       	andi	r18, 0x01	; 1
    1aca:	30 70       	andi	r19, 0x00	; 0
    1acc:	80 e0       	ldi	r24, 0x00	; 0
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	65 e0       	ldi	r22, 0x05	; 5
    1ad2:	70 e0       	ldi	r23, 0x00	; 0
    1ad4:	a9 01       	movw	r20, r18
    1ad6:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>
		DIO_U8_Set_Pin_value(LCD_u8_DATA_PORT,LCD_u8_DATA_PIN6,Get_Bit(Copy_u8_val,DIO_U8_PIN6));
    1ada:	89 a9       	ldd	r24, Y+49	; 0x31
    1adc:	82 95       	swap	r24
    1ade:	86 95       	lsr	r24
    1ae0:	86 95       	lsr	r24
    1ae2:	83 70       	andi	r24, 0x03	; 3
    1ae4:	88 2f       	mov	r24, r24
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	9c 01       	movw	r18, r24
    1aea:	21 70       	andi	r18, 0x01	; 1
    1aec:	30 70       	andi	r19, 0x00	; 0
    1aee:	80 e0       	ldi	r24, 0x00	; 0
    1af0:	90 e0       	ldi	r25, 0x00	; 0
    1af2:	66 e0       	ldi	r22, 0x06	; 6
    1af4:	70 e0       	ldi	r23, 0x00	; 0
    1af6:	a9 01       	movw	r20, r18
    1af8:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>
		DIO_U8_Set_Pin_value(LCD_u8_DATA_PORT,LCD_u8_DATA_PIN7,Get_Bit(Copy_u8_val,DIO_U8_PIN7));
    1afc:	89 a9       	ldd	r24, Y+49	; 0x31
    1afe:	88 1f       	adc	r24, r24
    1b00:	88 27       	eor	r24, r24
    1b02:	88 1f       	adc	r24, r24
    1b04:	28 2f       	mov	r18, r24
    1b06:	30 e0       	ldi	r19, 0x00	; 0
    1b08:	80 e0       	ldi	r24, 0x00	; 0
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	67 e0       	ldi	r22, 0x07	; 7
    1b0e:	70 e0       	ldi	r23, 0x00	; 0
    1b10:	a9 01       	movw	r20, r18
    1b12:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>
		/*E=1*/
		/*E=0*/
		DIO_U8_Set_Pin_value(LCD_U8_CTRL_PORT,LCD_U8_E_PIN,PIN_HIGH);
    1b16:	82 e0       	ldi	r24, 0x02	; 2
    1b18:	90 e0       	ldi	r25, 0x00	; 0
    1b1a:	62 e0       	ldi	r22, 0x02	; 2
    1b1c:	70 e0       	ldi	r23, 0x00	; 0
    1b1e:	41 e0       	ldi	r20, 0x01	; 1
    1b20:	50 e0       	ldi	r21, 0x00	; 0
    1b22:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>
    1b26:	80 e0       	ldi	r24, 0x00	; 0
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	a0 e8       	ldi	r26, 0x80	; 128
    1b2c:	bf e3       	ldi	r27, 0x3F	; 63
    1b2e:	8d a7       	std	Y+45, r24	; 0x2d
    1b30:	9e a7       	std	Y+46, r25	; 0x2e
    1b32:	af a7       	std	Y+47, r26	; 0x2f
    1b34:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1b36:	6d a5       	ldd	r22, Y+45	; 0x2d
    1b38:	7e a5       	ldd	r23, Y+46	; 0x2e
    1b3a:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b3c:	98 a9       	ldd	r25, Y+48	; 0x30
    1b3e:	2b ea       	ldi	r18, 0xAB	; 171
    1b40:	3a ea       	ldi	r19, 0xAA	; 170
    1b42:	4a e2       	ldi	r20, 0x2A	; 42
    1b44:	50 e4       	ldi	r21, 0x40	; 64
    1b46:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b4a:	dc 01       	movw	r26, r24
    1b4c:	cb 01       	movw	r24, r22
    1b4e:	89 a7       	std	Y+41, r24	; 0x29
    1b50:	9a a7       	std	Y+42, r25	; 0x2a
    1b52:	ab a7       	std	Y+43, r26	; 0x2b
    1b54:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    1b56:	69 a5       	ldd	r22, Y+41	; 0x29
    1b58:	7a a5       	ldd	r23, Y+42	; 0x2a
    1b5a:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b5c:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b5e:	20 e0       	ldi	r18, 0x00	; 0
    1b60:	30 e0       	ldi	r19, 0x00	; 0
    1b62:	40 e8       	ldi	r20, 0x80	; 128
    1b64:	5f e3       	ldi	r21, 0x3F	; 63
    1b66:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1b6a:	88 23       	and	r24, r24
    1b6c:	1c f4       	brge	.+6      	; 0x1b74 <LCD_void_Write+0xfe>
		__ticks = 1;
    1b6e:	81 e0       	ldi	r24, 0x01	; 1
    1b70:	88 a7       	std	Y+40, r24	; 0x28
    1b72:	91 c0       	rjmp	.+290    	; 0x1c96 <LCD_void_Write+0x220>
	else if (__tmp > 255)
    1b74:	69 a5       	ldd	r22, Y+41	; 0x29
    1b76:	7a a5       	ldd	r23, Y+42	; 0x2a
    1b78:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b7a:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b7c:	20 e0       	ldi	r18, 0x00	; 0
    1b7e:	30 e0       	ldi	r19, 0x00	; 0
    1b80:	4f e7       	ldi	r20, 0x7F	; 127
    1b82:	53 e4       	ldi	r21, 0x43	; 67
    1b84:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1b88:	18 16       	cp	r1, r24
    1b8a:	0c f0       	brlt	.+2      	; 0x1b8e <LCD_void_Write+0x118>
    1b8c:	7b c0       	rjmp	.+246    	; 0x1c84 <LCD_void_Write+0x20e>
	{
		_delay_ms(__us / 1000.0);
    1b8e:	6d a5       	ldd	r22, Y+45	; 0x2d
    1b90:	7e a5       	ldd	r23, Y+46	; 0x2e
    1b92:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b94:	98 a9       	ldd	r25, Y+48	; 0x30
    1b96:	20 e0       	ldi	r18, 0x00	; 0
    1b98:	30 e0       	ldi	r19, 0x00	; 0
    1b9a:	4a e7       	ldi	r20, 0x7A	; 122
    1b9c:	54 e4       	ldi	r21, 0x44	; 68
    1b9e:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1ba2:	dc 01       	movw	r26, r24
    1ba4:	cb 01       	movw	r24, r22
    1ba6:	8c a3       	std	Y+36, r24	; 0x24
    1ba8:	9d a3       	std	Y+37, r25	; 0x25
    1baa:	ae a3       	std	Y+38, r26	; 0x26
    1bac:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bae:	6c a1       	ldd	r22, Y+36	; 0x24
    1bb0:	7d a1       	ldd	r23, Y+37	; 0x25
    1bb2:	8e a1       	ldd	r24, Y+38	; 0x26
    1bb4:	9f a1       	ldd	r25, Y+39	; 0x27
    1bb6:	20 e0       	ldi	r18, 0x00	; 0
    1bb8:	30 e0       	ldi	r19, 0x00	; 0
    1bba:	4a ef       	ldi	r20, 0xFA	; 250
    1bbc:	54 e4       	ldi	r21, 0x44	; 68
    1bbe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bc2:	dc 01       	movw	r26, r24
    1bc4:	cb 01       	movw	r24, r22
    1bc6:	88 a3       	std	Y+32, r24	; 0x20
    1bc8:	99 a3       	std	Y+33, r25	; 0x21
    1bca:	aa a3       	std	Y+34, r26	; 0x22
    1bcc:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    1bce:	68 a1       	ldd	r22, Y+32	; 0x20
    1bd0:	79 a1       	ldd	r23, Y+33	; 0x21
    1bd2:	8a a1       	ldd	r24, Y+34	; 0x22
    1bd4:	9b a1       	ldd	r25, Y+35	; 0x23
    1bd6:	20 e0       	ldi	r18, 0x00	; 0
    1bd8:	30 e0       	ldi	r19, 0x00	; 0
    1bda:	40 e8       	ldi	r20, 0x80	; 128
    1bdc:	5f e3       	ldi	r21, 0x3F	; 63
    1bde:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1be2:	88 23       	and	r24, r24
    1be4:	2c f4       	brge	.+10     	; 0x1bf0 <LCD_void_Write+0x17a>
		__ticks = 1;
    1be6:	81 e0       	ldi	r24, 0x01	; 1
    1be8:	90 e0       	ldi	r25, 0x00	; 0
    1bea:	9f 8f       	std	Y+31, r25	; 0x1f
    1bec:	8e 8f       	std	Y+30, r24	; 0x1e
    1bee:	3f c0       	rjmp	.+126    	; 0x1c6e <LCD_void_Write+0x1f8>
	else if (__tmp > 65535)
    1bf0:	68 a1       	ldd	r22, Y+32	; 0x20
    1bf2:	79 a1       	ldd	r23, Y+33	; 0x21
    1bf4:	8a a1       	ldd	r24, Y+34	; 0x22
    1bf6:	9b a1       	ldd	r25, Y+35	; 0x23
    1bf8:	20 e0       	ldi	r18, 0x00	; 0
    1bfa:	3f ef       	ldi	r19, 0xFF	; 255
    1bfc:	4f e7       	ldi	r20, 0x7F	; 127
    1bfe:	57 e4       	ldi	r21, 0x47	; 71
    1c00:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1c04:	18 16       	cp	r1, r24
    1c06:	4c f5       	brge	.+82     	; 0x1c5a <LCD_void_Write+0x1e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c08:	6c a1       	ldd	r22, Y+36	; 0x24
    1c0a:	7d a1       	ldd	r23, Y+37	; 0x25
    1c0c:	8e a1       	ldd	r24, Y+38	; 0x26
    1c0e:	9f a1       	ldd	r25, Y+39	; 0x27
    1c10:	20 e0       	ldi	r18, 0x00	; 0
    1c12:	30 e0       	ldi	r19, 0x00	; 0
    1c14:	40 e2       	ldi	r20, 0x20	; 32
    1c16:	51 e4       	ldi	r21, 0x41	; 65
    1c18:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c1c:	dc 01       	movw	r26, r24
    1c1e:	cb 01       	movw	r24, r22
    1c20:	bc 01       	movw	r22, r24
    1c22:	cd 01       	movw	r24, r26
    1c24:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c28:	dc 01       	movw	r26, r24
    1c2a:	cb 01       	movw	r24, r22
    1c2c:	9f 8f       	std	Y+31, r25	; 0x1f
    1c2e:	8e 8f       	std	Y+30, r24	; 0x1e
    1c30:	0f c0       	rjmp	.+30     	; 0x1c50 <LCD_void_Write+0x1da>
    1c32:	88 ec       	ldi	r24, 0xC8	; 200
    1c34:	90 e0       	ldi	r25, 0x00	; 0
    1c36:	9d 8f       	std	Y+29, r25	; 0x1d
    1c38:	8c 8f       	std	Y+28, r24	; 0x1c
    1c3a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1c3c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1c3e:	01 97       	sbiw	r24, 0x01	; 1
    1c40:	f1 f7       	brne	.-4      	; 0x1c3e <LCD_void_Write+0x1c8>
    1c42:	9d 8f       	std	Y+29, r25	; 0x1d
    1c44:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c46:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1c48:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1c4a:	01 97       	sbiw	r24, 0x01	; 1
    1c4c:	9f 8f       	std	Y+31, r25	; 0x1f
    1c4e:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c50:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1c52:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1c54:	00 97       	sbiw	r24, 0x00	; 0
    1c56:	69 f7       	brne	.-38     	; 0x1c32 <LCD_void_Write+0x1bc>
    1c58:	24 c0       	rjmp	.+72     	; 0x1ca2 <LCD_void_Write+0x22c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c5a:	68 a1       	ldd	r22, Y+32	; 0x20
    1c5c:	79 a1       	ldd	r23, Y+33	; 0x21
    1c5e:	8a a1       	ldd	r24, Y+34	; 0x22
    1c60:	9b a1       	ldd	r25, Y+35	; 0x23
    1c62:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c66:	dc 01       	movw	r26, r24
    1c68:	cb 01       	movw	r24, r22
    1c6a:	9f 8f       	std	Y+31, r25	; 0x1f
    1c6c:	8e 8f       	std	Y+30, r24	; 0x1e
    1c6e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1c70:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1c72:	9b 8f       	std	Y+27, r25	; 0x1b
    1c74:	8a 8f       	std	Y+26, r24	; 0x1a
    1c76:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1c78:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1c7a:	01 97       	sbiw	r24, 0x01	; 1
    1c7c:	f1 f7       	brne	.-4      	; 0x1c7a <LCD_void_Write+0x204>
    1c7e:	9b 8f       	std	Y+27, r25	; 0x1b
    1c80:	8a 8f       	std	Y+26, r24	; 0x1a
    1c82:	0f c0       	rjmp	.+30     	; 0x1ca2 <LCD_void_Write+0x22c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1c84:	69 a5       	ldd	r22, Y+41	; 0x29
    1c86:	7a a5       	ldd	r23, Y+42	; 0x2a
    1c88:	8b a5       	ldd	r24, Y+43	; 0x2b
    1c8a:	9c a5       	ldd	r25, Y+44	; 0x2c
    1c8c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c90:	dc 01       	movw	r26, r24
    1c92:	cb 01       	movw	r24, r22
    1c94:	88 a7       	std	Y+40, r24	; 0x28
    1c96:	88 a5       	ldd	r24, Y+40	; 0x28
    1c98:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1c9a:	89 8d       	ldd	r24, Y+25	; 0x19
    1c9c:	8a 95       	dec	r24
    1c9e:	f1 f7       	brne	.-4      	; 0x1c9c <LCD_void_Write+0x226>
    1ca0:	89 8f       	std	Y+25, r24	; 0x19
		_delay_us(1);
		DIO_U8_Set_Pin_value(LCD_U8_CTRL_PORT,LCD_U8_E_PIN,PIN_LOW);
    1ca2:	82 e0       	ldi	r24, 0x02	; 2
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	62 e0       	ldi	r22, 0x02	; 2
    1ca8:	70 e0       	ldi	r23, 0x00	; 0
    1caa:	40 e0       	ldi	r20, 0x00	; 0
    1cac:	50 e0       	ldi	r21, 0x00	; 0
    1cae:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>
/*LSB*/
		DIO_U8_Set_Pin_value(LCD_u8_DATA_PORT,LCD_u8_DATA_PIN4,Get_Bit(Copy_u8_val,DIO_U8_PIN0));
    1cb2:	89 a9       	ldd	r24, Y+49	; 0x31
    1cb4:	88 2f       	mov	r24, r24
    1cb6:	90 e0       	ldi	r25, 0x00	; 0
    1cb8:	9c 01       	movw	r18, r24
    1cba:	21 70       	andi	r18, 0x01	; 1
    1cbc:	30 70       	andi	r19, 0x00	; 0
    1cbe:	80 e0       	ldi	r24, 0x00	; 0
    1cc0:	90 e0       	ldi	r25, 0x00	; 0
    1cc2:	64 e0       	ldi	r22, 0x04	; 4
    1cc4:	70 e0       	ldi	r23, 0x00	; 0
    1cc6:	a9 01       	movw	r20, r18
    1cc8:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>
		DIO_U8_Set_Pin_value(LCD_u8_DATA_PORT,LCD_u8_DATA_PIN5,Get_Bit(Copy_u8_val,DIO_U8_PIN1));
    1ccc:	89 a9       	ldd	r24, Y+49	; 0x31
    1cce:	86 95       	lsr	r24
    1cd0:	88 2f       	mov	r24, r24
    1cd2:	90 e0       	ldi	r25, 0x00	; 0
    1cd4:	9c 01       	movw	r18, r24
    1cd6:	21 70       	andi	r18, 0x01	; 1
    1cd8:	30 70       	andi	r19, 0x00	; 0
    1cda:	80 e0       	ldi	r24, 0x00	; 0
    1cdc:	90 e0       	ldi	r25, 0x00	; 0
    1cde:	65 e0       	ldi	r22, 0x05	; 5
    1ce0:	70 e0       	ldi	r23, 0x00	; 0
    1ce2:	a9 01       	movw	r20, r18
    1ce4:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>
		DIO_U8_Set_Pin_value(LCD_u8_DATA_PORT,LCD_u8_DATA_PIN6,Get_Bit(Copy_u8_val,DIO_U8_PIN2));
    1ce8:	89 a9       	ldd	r24, Y+49	; 0x31
    1cea:	86 95       	lsr	r24
    1cec:	86 95       	lsr	r24
    1cee:	88 2f       	mov	r24, r24
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	9c 01       	movw	r18, r24
    1cf4:	21 70       	andi	r18, 0x01	; 1
    1cf6:	30 70       	andi	r19, 0x00	; 0
    1cf8:	80 e0       	ldi	r24, 0x00	; 0
    1cfa:	90 e0       	ldi	r25, 0x00	; 0
    1cfc:	66 e0       	ldi	r22, 0x06	; 6
    1cfe:	70 e0       	ldi	r23, 0x00	; 0
    1d00:	a9 01       	movw	r20, r18
    1d02:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>
		DIO_U8_Set_Pin_value(LCD_u8_DATA_PORT,LCD_u8_DATA_PIN7,Get_Bit(Copy_u8_val,DIO_U8_PIN3));
    1d06:	89 a9       	ldd	r24, Y+49	; 0x31
    1d08:	86 95       	lsr	r24
    1d0a:	86 95       	lsr	r24
    1d0c:	86 95       	lsr	r24
    1d0e:	88 2f       	mov	r24, r24
    1d10:	90 e0       	ldi	r25, 0x00	; 0
    1d12:	9c 01       	movw	r18, r24
    1d14:	21 70       	andi	r18, 0x01	; 1
    1d16:	30 70       	andi	r19, 0x00	; 0
    1d18:	80 e0       	ldi	r24, 0x00	; 0
    1d1a:	90 e0       	ldi	r25, 0x00	; 0
    1d1c:	67 e0       	ldi	r22, 0x07	; 7
    1d1e:	70 e0       	ldi	r23, 0x00	; 0
    1d20:	a9 01       	movw	r20, r18
    1d22:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>
		/*E=1*/
		/*E=0*/
		DIO_U8_Set_Pin_value(LCD_U8_CTRL_PORT,LCD_U8_E_PIN,PIN_HIGH);
    1d26:	82 e0       	ldi	r24, 0x02	; 2
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	62 e0       	ldi	r22, 0x02	; 2
    1d2c:	70 e0       	ldi	r23, 0x00	; 0
    1d2e:	41 e0       	ldi	r20, 0x01	; 1
    1d30:	50 e0       	ldi	r21, 0x00	; 0
    1d32:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>
    1d36:	80 e0       	ldi	r24, 0x00	; 0
    1d38:	90 e0       	ldi	r25, 0x00	; 0
    1d3a:	a0 e8       	ldi	r26, 0x80	; 128
    1d3c:	bf e3       	ldi	r27, 0x3F	; 63
    1d3e:	8d 8b       	std	Y+21, r24	; 0x15
    1d40:	9e 8b       	std	Y+22, r25	; 0x16
    1d42:	af 8b       	std	Y+23, r26	; 0x17
    1d44:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1d46:	6d 89       	ldd	r22, Y+21	; 0x15
    1d48:	7e 89       	ldd	r23, Y+22	; 0x16
    1d4a:	8f 89       	ldd	r24, Y+23	; 0x17
    1d4c:	98 8d       	ldd	r25, Y+24	; 0x18
    1d4e:	2b ea       	ldi	r18, 0xAB	; 171
    1d50:	3a ea       	ldi	r19, 0xAA	; 170
    1d52:	4a e2       	ldi	r20, 0x2A	; 42
    1d54:	50 e4       	ldi	r21, 0x40	; 64
    1d56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d5a:	dc 01       	movw	r26, r24
    1d5c:	cb 01       	movw	r24, r22
    1d5e:	89 8b       	std	Y+17, r24	; 0x11
    1d60:	9a 8b       	std	Y+18, r25	; 0x12
    1d62:	ab 8b       	std	Y+19, r26	; 0x13
    1d64:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    1d66:	69 89       	ldd	r22, Y+17	; 0x11
    1d68:	7a 89       	ldd	r23, Y+18	; 0x12
    1d6a:	8b 89       	ldd	r24, Y+19	; 0x13
    1d6c:	9c 89       	ldd	r25, Y+20	; 0x14
    1d6e:	20 e0       	ldi	r18, 0x00	; 0
    1d70:	30 e0       	ldi	r19, 0x00	; 0
    1d72:	40 e8       	ldi	r20, 0x80	; 128
    1d74:	5f e3       	ldi	r21, 0x3F	; 63
    1d76:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1d7a:	88 23       	and	r24, r24
    1d7c:	1c f4       	brge	.+6      	; 0x1d84 <LCD_void_Write+0x30e>
		__ticks = 1;
    1d7e:	81 e0       	ldi	r24, 0x01	; 1
    1d80:	88 8b       	std	Y+16, r24	; 0x10
    1d82:	91 c0       	rjmp	.+290    	; 0x1ea6 <LCD_void_Write+0x430>
	else if (__tmp > 255)
    1d84:	69 89       	ldd	r22, Y+17	; 0x11
    1d86:	7a 89       	ldd	r23, Y+18	; 0x12
    1d88:	8b 89       	ldd	r24, Y+19	; 0x13
    1d8a:	9c 89       	ldd	r25, Y+20	; 0x14
    1d8c:	20 e0       	ldi	r18, 0x00	; 0
    1d8e:	30 e0       	ldi	r19, 0x00	; 0
    1d90:	4f e7       	ldi	r20, 0x7F	; 127
    1d92:	53 e4       	ldi	r21, 0x43	; 67
    1d94:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1d98:	18 16       	cp	r1, r24
    1d9a:	0c f0       	brlt	.+2      	; 0x1d9e <LCD_void_Write+0x328>
    1d9c:	7b c0       	rjmp	.+246    	; 0x1e94 <LCD_void_Write+0x41e>
	{
		_delay_ms(__us / 1000.0);
    1d9e:	6d 89       	ldd	r22, Y+21	; 0x15
    1da0:	7e 89       	ldd	r23, Y+22	; 0x16
    1da2:	8f 89       	ldd	r24, Y+23	; 0x17
    1da4:	98 8d       	ldd	r25, Y+24	; 0x18
    1da6:	20 e0       	ldi	r18, 0x00	; 0
    1da8:	30 e0       	ldi	r19, 0x00	; 0
    1daa:	4a e7       	ldi	r20, 0x7A	; 122
    1dac:	54 e4       	ldi	r21, 0x44	; 68
    1dae:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1db2:	dc 01       	movw	r26, r24
    1db4:	cb 01       	movw	r24, r22
    1db6:	8c 87       	std	Y+12, r24	; 0x0c
    1db8:	9d 87       	std	Y+13, r25	; 0x0d
    1dba:	ae 87       	std	Y+14, r26	; 0x0e
    1dbc:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dbe:	6c 85       	ldd	r22, Y+12	; 0x0c
    1dc0:	7d 85       	ldd	r23, Y+13	; 0x0d
    1dc2:	8e 85       	ldd	r24, Y+14	; 0x0e
    1dc4:	9f 85       	ldd	r25, Y+15	; 0x0f
    1dc6:	20 e0       	ldi	r18, 0x00	; 0
    1dc8:	30 e0       	ldi	r19, 0x00	; 0
    1dca:	4a ef       	ldi	r20, 0xFA	; 250
    1dcc:	54 e4       	ldi	r21, 0x44	; 68
    1dce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dd2:	dc 01       	movw	r26, r24
    1dd4:	cb 01       	movw	r24, r22
    1dd6:	88 87       	std	Y+8, r24	; 0x08
    1dd8:	99 87       	std	Y+9, r25	; 0x09
    1dda:	aa 87       	std	Y+10, r26	; 0x0a
    1ddc:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    1dde:	68 85       	ldd	r22, Y+8	; 0x08
    1de0:	79 85       	ldd	r23, Y+9	; 0x09
    1de2:	8a 85       	ldd	r24, Y+10	; 0x0a
    1de4:	9b 85       	ldd	r25, Y+11	; 0x0b
    1de6:	20 e0       	ldi	r18, 0x00	; 0
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	40 e8       	ldi	r20, 0x80	; 128
    1dec:	5f e3       	ldi	r21, 0x3F	; 63
    1dee:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1df2:	88 23       	and	r24, r24
    1df4:	2c f4       	brge	.+10     	; 0x1e00 <LCD_void_Write+0x38a>
		__ticks = 1;
    1df6:	81 e0       	ldi	r24, 0x01	; 1
    1df8:	90 e0       	ldi	r25, 0x00	; 0
    1dfa:	9f 83       	std	Y+7, r25	; 0x07
    1dfc:	8e 83       	std	Y+6, r24	; 0x06
    1dfe:	3f c0       	rjmp	.+126    	; 0x1e7e <LCD_void_Write+0x408>
	else if (__tmp > 65535)
    1e00:	68 85       	ldd	r22, Y+8	; 0x08
    1e02:	79 85       	ldd	r23, Y+9	; 0x09
    1e04:	8a 85       	ldd	r24, Y+10	; 0x0a
    1e06:	9b 85       	ldd	r25, Y+11	; 0x0b
    1e08:	20 e0       	ldi	r18, 0x00	; 0
    1e0a:	3f ef       	ldi	r19, 0xFF	; 255
    1e0c:	4f e7       	ldi	r20, 0x7F	; 127
    1e0e:	57 e4       	ldi	r21, 0x47	; 71
    1e10:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1e14:	18 16       	cp	r1, r24
    1e16:	4c f5       	brge	.+82     	; 0x1e6a <LCD_void_Write+0x3f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e18:	6c 85       	ldd	r22, Y+12	; 0x0c
    1e1a:	7d 85       	ldd	r23, Y+13	; 0x0d
    1e1c:	8e 85       	ldd	r24, Y+14	; 0x0e
    1e1e:	9f 85       	ldd	r25, Y+15	; 0x0f
    1e20:	20 e0       	ldi	r18, 0x00	; 0
    1e22:	30 e0       	ldi	r19, 0x00	; 0
    1e24:	40 e2       	ldi	r20, 0x20	; 32
    1e26:	51 e4       	ldi	r21, 0x41	; 65
    1e28:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e2c:	dc 01       	movw	r26, r24
    1e2e:	cb 01       	movw	r24, r22
    1e30:	bc 01       	movw	r22, r24
    1e32:	cd 01       	movw	r24, r26
    1e34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e38:	dc 01       	movw	r26, r24
    1e3a:	cb 01       	movw	r24, r22
    1e3c:	9f 83       	std	Y+7, r25	; 0x07
    1e3e:	8e 83       	std	Y+6, r24	; 0x06
    1e40:	0f c0       	rjmp	.+30     	; 0x1e60 <LCD_void_Write+0x3ea>
    1e42:	88 ec       	ldi	r24, 0xC8	; 200
    1e44:	90 e0       	ldi	r25, 0x00	; 0
    1e46:	9d 83       	std	Y+5, r25	; 0x05
    1e48:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1e4a:	8c 81       	ldd	r24, Y+4	; 0x04
    1e4c:	9d 81       	ldd	r25, Y+5	; 0x05
    1e4e:	01 97       	sbiw	r24, 0x01	; 1
    1e50:	f1 f7       	brne	.-4      	; 0x1e4e <LCD_void_Write+0x3d8>
    1e52:	9d 83       	std	Y+5, r25	; 0x05
    1e54:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e56:	8e 81       	ldd	r24, Y+6	; 0x06
    1e58:	9f 81       	ldd	r25, Y+7	; 0x07
    1e5a:	01 97       	sbiw	r24, 0x01	; 1
    1e5c:	9f 83       	std	Y+7, r25	; 0x07
    1e5e:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e60:	8e 81       	ldd	r24, Y+6	; 0x06
    1e62:	9f 81       	ldd	r25, Y+7	; 0x07
    1e64:	00 97       	sbiw	r24, 0x00	; 0
    1e66:	69 f7       	brne	.-38     	; 0x1e42 <LCD_void_Write+0x3cc>
    1e68:	24 c0       	rjmp	.+72     	; 0x1eb2 <LCD_void_Write+0x43c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e6a:	68 85       	ldd	r22, Y+8	; 0x08
    1e6c:	79 85       	ldd	r23, Y+9	; 0x09
    1e6e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1e70:	9b 85       	ldd	r25, Y+11	; 0x0b
    1e72:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e76:	dc 01       	movw	r26, r24
    1e78:	cb 01       	movw	r24, r22
    1e7a:	9f 83       	std	Y+7, r25	; 0x07
    1e7c:	8e 83       	std	Y+6, r24	; 0x06
    1e7e:	8e 81       	ldd	r24, Y+6	; 0x06
    1e80:	9f 81       	ldd	r25, Y+7	; 0x07
    1e82:	9b 83       	std	Y+3, r25	; 0x03
    1e84:	8a 83       	std	Y+2, r24	; 0x02
    1e86:	8a 81       	ldd	r24, Y+2	; 0x02
    1e88:	9b 81       	ldd	r25, Y+3	; 0x03
    1e8a:	01 97       	sbiw	r24, 0x01	; 1
    1e8c:	f1 f7       	brne	.-4      	; 0x1e8a <LCD_void_Write+0x414>
    1e8e:	9b 83       	std	Y+3, r25	; 0x03
    1e90:	8a 83       	std	Y+2, r24	; 0x02
    1e92:	0f c0       	rjmp	.+30     	; 0x1eb2 <LCD_void_Write+0x43c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1e94:	69 89       	ldd	r22, Y+17	; 0x11
    1e96:	7a 89       	ldd	r23, Y+18	; 0x12
    1e98:	8b 89       	ldd	r24, Y+19	; 0x13
    1e9a:	9c 89       	ldd	r25, Y+20	; 0x14
    1e9c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ea0:	dc 01       	movw	r26, r24
    1ea2:	cb 01       	movw	r24, r22
    1ea4:	88 8b       	std	Y+16, r24	; 0x10
    1ea6:	88 89       	ldd	r24, Y+16	; 0x10
    1ea8:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1eaa:	89 81       	ldd	r24, Y+1	; 0x01
    1eac:	8a 95       	dec	r24
    1eae:	f1 f7       	brne	.-4      	; 0x1eac <LCD_void_Write+0x436>
    1eb0:	89 83       	std	Y+1, r24	; 0x01
		_delay_us(1);
		DIO_U8_Set_Pin_value(LCD_U8_CTRL_PORT,LCD_U8_E_PIN,PIN_LOW);
    1eb2:	82 e0       	ldi	r24, 0x02	; 2
    1eb4:	90 e0       	ldi	r25, 0x00	; 0
    1eb6:	62 e0       	ldi	r22, 0x02	; 2
    1eb8:	70 e0       	ldi	r23, 0x00	; 0
    1eba:	40 e0       	ldi	r20, 0x00	; 0
    1ebc:	50 e0       	ldi	r21, 0x00	; 0
    1ebe:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>

#endif


}
    1ec2:	e1 96       	adiw	r28, 0x31	; 49
    1ec4:	0f b6       	in	r0, 0x3f	; 63
    1ec6:	f8 94       	cli
    1ec8:	de bf       	out	0x3e, r29	; 62
    1eca:	0f be       	out	0x3f, r0	; 63
    1ecc:	cd bf       	out	0x3d, r28	; 61
    1ece:	cf 91       	pop	r28
    1ed0:	df 91       	pop	r29
    1ed2:	08 95       	ret

00001ed4 <LCD_void_Write_Data>:


void LCD_void_Write_Data(u8 Copy_u8_char)
{
    1ed4:	df 93       	push	r29
    1ed6:	cf 93       	push	r28
    1ed8:	0f 92       	push	r0
    1eda:	cd b7       	in	r28, 0x3d	; 61
    1edc:	de b7       	in	r29, 0x3e	; 62
    1ede:	89 83       	std	Y+1, r24	; 0x01
	/*steps*/
		/*RS=1*/
//	DIO_U8_Set_Pin_Dir(LCD_U8_CTRL_PORT,LCD_U8_RS_PIN,PIN_OUTPUT);
	DIO_U8_Set_Pin_value(LCD_U8_CTRL_PORT,LCD_U8_RS_PIN,PIN_HIGH);
    1ee0:	82 e0       	ldi	r24, 0x02	; 2
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	60 e0       	ldi	r22, 0x00	; 0
    1ee6:	70 e0       	ldi	r23, 0x00	; 0
    1ee8:	41 e0       	ldi	r20, 0x01	; 1
    1eea:	50 e0       	ldi	r21, 0x00	; 0
    1eec:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <DIO_U8_Set_Pin_value>
		/*RW=0*/
		/*write a data*/
		/*E=1*/
		/*E=0*/
	LCD_void_Write(Copy_u8_char);
    1ef0:	89 81       	ldd	r24, Y+1	; 0x01
    1ef2:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <LCD_void_Write>
}
    1ef6:	0f 90       	pop	r0
    1ef8:	cf 91       	pop	r28
    1efa:	df 91       	pop	r29
    1efc:	08 95       	ret

00001efe <LCD_void_Write_String>:




void LCD_void_Write_String(u8 *str)
{
    1efe:	df 93       	push	r29
    1f00:	cf 93       	push	r28
    1f02:	00 d0       	rcall	.+0      	; 0x1f04 <LCD_void_Write_String+0x6>
    1f04:	cd b7       	in	r28, 0x3d	; 61
    1f06:	de b7       	in	r29, 0x3e	; 62
    1f08:	9a 83       	std	Y+2, r25	; 0x02
    1f0a:	89 83       	std	Y+1, r24	; 0x01
    1f0c:	0a c0       	rjmp	.+20     	; 0x1f22 <LCD_void_Write_String+0x24>
	while( *str!='\0')
	{
		LCD_void_Write_Data(*str);
    1f0e:	e9 81       	ldd	r30, Y+1	; 0x01
    1f10:	fa 81       	ldd	r31, Y+2	; 0x02
    1f12:	80 81       	ld	r24, Z
    1f14:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
		str++;
    1f18:	89 81       	ldd	r24, Y+1	; 0x01
    1f1a:	9a 81       	ldd	r25, Y+2	; 0x02
    1f1c:	01 96       	adiw	r24, 0x01	; 1
    1f1e:	9a 83       	std	Y+2, r25	; 0x02
    1f20:	89 83       	std	Y+1, r24	; 0x01



void LCD_void_Write_String(u8 *str)
{
	while( *str!='\0')
    1f22:	e9 81       	ldd	r30, Y+1	; 0x01
    1f24:	fa 81       	ldd	r31, Y+2	; 0x02
    1f26:	80 81       	ld	r24, Z
    1f28:	88 23       	and	r24, r24
    1f2a:	89 f7       	brne	.-30     	; 0x1f0e <LCD_void_Write_String+0x10>
	{
		LCD_void_Write_Data(*str);
		str++;
	}
}
    1f2c:	0f 90       	pop	r0
    1f2e:	0f 90       	pop	r0
    1f30:	cf 91       	pop	r28
    1f32:	df 91       	pop	r29
    1f34:	08 95       	ret

00001f36 <LCD_void_Write_Numbers>:


void LCD_void_Write_Numbers(u8 Copy_U8_Number)
{
    1f36:	df 93       	push	r29
    1f38:	cf 93       	push	r28
    1f3a:	cd b7       	in	r28, 0x3d	; 61
    1f3c:	de b7       	in	r29, 0x3e	; 62
    1f3e:	67 97       	sbiw	r28, 0x17	; 23
    1f40:	0f b6       	in	r0, 0x3f	; 63
    1f42:	f8 94       	cli
    1f44:	de bf       	out	0x3e, r29	; 62
    1f46:	0f be       	out	0x3f, r0	; 63
    1f48:	cd bf       	out	0x3d, r28	; 61
    1f4a:	8f 8b       	std	Y+23, r24	; 0x17
	u8 rem ;
	u8 index=0 ;
    1f4c:	19 82       	std	Y+1, r1	; 0x01
    1f4e:	1c c0       	rjmp	.+56     	; 0x1f88 <LCD_void_Write_Numbers+0x52>
	u8 arr[BITSET_NUMBER];
	while(Copy_U8_Number!=0)
	{
		rem=Copy_U8_Number%10;
    1f50:	8f 89       	ldd	r24, Y+23	; 0x17
    1f52:	9a e0       	ldi	r25, 0x0A	; 10
    1f54:	69 2f       	mov	r22, r25
    1f56:	0e 94 2b 18 	call	0x3056	; 0x3056 <__udivmodqi4>
    1f5a:	89 2f       	mov	r24, r25
    1f5c:	8a 83       	std	Y+2, r24	; 0x02
		arr[index]=rem+'0';
    1f5e:	89 81       	ldd	r24, Y+1	; 0x01
    1f60:	28 2f       	mov	r18, r24
    1f62:	30 e0       	ldi	r19, 0x00	; 0
    1f64:	8a 81       	ldd	r24, Y+2	; 0x02
    1f66:	48 2f       	mov	r20, r24
    1f68:	40 5d       	subi	r20, 0xD0	; 208
    1f6a:	ce 01       	movw	r24, r28
    1f6c:	03 96       	adiw	r24, 0x03	; 3
    1f6e:	fc 01       	movw	r30, r24
    1f70:	e2 0f       	add	r30, r18
    1f72:	f3 1f       	adc	r31, r19
    1f74:	40 83       	st	Z, r20
		index++;
    1f76:	89 81       	ldd	r24, Y+1	; 0x01
    1f78:	8f 5f       	subi	r24, 0xFF	; 255
    1f7a:	89 83       	std	Y+1, r24	; 0x01
		Copy_U8_Number/=10;
    1f7c:	8f 89       	ldd	r24, Y+23	; 0x17
    1f7e:	9a e0       	ldi	r25, 0x0A	; 10
    1f80:	69 2f       	mov	r22, r25
    1f82:	0e 94 2b 18 	call	0x3056	; 0x3056 <__udivmodqi4>
    1f86:	8f 8b       	std	Y+23, r24	; 0x17
void LCD_void_Write_Numbers(u8 Copy_U8_Number)
{
	u8 rem ;
	u8 index=0 ;
	u8 arr[BITSET_NUMBER];
	while(Copy_U8_Number!=0)
    1f88:	8f 89       	ldd	r24, Y+23	; 0x17
    1f8a:	88 23       	and	r24, r24
    1f8c:	09 f7       	brne	.-62     	; 0x1f50 <LCD_void_Write_Numbers+0x1a>
		rem=Copy_U8_Number%10;
		arr[index]=rem+'0';
		index++;
		Copy_U8_Number/=10;
	}
	index--;
    1f8e:	89 81       	ldd	r24, Y+1	; 0x01
    1f90:	81 50       	subi	r24, 0x01	; 1
    1f92:	89 83       	std	Y+1, r24	; 0x01
	while(index<0)
	{
		LCD_void_Write_Data(arr[index]);
		index--;
	}
}
    1f94:	67 96       	adiw	r28, 0x17	; 23
    1f96:	0f b6       	in	r0, 0x3f	; 63
    1f98:	f8 94       	cli
    1f9a:	de bf       	out	0x3e, r29	; 62
    1f9c:	0f be       	out	0x3f, r0	; 63
    1f9e:	cd bf       	out	0x3d, r28	; 61
    1fa0:	cf 91       	pop	r28
    1fa2:	df 91       	pop	r29
    1fa4:	08 95       	ret

00001fa6 <LCD_void_DDRAM_Address>:




void LCD_void_DDRAM_Address(u8 Copy_u8_Line , u8 Copy_u8_Location)
{
    1fa6:	df 93       	push	r29
    1fa8:	cf 93       	push	r28
    1faa:	00 d0       	rcall	.+0      	; 0x1fac <LCD_void_DDRAM_Address+0x6>
    1fac:	0f 92       	push	r0
    1fae:	cd b7       	in	r28, 0x3d	; 61
    1fb0:	de b7       	in	r29, 0x3e	; 62
    1fb2:	8a 83       	std	Y+2, r24	; 0x02
    1fb4:	6b 83       	std	Y+3, r22	; 0x03
	u8 DDRAM_Address = (Copy_u8_Location+(64*Copy_u8_Line));
    1fb6:	8a 81       	ldd	r24, Y+2	; 0x02
    1fb8:	88 2f       	mov	r24, r24
    1fba:	90 e0       	ldi	r25, 0x00	; 0
    1fbc:	00 24       	eor	r0, r0
    1fbe:	96 95       	lsr	r25
    1fc0:	87 95       	ror	r24
    1fc2:	07 94       	ror	r0
    1fc4:	96 95       	lsr	r25
    1fc6:	87 95       	ror	r24
    1fc8:	07 94       	ror	r0
    1fca:	98 2f       	mov	r25, r24
    1fcc:	80 2d       	mov	r24, r0
    1fce:	98 2f       	mov	r25, r24
    1fd0:	8b 81       	ldd	r24, Y+3	; 0x03
    1fd2:	89 0f       	add	r24, r25
    1fd4:	89 83       	std	Y+1, r24	; 0x01
	DDRAM_Address|=0b10000000;
    1fd6:	89 81       	ldd	r24, Y+1	; 0x01
    1fd8:	80 68       	ori	r24, 0x80	; 128
    1fda:	89 83       	std	Y+1, r24	; 0x01
	LCD_void_Write_CMD(DDRAM_Address);
    1fdc:	89 81       	ldd	r24, Y+1	; 0x01
    1fde:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <LCD_void_Write_CMD>
}
    1fe2:	0f 90       	pop	r0
    1fe4:	0f 90       	pop	r0
    1fe6:	0f 90       	pop	r0
    1fe8:	cf 91       	pop	r28
    1fea:	df 91       	pop	r29
    1fec:	08 95       	ret

00001fee <LCD_void_Set_CGRAM_Address>:


void LCD_void_Set_CGRAM_Address(u8 Address , u8 *ptr)
{
    1fee:	df 93       	push	r29
    1ff0:	cf 93       	push	r28
    1ff2:	00 d0       	rcall	.+0      	; 0x1ff4 <LCD_void_Set_CGRAM_Address+0x6>
    1ff4:	00 d0       	rcall	.+0      	; 0x1ff6 <LCD_void_Set_CGRAM_Address+0x8>
    1ff6:	cd b7       	in	r28, 0x3d	; 61
    1ff8:	de b7       	in	r29, 0x3e	; 62
    1ffa:	8a 83       	std	Y+2, r24	; 0x02
    1ffc:	7c 83       	std	Y+4, r23	; 0x04
    1ffe:	6b 83       	std	Y+3, r22	; 0x03
	LCD_void_Write_CMD(Address);
    2000:	8a 81       	ldd	r24, Y+2	; 0x02
    2002:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <LCD_void_Write_CMD>
	for(u8 i =0 ; i<8 ; i++)
    2006:	19 82       	std	Y+1, r1	; 0x01
    2008:	0d c0       	rjmp	.+26     	; 0x2024 <LCD_void_Set_CGRAM_Address+0x36>
	{
		LCD_void_Write_Data(*ptr);
    200a:	eb 81       	ldd	r30, Y+3	; 0x03
    200c:	fc 81       	ldd	r31, Y+4	; 0x04
    200e:	80 81       	ld	r24, Z
    2010:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
		ptr++;
    2014:	8b 81       	ldd	r24, Y+3	; 0x03
    2016:	9c 81       	ldd	r25, Y+4	; 0x04
    2018:	01 96       	adiw	r24, 0x01	; 1
    201a:	9c 83       	std	Y+4, r25	; 0x04
    201c:	8b 83       	std	Y+3, r24	; 0x03


void LCD_void_Set_CGRAM_Address(u8 Address , u8 *ptr)
{
	LCD_void_Write_CMD(Address);
	for(u8 i =0 ; i<8 ; i++)
    201e:	89 81       	ldd	r24, Y+1	; 0x01
    2020:	8f 5f       	subi	r24, 0xFF	; 255
    2022:	89 83       	std	Y+1, r24	; 0x01
    2024:	89 81       	ldd	r24, Y+1	; 0x01
    2026:	88 30       	cpi	r24, 0x08	; 8
    2028:	80 f3       	brcs	.-32     	; 0x200a <LCD_void_Set_CGRAM_Address+0x1c>
	{
		LCD_void_Write_Data(*ptr);
		ptr++;
	}

}
    202a:	0f 90       	pop	r0
    202c:	0f 90       	pop	r0
    202e:	0f 90       	pop	r0
    2030:	0f 90       	pop	r0
    2032:	cf 91       	pop	r28
    2034:	df 91       	pop	r29
    2036:	08 95       	ret

00002038 <LCD_void_Clear_Screen>:

void LCD_void_Clear_Screen(void)
{
    2038:	df 93       	push	r29
    203a:	cf 93       	push	r28
    203c:	cd b7       	in	r28, 0x3d	; 61
    203e:	de b7       	in	r29, 0x3e	; 62
    2040:	2e 97       	sbiw	r28, 0x0e	; 14
    2042:	0f b6       	in	r0, 0x3f	; 63
    2044:	f8 94       	cli
    2046:	de bf       	out	0x3e, r29	; 62
    2048:	0f be       	out	0x3f, r0	; 63
    204a:	cd bf       	out	0x3d, r28	; 61
	LCD_void_Write_CMD(LCD_Clear_Display_Screen);
    204c:	81 e0       	ldi	r24, 0x01	; 1
    204e:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <LCD_void_Write_CMD>
    2052:	80 e0       	ldi	r24, 0x00	; 0
    2054:	90 e0       	ldi	r25, 0x00	; 0
    2056:	a0 e0       	ldi	r26, 0x00	; 0
    2058:	b0 e4       	ldi	r27, 0x40	; 64
    205a:	8b 87       	std	Y+11, r24	; 0x0b
    205c:	9c 87       	std	Y+12, r25	; 0x0c
    205e:	ad 87       	std	Y+13, r26	; 0x0d
    2060:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2062:	6b 85       	ldd	r22, Y+11	; 0x0b
    2064:	7c 85       	ldd	r23, Y+12	; 0x0c
    2066:	8d 85       	ldd	r24, Y+13	; 0x0d
    2068:	9e 85       	ldd	r25, Y+14	; 0x0e
    206a:	20 e0       	ldi	r18, 0x00	; 0
    206c:	30 e0       	ldi	r19, 0x00	; 0
    206e:	4a ef       	ldi	r20, 0xFA	; 250
    2070:	54 e4       	ldi	r21, 0x44	; 68
    2072:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2076:	dc 01       	movw	r26, r24
    2078:	cb 01       	movw	r24, r22
    207a:	8f 83       	std	Y+7, r24	; 0x07
    207c:	98 87       	std	Y+8, r25	; 0x08
    207e:	a9 87       	std	Y+9, r26	; 0x09
    2080:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2082:	6f 81       	ldd	r22, Y+7	; 0x07
    2084:	78 85       	ldd	r23, Y+8	; 0x08
    2086:	89 85       	ldd	r24, Y+9	; 0x09
    2088:	9a 85       	ldd	r25, Y+10	; 0x0a
    208a:	20 e0       	ldi	r18, 0x00	; 0
    208c:	30 e0       	ldi	r19, 0x00	; 0
    208e:	40 e8       	ldi	r20, 0x80	; 128
    2090:	5f e3       	ldi	r21, 0x3F	; 63
    2092:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2096:	88 23       	and	r24, r24
    2098:	2c f4       	brge	.+10     	; 0x20a4 <LCD_void_Clear_Screen+0x6c>
		__ticks = 1;
    209a:	81 e0       	ldi	r24, 0x01	; 1
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	9e 83       	std	Y+6, r25	; 0x06
    20a0:	8d 83       	std	Y+5, r24	; 0x05
    20a2:	3f c0       	rjmp	.+126    	; 0x2122 <LCD_void_Clear_Screen+0xea>
	else if (__tmp > 65535)
    20a4:	6f 81       	ldd	r22, Y+7	; 0x07
    20a6:	78 85       	ldd	r23, Y+8	; 0x08
    20a8:	89 85       	ldd	r24, Y+9	; 0x09
    20aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    20ac:	20 e0       	ldi	r18, 0x00	; 0
    20ae:	3f ef       	ldi	r19, 0xFF	; 255
    20b0:	4f e7       	ldi	r20, 0x7F	; 127
    20b2:	57 e4       	ldi	r21, 0x47	; 71
    20b4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    20b8:	18 16       	cp	r1, r24
    20ba:	4c f5       	brge	.+82     	; 0x210e <LCD_void_Clear_Screen+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20bc:	6b 85       	ldd	r22, Y+11	; 0x0b
    20be:	7c 85       	ldd	r23, Y+12	; 0x0c
    20c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    20c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    20c4:	20 e0       	ldi	r18, 0x00	; 0
    20c6:	30 e0       	ldi	r19, 0x00	; 0
    20c8:	40 e2       	ldi	r20, 0x20	; 32
    20ca:	51 e4       	ldi	r21, 0x41	; 65
    20cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20d0:	dc 01       	movw	r26, r24
    20d2:	cb 01       	movw	r24, r22
    20d4:	bc 01       	movw	r22, r24
    20d6:	cd 01       	movw	r24, r26
    20d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20dc:	dc 01       	movw	r26, r24
    20de:	cb 01       	movw	r24, r22
    20e0:	9e 83       	std	Y+6, r25	; 0x06
    20e2:	8d 83       	std	Y+5, r24	; 0x05
    20e4:	0f c0       	rjmp	.+30     	; 0x2104 <LCD_void_Clear_Screen+0xcc>
    20e6:	88 ec       	ldi	r24, 0xC8	; 200
    20e8:	90 e0       	ldi	r25, 0x00	; 0
    20ea:	9c 83       	std	Y+4, r25	; 0x04
    20ec:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    20ee:	8b 81       	ldd	r24, Y+3	; 0x03
    20f0:	9c 81       	ldd	r25, Y+4	; 0x04
    20f2:	01 97       	sbiw	r24, 0x01	; 1
    20f4:	f1 f7       	brne	.-4      	; 0x20f2 <LCD_void_Clear_Screen+0xba>
    20f6:	9c 83       	std	Y+4, r25	; 0x04
    20f8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20fa:	8d 81       	ldd	r24, Y+5	; 0x05
    20fc:	9e 81       	ldd	r25, Y+6	; 0x06
    20fe:	01 97       	sbiw	r24, 0x01	; 1
    2100:	9e 83       	std	Y+6, r25	; 0x06
    2102:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2104:	8d 81       	ldd	r24, Y+5	; 0x05
    2106:	9e 81       	ldd	r25, Y+6	; 0x06
    2108:	00 97       	sbiw	r24, 0x00	; 0
    210a:	69 f7       	brne	.-38     	; 0x20e6 <LCD_void_Clear_Screen+0xae>
    210c:	14 c0       	rjmp	.+40     	; 0x2136 <LCD_void_Clear_Screen+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    210e:	6f 81       	ldd	r22, Y+7	; 0x07
    2110:	78 85       	ldd	r23, Y+8	; 0x08
    2112:	89 85       	ldd	r24, Y+9	; 0x09
    2114:	9a 85       	ldd	r25, Y+10	; 0x0a
    2116:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    211a:	dc 01       	movw	r26, r24
    211c:	cb 01       	movw	r24, r22
    211e:	9e 83       	std	Y+6, r25	; 0x06
    2120:	8d 83       	std	Y+5, r24	; 0x05
    2122:	8d 81       	ldd	r24, Y+5	; 0x05
    2124:	9e 81       	ldd	r25, Y+6	; 0x06
    2126:	9a 83       	std	Y+2, r25	; 0x02
    2128:	89 83       	std	Y+1, r24	; 0x01
    212a:	89 81       	ldd	r24, Y+1	; 0x01
    212c:	9a 81       	ldd	r25, Y+2	; 0x02
    212e:	01 97       	sbiw	r24, 0x01	; 1
    2130:	f1 f7       	brne	.-4      	; 0x212e <LCD_void_Clear_Screen+0xf6>
    2132:	9a 83       	std	Y+2, r25	; 0x02
    2134:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    2136:	2e 96       	adiw	r28, 0x0e	; 14
    2138:	0f b6       	in	r0, 0x3f	; 63
    213a:	f8 94       	cli
    213c:	de bf       	out	0x3e, r29	; 62
    213e:	0f be       	out	0x3f, r0	; 63
    2140:	cd bf       	out	0x3d, r28	; 61
    2142:	cf 91       	pop	r28
    2144:	df 91       	pop	r29
    2146:	08 95       	ret

00002148 <main>:
#include"LCD_interface.h"

#define F_CPU		8000000UL
#define short_time		1000
void main(void)
{
    2148:	0f 93       	push	r16
    214a:	1f 93       	push	r17
    214c:	df 93       	push	r29
    214e:	cf 93       	push	r28
    2150:	cd b7       	in	r28, 0x3d	; 61
    2152:	de b7       	in	r29, 0x3e	; 62
    2154:	cb 5c       	subi	r28, 0xCB	; 203
    2156:	d0 40       	sbci	r29, 0x00	; 0
    2158:	0f b6       	in	r0, 0x3f	; 63
    215a:	f8 94       	cli
    215c:	de bf       	out	0x3e, r29	; 62
    215e:	0f be       	out	0x3f, r0	; 63
    2160:	cd bf       	out	0x3d, r28	; 61

DIO_void_Init();
    2162:	0e 94 bc 06 	call	0xd78	; 0xd78 <DIO_void_Init>
LCD_void_Init();
    2166:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <LCD_void_Init>

/*fram1*/

u8 arr0[]={0, 0, 0, 4, 14, 27, 14, 4};// ball
    216a:	ce 01       	movw	r24, r28
    216c:	8f 58       	subi	r24, 0x8F	; 143
    216e:	9f 4f       	sbci	r25, 0xFF	; 255
    2170:	c7 55       	subi	r28, 0x57	; 87
    2172:	df 4f       	sbci	r29, 0xFF	; 255
    2174:	99 83       	std	Y+1, r25	; 0x01
    2176:	88 83       	st	Y, r24
    2178:	c9 5a       	subi	r28, 0xA9	; 169
    217a:	d0 40       	sbci	r29, 0x00	; 0
    217c:	84 ec       	ldi	r24, 0xC4	; 196
    217e:	90 e0       	ldi	r25, 0x00	; 0
    2180:	c5 55       	subi	r28, 0x55	; 85
    2182:	df 4f       	sbci	r29, 0xFF	; 255
    2184:	99 83       	std	Y+1, r25	; 0x01
    2186:	88 83       	st	Y, r24
    2188:	cb 5a       	subi	r28, 0xAB	; 171
    218a:	d0 40       	sbci	r29, 0x00	; 0
    218c:	98 e0       	ldi	r25, 0x08	; 8
    218e:	c3 55       	subi	r28, 0x53	; 83
    2190:	df 4f       	sbci	r29, 0xFF	; 255
    2192:	98 83       	st	Y, r25
    2194:	cd 5a       	subi	r28, 0xAD	; 173
    2196:	d0 40       	sbci	r29, 0x00	; 0
    2198:	c5 55       	subi	r28, 0x55	; 85
    219a:	df 4f       	sbci	r29, 0xFF	; 255
    219c:	e8 81       	ld	r30, Y
    219e:	f9 81       	ldd	r31, Y+1	; 0x01
    21a0:	cb 5a       	subi	r28, 0xAB	; 171
    21a2:	d0 40       	sbci	r29, 0x00	; 0
    21a4:	00 80       	ld	r0, Z
    21a6:	c5 55       	subi	r28, 0x55	; 85
    21a8:	df 4f       	sbci	r29, 0xFF	; 255
    21aa:	88 81       	ld	r24, Y
    21ac:	99 81       	ldd	r25, Y+1	; 0x01
    21ae:	cb 5a       	subi	r28, 0xAB	; 171
    21b0:	d0 40       	sbci	r29, 0x00	; 0
    21b2:	01 96       	adiw	r24, 0x01	; 1
    21b4:	c5 55       	subi	r28, 0x55	; 85
    21b6:	df 4f       	sbci	r29, 0xFF	; 255
    21b8:	99 83       	std	Y+1, r25	; 0x01
    21ba:	88 83       	st	Y, r24
    21bc:	cb 5a       	subi	r28, 0xAB	; 171
    21be:	d0 40       	sbci	r29, 0x00	; 0
    21c0:	c7 55       	subi	r28, 0x57	; 87
    21c2:	df 4f       	sbci	r29, 0xFF	; 255
    21c4:	e8 81       	ld	r30, Y
    21c6:	f9 81       	ldd	r31, Y+1	; 0x01
    21c8:	c9 5a       	subi	r28, 0xA9	; 169
    21ca:	d0 40       	sbci	r29, 0x00	; 0
    21cc:	00 82       	st	Z, r0
    21ce:	c7 55       	subi	r28, 0x57	; 87
    21d0:	df 4f       	sbci	r29, 0xFF	; 255
    21d2:	88 81       	ld	r24, Y
    21d4:	99 81       	ldd	r25, Y+1	; 0x01
    21d6:	c9 5a       	subi	r28, 0xA9	; 169
    21d8:	d0 40       	sbci	r29, 0x00	; 0
    21da:	01 96       	adiw	r24, 0x01	; 1
    21dc:	c7 55       	subi	r28, 0x57	; 87
    21de:	df 4f       	sbci	r29, 0xFF	; 255
    21e0:	99 83       	std	Y+1, r25	; 0x01
    21e2:	88 83       	st	Y, r24
    21e4:	c9 5a       	subi	r28, 0xA9	; 169
    21e6:	d0 40       	sbci	r29, 0x00	; 0
    21e8:	c3 55       	subi	r28, 0x53	; 83
    21ea:	df 4f       	sbci	r29, 0xFF	; 255
    21ec:	98 81       	ld	r25, Y
    21ee:	cd 5a       	subi	r28, 0xAD	; 173
    21f0:	d0 40       	sbci	r29, 0x00	; 0
    21f2:	91 50       	subi	r25, 0x01	; 1
    21f4:	c3 55       	subi	r28, 0x53	; 83
    21f6:	df 4f       	sbci	r29, 0xFF	; 255
    21f8:	98 83       	st	Y, r25
    21fa:	cd 5a       	subi	r28, 0xAD	; 173
    21fc:	d0 40       	sbci	r29, 0x00	; 0
    21fe:	c3 55       	subi	r28, 0x53	; 83
    2200:	df 4f       	sbci	r29, 0xFF	; 255
    2202:	e8 81       	ld	r30, Y
    2204:	cd 5a       	subi	r28, 0xAD	; 173
    2206:	d0 40       	sbci	r29, 0x00	; 0
    2208:	ee 23       	and	r30, r30
    220a:	31 f6       	brne	.-116    	; 0x2198 <main+0x50>
LCD_void_Set_CGRAM_Address(ADDRESS_OF_CHAR0_IN_CGRAM,arr0);
    220c:	9e 01       	movw	r18, r28
    220e:	2f 58       	subi	r18, 0x8F	; 143
    2210:	3f 4f       	sbci	r19, 0xFF	; 255
    2212:	80 e4       	ldi	r24, 0x40	; 64
    2214:	b9 01       	movw	r22, r18
    2216:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <LCD_void_Set_CGRAM_Address>

u8 arr1[]={0, 4, 10, 4, 31, 4, 10, 17};// man
    221a:	ce 01       	movw	r24, r28
    221c:	87 58       	subi	r24, 0x87	; 135
    221e:	9f 4f       	sbci	r25, 0xFF	; 255
    2220:	c2 55       	subi	r28, 0x52	; 82
    2222:	df 4f       	sbci	r29, 0xFF	; 255
    2224:	99 83       	std	Y+1, r25	; 0x01
    2226:	88 83       	st	Y, r24
    2228:	ce 5a       	subi	r28, 0xAE	; 174
    222a:	d0 40       	sbci	r29, 0x00	; 0
    222c:	8c eb       	ldi	r24, 0xBC	; 188
    222e:	90 e0       	ldi	r25, 0x00	; 0
    2230:	c0 55       	subi	r28, 0x50	; 80
    2232:	df 4f       	sbci	r29, 0xFF	; 255
    2234:	99 83       	std	Y+1, r25	; 0x01
    2236:	88 83       	st	Y, r24
    2238:	c0 5b       	subi	r28, 0xB0	; 176
    223a:	d0 40       	sbci	r29, 0x00	; 0
    223c:	98 e0       	ldi	r25, 0x08	; 8
    223e:	ce 54       	subi	r28, 0x4E	; 78
    2240:	df 4f       	sbci	r29, 0xFF	; 255
    2242:	98 83       	st	Y, r25
    2244:	c2 5b       	subi	r28, 0xB2	; 178
    2246:	d0 40       	sbci	r29, 0x00	; 0
    2248:	c0 55       	subi	r28, 0x50	; 80
    224a:	df 4f       	sbci	r29, 0xFF	; 255
    224c:	e8 81       	ld	r30, Y
    224e:	f9 81       	ldd	r31, Y+1	; 0x01
    2250:	c0 5b       	subi	r28, 0xB0	; 176
    2252:	d0 40       	sbci	r29, 0x00	; 0
    2254:	00 80       	ld	r0, Z
    2256:	c0 55       	subi	r28, 0x50	; 80
    2258:	df 4f       	sbci	r29, 0xFF	; 255
    225a:	88 81       	ld	r24, Y
    225c:	99 81       	ldd	r25, Y+1	; 0x01
    225e:	c0 5b       	subi	r28, 0xB0	; 176
    2260:	d0 40       	sbci	r29, 0x00	; 0
    2262:	01 96       	adiw	r24, 0x01	; 1
    2264:	c0 55       	subi	r28, 0x50	; 80
    2266:	df 4f       	sbci	r29, 0xFF	; 255
    2268:	99 83       	std	Y+1, r25	; 0x01
    226a:	88 83       	st	Y, r24
    226c:	c0 5b       	subi	r28, 0xB0	; 176
    226e:	d0 40       	sbci	r29, 0x00	; 0
    2270:	c2 55       	subi	r28, 0x52	; 82
    2272:	df 4f       	sbci	r29, 0xFF	; 255
    2274:	e8 81       	ld	r30, Y
    2276:	f9 81       	ldd	r31, Y+1	; 0x01
    2278:	ce 5a       	subi	r28, 0xAE	; 174
    227a:	d0 40       	sbci	r29, 0x00	; 0
    227c:	00 82       	st	Z, r0
    227e:	c2 55       	subi	r28, 0x52	; 82
    2280:	df 4f       	sbci	r29, 0xFF	; 255
    2282:	88 81       	ld	r24, Y
    2284:	99 81       	ldd	r25, Y+1	; 0x01
    2286:	ce 5a       	subi	r28, 0xAE	; 174
    2288:	d0 40       	sbci	r29, 0x00	; 0
    228a:	01 96       	adiw	r24, 0x01	; 1
    228c:	c2 55       	subi	r28, 0x52	; 82
    228e:	df 4f       	sbci	r29, 0xFF	; 255
    2290:	99 83       	std	Y+1, r25	; 0x01
    2292:	88 83       	st	Y, r24
    2294:	ce 5a       	subi	r28, 0xAE	; 174
    2296:	d0 40       	sbci	r29, 0x00	; 0
    2298:	ce 54       	subi	r28, 0x4E	; 78
    229a:	df 4f       	sbci	r29, 0xFF	; 255
    229c:	98 81       	ld	r25, Y
    229e:	c2 5b       	subi	r28, 0xB2	; 178
    22a0:	d0 40       	sbci	r29, 0x00	; 0
    22a2:	91 50       	subi	r25, 0x01	; 1
    22a4:	ce 54       	subi	r28, 0x4E	; 78
    22a6:	df 4f       	sbci	r29, 0xFF	; 255
    22a8:	98 83       	st	Y, r25
    22aa:	c2 5b       	subi	r28, 0xB2	; 178
    22ac:	d0 40       	sbci	r29, 0x00	; 0
    22ae:	ce 54       	subi	r28, 0x4E	; 78
    22b0:	df 4f       	sbci	r29, 0xFF	; 255
    22b2:	e8 81       	ld	r30, Y
    22b4:	c2 5b       	subi	r28, 0xB2	; 178
    22b6:	d0 40       	sbci	r29, 0x00	; 0
    22b8:	ee 23       	and	r30, r30
    22ba:	31 f6       	brne	.-116    	; 0x2248 <main+0x100>
LCD_void_Set_CGRAM_Address(ADDRESS_OF_CHAR0_IN_CGRAM+8,arr1);
    22bc:	9e 01       	movw	r18, r28
    22be:	27 58       	subi	r18, 0x87	; 135
    22c0:	3f 4f       	sbci	r19, 0xFF	; 255
    22c2:	88 e4       	ldi	r24, 0x48	; 72
    22c4:	b9 01       	movw	r22, r18
    22c6:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <LCD_void_Set_CGRAM_Address>

u8 arr2[]={1, 1, 1, 1, 1, 1, 1, 31};// down
    22ca:	ce 01       	movw	r24, r28
    22cc:	8f 57       	subi	r24, 0x7F	; 127
    22ce:	9f 4f       	sbci	r25, 0xFF	; 255
    22d0:	cd 54       	subi	r28, 0x4D	; 77
    22d2:	df 4f       	sbci	r29, 0xFF	; 255
    22d4:	99 83       	std	Y+1, r25	; 0x01
    22d6:	88 83       	st	Y, r24
    22d8:	c3 5b       	subi	r28, 0xB3	; 179
    22da:	d0 40       	sbci	r29, 0x00	; 0
    22dc:	84 eb       	ldi	r24, 0xB4	; 180
    22de:	90 e0       	ldi	r25, 0x00	; 0
    22e0:	cb 54       	subi	r28, 0x4B	; 75
    22e2:	df 4f       	sbci	r29, 0xFF	; 255
    22e4:	99 83       	std	Y+1, r25	; 0x01
    22e6:	88 83       	st	Y, r24
    22e8:	c5 5b       	subi	r28, 0xB5	; 181
    22ea:	d0 40       	sbci	r29, 0x00	; 0
    22ec:	98 e0       	ldi	r25, 0x08	; 8
    22ee:	c9 54       	subi	r28, 0x49	; 73
    22f0:	df 4f       	sbci	r29, 0xFF	; 255
    22f2:	98 83       	st	Y, r25
    22f4:	c7 5b       	subi	r28, 0xB7	; 183
    22f6:	d0 40       	sbci	r29, 0x00	; 0
    22f8:	cb 54       	subi	r28, 0x4B	; 75
    22fa:	df 4f       	sbci	r29, 0xFF	; 255
    22fc:	e8 81       	ld	r30, Y
    22fe:	f9 81       	ldd	r31, Y+1	; 0x01
    2300:	c5 5b       	subi	r28, 0xB5	; 181
    2302:	d0 40       	sbci	r29, 0x00	; 0
    2304:	00 80       	ld	r0, Z
    2306:	cb 54       	subi	r28, 0x4B	; 75
    2308:	df 4f       	sbci	r29, 0xFF	; 255
    230a:	88 81       	ld	r24, Y
    230c:	99 81       	ldd	r25, Y+1	; 0x01
    230e:	c5 5b       	subi	r28, 0xB5	; 181
    2310:	d0 40       	sbci	r29, 0x00	; 0
    2312:	01 96       	adiw	r24, 0x01	; 1
    2314:	cb 54       	subi	r28, 0x4B	; 75
    2316:	df 4f       	sbci	r29, 0xFF	; 255
    2318:	99 83       	std	Y+1, r25	; 0x01
    231a:	88 83       	st	Y, r24
    231c:	c5 5b       	subi	r28, 0xB5	; 181
    231e:	d0 40       	sbci	r29, 0x00	; 0
    2320:	cd 54       	subi	r28, 0x4D	; 77
    2322:	df 4f       	sbci	r29, 0xFF	; 255
    2324:	e8 81       	ld	r30, Y
    2326:	f9 81       	ldd	r31, Y+1	; 0x01
    2328:	c3 5b       	subi	r28, 0xB3	; 179
    232a:	d0 40       	sbci	r29, 0x00	; 0
    232c:	00 82       	st	Z, r0
    232e:	cd 54       	subi	r28, 0x4D	; 77
    2330:	df 4f       	sbci	r29, 0xFF	; 255
    2332:	88 81       	ld	r24, Y
    2334:	99 81       	ldd	r25, Y+1	; 0x01
    2336:	c3 5b       	subi	r28, 0xB3	; 179
    2338:	d0 40       	sbci	r29, 0x00	; 0
    233a:	01 96       	adiw	r24, 0x01	; 1
    233c:	cd 54       	subi	r28, 0x4D	; 77
    233e:	df 4f       	sbci	r29, 0xFF	; 255
    2340:	99 83       	std	Y+1, r25	; 0x01
    2342:	88 83       	st	Y, r24
    2344:	c3 5b       	subi	r28, 0xB3	; 179
    2346:	d0 40       	sbci	r29, 0x00	; 0
    2348:	c9 54       	subi	r28, 0x49	; 73
    234a:	df 4f       	sbci	r29, 0xFF	; 255
    234c:	98 81       	ld	r25, Y
    234e:	c7 5b       	subi	r28, 0xB7	; 183
    2350:	d0 40       	sbci	r29, 0x00	; 0
    2352:	91 50       	subi	r25, 0x01	; 1
    2354:	c9 54       	subi	r28, 0x49	; 73
    2356:	df 4f       	sbci	r29, 0xFF	; 255
    2358:	98 83       	st	Y, r25
    235a:	c7 5b       	subi	r28, 0xB7	; 183
    235c:	d0 40       	sbci	r29, 0x00	; 0
    235e:	c9 54       	subi	r28, 0x49	; 73
    2360:	df 4f       	sbci	r29, 0xFF	; 255
    2362:	e8 81       	ld	r30, Y
    2364:	c7 5b       	subi	r28, 0xB7	; 183
    2366:	d0 40       	sbci	r29, 0x00	; 0
    2368:	ee 23       	and	r30, r30
    236a:	31 f6       	brne	.-116    	; 0x22f8 <main+0x1b0>
LCD_void_Set_CGRAM_Address(ADDRESS_OF_CHAR0_IN_CGRAM+16,arr2);
    236c:	9e 01       	movw	r18, r28
    236e:	2f 57       	subi	r18, 0x7F	; 127
    2370:	3f 4f       	sbci	r19, 0xFF	; 255
    2372:	80 e5       	ldi	r24, 0x50	; 80
    2374:	b9 01       	movw	r22, r18
    2376:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <LCD_void_Set_CGRAM_Address>

u8 arr3[]={31, 1, 1, 1, 1, 1, 1, 1};// up
    237a:	ce 01       	movw	r24, r28
    237c:	87 57       	subi	r24, 0x77	; 119
    237e:	9f 4f       	sbci	r25, 0xFF	; 255
    2380:	c8 54       	subi	r28, 0x48	; 72
    2382:	df 4f       	sbci	r29, 0xFF	; 255
    2384:	99 83       	std	Y+1, r25	; 0x01
    2386:	88 83       	st	Y, r24
    2388:	c8 5b       	subi	r28, 0xB8	; 184
    238a:	d0 40       	sbci	r29, 0x00	; 0
    238c:	8c ea       	ldi	r24, 0xAC	; 172
    238e:	90 e0       	ldi	r25, 0x00	; 0
    2390:	c6 54       	subi	r28, 0x46	; 70
    2392:	df 4f       	sbci	r29, 0xFF	; 255
    2394:	99 83       	std	Y+1, r25	; 0x01
    2396:	88 83       	st	Y, r24
    2398:	ca 5b       	subi	r28, 0xBA	; 186
    239a:	d0 40       	sbci	r29, 0x00	; 0
    239c:	98 e0       	ldi	r25, 0x08	; 8
    239e:	c4 54       	subi	r28, 0x44	; 68
    23a0:	df 4f       	sbci	r29, 0xFF	; 255
    23a2:	98 83       	st	Y, r25
    23a4:	cc 5b       	subi	r28, 0xBC	; 188
    23a6:	d0 40       	sbci	r29, 0x00	; 0
    23a8:	c6 54       	subi	r28, 0x46	; 70
    23aa:	df 4f       	sbci	r29, 0xFF	; 255
    23ac:	e8 81       	ld	r30, Y
    23ae:	f9 81       	ldd	r31, Y+1	; 0x01
    23b0:	ca 5b       	subi	r28, 0xBA	; 186
    23b2:	d0 40       	sbci	r29, 0x00	; 0
    23b4:	00 80       	ld	r0, Z
    23b6:	c6 54       	subi	r28, 0x46	; 70
    23b8:	df 4f       	sbci	r29, 0xFF	; 255
    23ba:	88 81       	ld	r24, Y
    23bc:	99 81       	ldd	r25, Y+1	; 0x01
    23be:	ca 5b       	subi	r28, 0xBA	; 186
    23c0:	d0 40       	sbci	r29, 0x00	; 0
    23c2:	01 96       	adiw	r24, 0x01	; 1
    23c4:	c6 54       	subi	r28, 0x46	; 70
    23c6:	df 4f       	sbci	r29, 0xFF	; 255
    23c8:	99 83       	std	Y+1, r25	; 0x01
    23ca:	88 83       	st	Y, r24
    23cc:	ca 5b       	subi	r28, 0xBA	; 186
    23ce:	d0 40       	sbci	r29, 0x00	; 0
    23d0:	c8 54       	subi	r28, 0x48	; 72
    23d2:	df 4f       	sbci	r29, 0xFF	; 255
    23d4:	e8 81       	ld	r30, Y
    23d6:	f9 81       	ldd	r31, Y+1	; 0x01
    23d8:	c8 5b       	subi	r28, 0xB8	; 184
    23da:	d0 40       	sbci	r29, 0x00	; 0
    23dc:	00 82       	st	Z, r0
    23de:	c8 54       	subi	r28, 0x48	; 72
    23e0:	df 4f       	sbci	r29, 0xFF	; 255
    23e2:	88 81       	ld	r24, Y
    23e4:	99 81       	ldd	r25, Y+1	; 0x01
    23e6:	c8 5b       	subi	r28, 0xB8	; 184
    23e8:	d0 40       	sbci	r29, 0x00	; 0
    23ea:	01 96       	adiw	r24, 0x01	; 1
    23ec:	c8 54       	subi	r28, 0x48	; 72
    23ee:	df 4f       	sbci	r29, 0xFF	; 255
    23f0:	99 83       	std	Y+1, r25	; 0x01
    23f2:	88 83       	st	Y, r24
    23f4:	c8 5b       	subi	r28, 0xB8	; 184
    23f6:	d0 40       	sbci	r29, 0x00	; 0
    23f8:	c4 54       	subi	r28, 0x44	; 68
    23fa:	df 4f       	sbci	r29, 0xFF	; 255
    23fc:	98 81       	ld	r25, Y
    23fe:	cc 5b       	subi	r28, 0xBC	; 188
    2400:	d0 40       	sbci	r29, 0x00	; 0
    2402:	91 50       	subi	r25, 0x01	; 1
    2404:	c4 54       	subi	r28, 0x44	; 68
    2406:	df 4f       	sbci	r29, 0xFF	; 255
    2408:	98 83       	st	Y, r25
    240a:	cc 5b       	subi	r28, 0xBC	; 188
    240c:	d0 40       	sbci	r29, 0x00	; 0
    240e:	c4 54       	subi	r28, 0x44	; 68
    2410:	df 4f       	sbci	r29, 0xFF	; 255
    2412:	e8 81       	ld	r30, Y
    2414:	cc 5b       	subi	r28, 0xBC	; 188
    2416:	d0 40       	sbci	r29, 0x00	; 0
    2418:	ee 23       	and	r30, r30
    241a:	31 f6       	brne	.-116    	; 0x23a8 <main+0x260>
LCD_void_Set_CGRAM_Address(ADDRESS_OF_CHAR0_IN_CGRAM+24,arr3);
    241c:	9e 01       	movw	r18, r28
    241e:	27 57       	subi	r18, 0x77	; 119
    2420:	3f 4f       	sbci	r19, 0xFF	; 255
    2422:	88 e5       	ldi	r24, 0x58	; 88
    2424:	b9 01       	movw	r22, r18
    2426:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <LCD_void_Set_CGRAM_Address>

u8 arr4[]={31, 0, 4, 10, 4, 31, 4, 10};//allison
    242a:	ce 01       	movw	r24, r28
    242c:	8f 56       	subi	r24, 0x6F	; 111
    242e:	9f 4f       	sbci	r25, 0xFF	; 255
    2430:	c3 54       	subi	r28, 0x43	; 67
    2432:	df 4f       	sbci	r29, 0xFF	; 255
    2434:	99 83       	std	Y+1, r25	; 0x01
    2436:	88 83       	st	Y, r24
    2438:	cd 5b       	subi	r28, 0xBD	; 189
    243a:	d0 40       	sbci	r29, 0x00	; 0
    243c:	84 ea       	ldi	r24, 0xA4	; 164
    243e:	90 e0       	ldi	r25, 0x00	; 0
    2440:	c1 54       	subi	r28, 0x41	; 65
    2442:	df 4f       	sbci	r29, 0xFF	; 255
    2444:	99 83       	std	Y+1, r25	; 0x01
    2446:	88 83       	st	Y, r24
    2448:	cf 5b       	subi	r28, 0xBF	; 191
    244a:	d0 40       	sbci	r29, 0x00	; 0
    244c:	98 e0       	ldi	r25, 0x08	; 8
    244e:	cf 53       	subi	r28, 0x3F	; 63
    2450:	df 4f       	sbci	r29, 0xFF	; 255
    2452:	98 83       	st	Y, r25
    2454:	c1 5c       	subi	r28, 0xC1	; 193
    2456:	d0 40       	sbci	r29, 0x00	; 0
    2458:	c1 54       	subi	r28, 0x41	; 65
    245a:	df 4f       	sbci	r29, 0xFF	; 255
    245c:	e8 81       	ld	r30, Y
    245e:	f9 81       	ldd	r31, Y+1	; 0x01
    2460:	cf 5b       	subi	r28, 0xBF	; 191
    2462:	d0 40       	sbci	r29, 0x00	; 0
    2464:	00 80       	ld	r0, Z
    2466:	c1 54       	subi	r28, 0x41	; 65
    2468:	df 4f       	sbci	r29, 0xFF	; 255
    246a:	88 81       	ld	r24, Y
    246c:	99 81       	ldd	r25, Y+1	; 0x01
    246e:	cf 5b       	subi	r28, 0xBF	; 191
    2470:	d0 40       	sbci	r29, 0x00	; 0
    2472:	01 96       	adiw	r24, 0x01	; 1
    2474:	c1 54       	subi	r28, 0x41	; 65
    2476:	df 4f       	sbci	r29, 0xFF	; 255
    2478:	99 83       	std	Y+1, r25	; 0x01
    247a:	88 83       	st	Y, r24
    247c:	cf 5b       	subi	r28, 0xBF	; 191
    247e:	d0 40       	sbci	r29, 0x00	; 0
    2480:	c3 54       	subi	r28, 0x43	; 67
    2482:	df 4f       	sbci	r29, 0xFF	; 255
    2484:	e8 81       	ld	r30, Y
    2486:	f9 81       	ldd	r31, Y+1	; 0x01
    2488:	cd 5b       	subi	r28, 0xBD	; 189
    248a:	d0 40       	sbci	r29, 0x00	; 0
    248c:	00 82       	st	Z, r0
    248e:	c3 54       	subi	r28, 0x43	; 67
    2490:	df 4f       	sbci	r29, 0xFF	; 255
    2492:	88 81       	ld	r24, Y
    2494:	99 81       	ldd	r25, Y+1	; 0x01
    2496:	cd 5b       	subi	r28, 0xBD	; 189
    2498:	d0 40       	sbci	r29, 0x00	; 0
    249a:	01 96       	adiw	r24, 0x01	; 1
    249c:	c3 54       	subi	r28, 0x43	; 67
    249e:	df 4f       	sbci	r29, 0xFF	; 255
    24a0:	99 83       	std	Y+1, r25	; 0x01
    24a2:	88 83       	st	Y, r24
    24a4:	cd 5b       	subi	r28, 0xBD	; 189
    24a6:	d0 40       	sbci	r29, 0x00	; 0
    24a8:	cf 53       	subi	r28, 0x3F	; 63
    24aa:	df 4f       	sbci	r29, 0xFF	; 255
    24ac:	98 81       	ld	r25, Y
    24ae:	c1 5c       	subi	r28, 0xC1	; 193
    24b0:	d0 40       	sbci	r29, 0x00	; 0
    24b2:	91 50       	subi	r25, 0x01	; 1
    24b4:	cf 53       	subi	r28, 0x3F	; 63
    24b6:	df 4f       	sbci	r29, 0xFF	; 255
    24b8:	98 83       	st	Y, r25
    24ba:	c1 5c       	subi	r28, 0xC1	; 193
    24bc:	d0 40       	sbci	r29, 0x00	; 0
    24be:	cf 53       	subi	r28, 0x3F	; 63
    24c0:	df 4f       	sbci	r29, 0xFF	; 255
    24c2:	e8 81       	ld	r30, Y
    24c4:	c1 5c       	subi	r28, 0xC1	; 193
    24c6:	d0 40       	sbci	r29, 0x00	; 0
    24c8:	ee 23       	and	r30, r30
    24ca:	31 f6       	brne	.-116    	; 0x2458 <main+0x310>
LCD_void_Set_CGRAM_Address(ADDRESS_OF_CHAR0_IN_CGRAM+32,arr4);
    24cc:	9e 01       	movw	r18, r28
    24ce:	2f 56       	subi	r18, 0x6F	; 111
    24d0:	3f 4f       	sbci	r19, 0xFF	; 255
    24d2:	80 e6       	ldi	r24, 0x60	; 96
    24d4:	b9 01       	movw	r22, r18
    24d6:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <LCD_void_Set_CGRAM_Address>

u8 arr5[]={31, 16, 16, 16, 16, 16, 16, 16};//left
    24da:	ce 01       	movw	r24, r28
    24dc:	87 56       	subi	r24, 0x67	; 103
    24de:	9f 4f       	sbci	r25, 0xFF	; 255
    24e0:	ce 53       	subi	r28, 0x3E	; 62
    24e2:	df 4f       	sbci	r29, 0xFF	; 255
    24e4:	99 83       	std	Y+1, r25	; 0x01
    24e6:	88 83       	st	Y, r24
    24e8:	c2 5c       	subi	r28, 0xC2	; 194
    24ea:	d0 40       	sbci	r29, 0x00	; 0
    24ec:	8c e9       	ldi	r24, 0x9C	; 156
    24ee:	90 e0       	ldi	r25, 0x00	; 0
    24f0:	cc 53       	subi	r28, 0x3C	; 60
    24f2:	df 4f       	sbci	r29, 0xFF	; 255
    24f4:	99 83       	std	Y+1, r25	; 0x01
    24f6:	88 83       	st	Y, r24
    24f8:	c4 5c       	subi	r28, 0xC4	; 196
    24fa:	d0 40       	sbci	r29, 0x00	; 0
    24fc:	98 e0       	ldi	r25, 0x08	; 8
    24fe:	ca 53       	subi	r28, 0x3A	; 58
    2500:	df 4f       	sbci	r29, 0xFF	; 255
    2502:	98 83       	st	Y, r25
    2504:	c6 5c       	subi	r28, 0xC6	; 198
    2506:	d0 40       	sbci	r29, 0x00	; 0
    2508:	cc 53       	subi	r28, 0x3C	; 60
    250a:	df 4f       	sbci	r29, 0xFF	; 255
    250c:	e8 81       	ld	r30, Y
    250e:	f9 81       	ldd	r31, Y+1	; 0x01
    2510:	c4 5c       	subi	r28, 0xC4	; 196
    2512:	d0 40       	sbci	r29, 0x00	; 0
    2514:	00 80       	ld	r0, Z
    2516:	cc 53       	subi	r28, 0x3C	; 60
    2518:	df 4f       	sbci	r29, 0xFF	; 255
    251a:	88 81       	ld	r24, Y
    251c:	99 81       	ldd	r25, Y+1	; 0x01
    251e:	c4 5c       	subi	r28, 0xC4	; 196
    2520:	d0 40       	sbci	r29, 0x00	; 0
    2522:	01 96       	adiw	r24, 0x01	; 1
    2524:	cc 53       	subi	r28, 0x3C	; 60
    2526:	df 4f       	sbci	r29, 0xFF	; 255
    2528:	99 83       	std	Y+1, r25	; 0x01
    252a:	88 83       	st	Y, r24
    252c:	c4 5c       	subi	r28, 0xC4	; 196
    252e:	d0 40       	sbci	r29, 0x00	; 0
    2530:	ce 53       	subi	r28, 0x3E	; 62
    2532:	df 4f       	sbci	r29, 0xFF	; 255
    2534:	e8 81       	ld	r30, Y
    2536:	f9 81       	ldd	r31, Y+1	; 0x01
    2538:	c2 5c       	subi	r28, 0xC2	; 194
    253a:	d0 40       	sbci	r29, 0x00	; 0
    253c:	00 82       	st	Z, r0
    253e:	ce 53       	subi	r28, 0x3E	; 62
    2540:	df 4f       	sbci	r29, 0xFF	; 255
    2542:	88 81       	ld	r24, Y
    2544:	99 81       	ldd	r25, Y+1	; 0x01
    2546:	c2 5c       	subi	r28, 0xC2	; 194
    2548:	d0 40       	sbci	r29, 0x00	; 0
    254a:	01 96       	adiw	r24, 0x01	; 1
    254c:	ce 53       	subi	r28, 0x3E	; 62
    254e:	df 4f       	sbci	r29, 0xFF	; 255
    2550:	99 83       	std	Y+1, r25	; 0x01
    2552:	88 83       	st	Y, r24
    2554:	c2 5c       	subi	r28, 0xC2	; 194
    2556:	d0 40       	sbci	r29, 0x00	; 0
    2558:	ca 53       	subi	r28, 0x3A	; 58
    255a:	df 4f       	sbci	r29, 0xFF	; 255
    255c:	98 81       	ld	r25, Y
    255e:	c6 5c       	subi	r28, 0xC6	; 198
    2560:	d0 40       	sbci	r29, 0x00	; 0
    2562:	91 50       	subi	r25, 0x01	; 1
    2564:	ca 53       	subi	r28, 0x3A	; 58
    2566:	df 4f       	sbci	r29, 0xFF	; 255
    2568:	98 83       	st	Y, r25
    256a:	c6 5c       	subi	r28, 0xC6	; 198
    256c:	d0 40       	sbci	r29, 0x00	; 0
    256e:	ca 53       	subi	r28, 0x3A	; 58
    2570:	df 4f       	sbci	r29, 0xFF	; 255
    2572:	e8 81       	ld	r30, Y
    2574:	c6 5c       	subi	r28, 0xC6	; 198
    2576:	d0 40       	sbci	r29, 0x00	; 0
    2578:	ee 23       	and	r30, r30
    257a:	31 f6       	brne	.-116    	; 0x2508 <main+0x3c0>
LCD_void_Set_CGRAM_Address(ADDRESS_OF_CHAR0_IN_CGRAM+40,arr5);
    257c:	9e 01       	movw	r18, r28
    257e:	27 56       	subi	r18, 0x67	; 103
    2580:	3f 4f       	sbci	r19, 0xFF	; 255
    2582:	88 e6       	ldi	r24, 0x68	; 104
    2584:	b9 01       	movw	r22, r18
    2586:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <LCD_void_Set_CGRAM_Address>


u8 arr6[]={0, 4, 10, 4, 14, 21, 14, 17};//another man
    258a:	ce 01       	movw	r24, r28
    258c:	8f 55       	subi	r24, 0x5F	; 95
    258e:	9f 4f       	sbci	r25, 0xFF	; 255
    2590:	c9 53       	subi	r28, 0x39	; 57
    2592:	df 4f       	sbci	r29, 0xFF	; 255
    2594:	99 83       	std	Y+1, r25	; 0x01
    2596:	88 83       	st	Y, r24
    2598:	c7 5c       	subi	r28, 0xC7	; 199
    259a:	d0 40       	sbci	r29, 0x00	; 0
    259c:	84 e9       	ldi	r24, 0x94	; 148
    259e:	90 e0       	ldi	r25, 0x00	; 0
    25a0:	c7 53       	subi	r28, 0x37	; 55
    25a2:	df 4f       	sbci	r29, 0xFF	; 255
    25a4:	99 83       	std	Y+1, r25	; 0x01
    25a6:	88 83       	st	Y, r24
    25a8:	c9 5c       	subi	r28, 0xC9	; 201
    25aa:	d0 40       	sbci	r29, 0x00	; 0
    25ac:	98 e0       	ldi	r25, 0x08	; 8
    25ae:	c5 53       	subi	r28, 0x35	; 53
    25b0:	df 4f       	sbci	r29, 0xFF	; 255
    25b2:	98 83       	st	Y, r25
    25b4:	cb 5c       	subi	r28, 0xCB	; 203
    25b6:	d0 40       	sbci	r29, 0x00	; 0
    25b8:	c7 53       	subi	r28, 0x37	; 55
    25ba:	df 4f       	sbci	r29, 0xFF	; 255
    25bc:	e8 81       	ld	r30, Y
    25be:	f9 81       	ldd	r31, Y+1	; 0x01
    25c0:	c9 5c       	subi	r28, 0xC9	; 201
    25c2:	d0 40       	sbci	r29, 0x00	; 0
    25c4:	00 80       	ld	r0, Z
    25c6:	c7 53       	subi	r28, 0x37	; 55
    25c8:	df 4f       	sbci	r29, 0xFF	; 255
    25ca:	88 81       	ld	r24, Y
    25cc:	99 81       	ldd	r25, Y+1	; 0x01
    25ce:	c9 5c       	subi	r28, 0xC9	; 201
    25d0:	d0 40       	sbci	r29, 0x00	; 0
    25d2:	01 96       	adiw	r24, 0x01	; 1
    25d4:	c7 53       	subi	r28, 0x37	; 55
    25d6:	df 4f       	sbci	r29, 0xFF	; 255
    25d8:	99 83       	std	Y+1, r25	; 0x01
    25da:	88 83       	st	Y, r24
    25dc:	c9 5c       	subi	r28, 0xC9	; 201
    25de:	d0 40       	sbci	r29, 0x00	; 0
    25e0:	c9 53       	subi	r28, 0x39	; 57
    25e2:	df 4f       	sbci	r29, 0xFF	; 255
    25e4:	e8 81       	ld	r30, Y
    25e6:	f9 81       	ldd	r31, Y+1	; 0x01
    25e8:	c7 5c       	subi	r28, 0xC7	; 199
    25ea:	d0 40       	sbci	r29, 0x00	; 0
    25ec:	00 82       	st	Z, r0
    25ee:	c9 53       	subi	r28, 0x39	; 57
    25f0:	df 4f       	sbci	r29, 0xFF	; 255
    25f2:	88 81       	ld	r24, Y
    25f4:	99 81       	ldd	r25, Y+1	; 0x01
    25f6:	c7 5c       	subi	r28, 0xC7	; 199
    25f8:	d0 40       	sbci	r29, 0x00	; 0
    25fa:	01 96       	adiw	r24, 0x01	; 1
    25fc:	c9 53       	subi	r28, 0x39	; 57
    25fe:	df 4f       	sbci	r29, 0xFF	; 255
    2600:	99 83       	std	Y+1, r25	; 0x01
    2602:	88 83       	st	Y, r24
    2604:	c7 5c       	subi	r28, 0xC7	; 199
    2606:	d0 40       	sbci	r29, 0x00	; 0
    2608:	c5 53       	subi	r28, 0x35	; 53
    260a:	df 4f       	sbci	r29, 0xFF	; 255
    260c:	98 81       	ld	r25, Y
    260e:	cb 5c       	subi	r28, 0xCB	; 203
    2610:	d0 40       	sbci	r29, 0x00	; 0
    2612:	91 50       	subi	r25, 0x01	; 1
    2614:	c5 53       	subi	r28, 0x35	; 53
    2616:	df 4f       	sbci	r29, 0xFF	; 255
    2618:	98 83       	st	Y, r25
    261a:	cb 5c       	subi	r28, 0xCB	; 203
    261c:	d0 40       	sbci	r29, 0x00	; 0
    261e:	c5 53       	subi	r28, 0x35	; 53
    2620:	df 4f       	sbci	r29, 0xFF	; 255
    2622:	e8 81       	ld	r30, Y
    2624:	cb 5c       	subi	r28, 0xCB	; 203
    2626:	d0 40       	sbci	r29, 0x00	; 0
    2628:	ee 23       	and	r30, r30
    262a:	31 f6       	brne	.-116    	; 0x25b8 <main+0x470>
LCD_void_Set_CGRAM_Address(ADDRESS_OF_CHAR0_IN_CGRAM+48,arr6);
    262c:	9e 01       	movw	r18, r28
    262e:	2f 55       	subi	r18, 0x5F	; 95
    2630:	3f 4f       	sbci	r19, 0xFF	; 255
    2632:	80 e7       	ldi	r24, 0x70	; 112
    2634:	b9 01       	movw	r22, r18
    2636:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <LCD_void_Set_CGRAM_Address>

LCD_void_DDRAM_Address(0,0);
    263a:	80 e0       	ldi	r24, 0x00	; 0
    263c:	60 e0       	ldi	r22, 0x00	; 0
    263e:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_String("I'm Alisson  ");
    2642:	80 e6       	ldi	r24, 0x60	; 96
    2644:	90 e0       	ldi	r25, 0x00	; 0
    2646:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <LCD_void_Write_String>
LCD_void_DDRAM_Address(0,13);
    264a:	80 e0       	ldi	r24, 0x00	; 0
    264c:	6d e0       	ldi	r22, 0x0D	; 13
    264e:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(5);
    2652:	85 e0       	ldi	r24, 0x05	; 5
    2654:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
LCD_void_Write_Data(4);
    2658:	84 e0       	ldi	r24, 0x04	; 4
    265a:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
LCD_void_Write_Data(3);
    265e:	83 e0       	ldi	r24, 0x03	; 3
    2660:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
    2664:	fe 01       	movw	r30, r28
    2666:	e3 59       	subi	r30, 0x93	; 147
    2668:	ff 4f       	sbci	r31, 0xFF	; 255
    266a:	80 e0       	ldi	r24, 0x00	; 0
    266c:	90 e4       	ldi	r25, 0x40	; 64
    266e:	ac e1       	ldi	r26, 0x1C	; 28
    2670:	b5 e4       	ldi	r27, 0x45	; 69
    2672:	80 83       	st	Z, r24
    2674:	91 83       	std	Z+1, r25	; 0x01
    2676:	a2 83       	std	Z+2, r26	; 0x02
    2678:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    267a:	8e 01       	movw	r16, r28
    267c:	07 59       	subi	r16, 0x97	; 151
    267e:	1f 4f       	sbci	r17, 0xFF	; 255
    2680:	fe 01       	movw	r30, r28
    2682:	e3 59       	subi	r30, 0x93	; 147
    2684:	ff 4f       	sbci	r31, 0xFF	; 255
    2686:	60 81       	ld	r22, Z
    2688:	71 81       	ldd	r23, Z+1	; 0x01
    268a:	82 81       	ldd	r24, Z+2	; 0x02
    268c:	93 81       	ldd	r25, Z+3	; 0x03
    268e:	20 e0       	ldi	r18, 0x00	; 0
    2690:	30 e0       	ldi	r19, 0x00	; 0
    2692:	4a ef       	ldi	r20, 0xFA	; 250
    2694:	54 e4       	ldi	r21, 0x44	; 68
    2696:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    269a:	dc 01       	movw	r26, r24
    269c:	cb 01       	movw	r24, r22
    269e:	f8 01       	movw	r30, r16
    26a0:	80 83       	st	Z, r24
    26a2:	91 83       	std	Z+1, r25	; 0x01
    26a4:	a2 83       	std	Z+2, r26	; 0x02
    26a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26a8:	fe 01       	movw	r30, r28
    26aa:	e7 59       	subi	r30, 0x97	; 151
    26ac:	ff 4f       	sbci	r31, 0xFF	; 255
    26ae:	60 81       	ld	r22, Z
    26b0:	71 81       	ldd	r23, Z+1	; 0x01
    26b2:	82 81       	ldd	r24, Z+2	; 0x02
    26b4:	93 81       	ldd	r25, Z+3	; 0x03
    26b6:	20 e0       	ldi	r18, 0x00	; 0
    26b8:	30 e0       	ldi	r19, 0x00	; 0
    26ba:	40 e8       	ldi	r20, 0x80	; 128
    26bc:	5f e3       	ldi	r21, 0x3F	; 63
    26be:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    26c2:	88 23       	and	r24, r24
    26c4:	44 f4       	brge	.+16     	; 0x26d6 <main+0x58e>
		__ticks = 1;
    26c6:	fe 01       	movw	r30, r28
    26c8:	e9 59       	subi	r30, 0x99	; 153
    26ca:	ff 4f       	sbci	r31, 0xFF	; 255
    26cc:	81 e0       	ldi	r24, 0x01	; 1
    26ce:	90 e0       	ldi	r25, 0x00	; 0
    26d0:	91 83       	std	Z+1, r25	; 0x01
    26d2:	80 83       	st	Z, r24
    26d4:	64 c0       	rjmp	.+200    	; 0x279e <main+0x656>
	else if (__tmp > 65535)
    26d6:	fe 01       	movw	r30, r28
    26d8:	e7 59       	subi	r30, 0x97	; 151
    26da:	ff 4f       	sbci	r31, 0xFF	; 255
    26dc:	60 81       	ld	r22, Z
    26de:	71 81       	ldd	r23, Z+1	; 0x01
    26e0:	82 81       	ldd	r24, Z+2	; 0x02
    26e2:	93 81       	ldd	r25, Z+3	; 0x03
    26e4:	20 e0       	ldi	r18, 0x00	; 0
    26e6:	3f ef       	ldi	r19, 0xFF	; 255
    26e8:	4f e7       	ldi	r20, 0x7F	; 127
    26ea:	57 e4       	ldi	r21, 0x47	; 71
    26ec:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    26f0:	18 16       	cp	r1, r24
    26f2:	0c f0       	brlt	.+2      	; 0x26f6 <main+0x5ae>
    26f4:	43 c0       	rjmp	.+134    	; 0x277c <main+0x634>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26f6:	fe 01       	movw	r30, r28
    26f8:	e3 59       	subi	r30, 0x93	; 147
    26fa:	ff 4f       	sbci	r31, 0xFF	; 255
    26fc:	60 81       	ld	r22, Z
    26fe:	71 81       	ldd	r23, Z+1	; 0x01
    2700:	82 81       	ldd	r24, Z+2	; 0x02
    2702:	93 81       	ldd	r25, Z+3	; 0x03
    2704:	20 e0       	ldi	r18, 0x00	; 0
    2706:	30 e0       	ldi	r19, 0x00	; 0
    2708:	40 e2       	ldi	r20, 0x20	; 32
    270a:	51 e4       	ldi	r21, 0x41	; 65
    270c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2710:	dc 01       	movw	r26, r24
    2712:	cb 01       	movw	r24, r22
    2714:	8e 01       	movw	r16, r28
    2716:	09 59       	subi	r16, 0x99	; 153
    2718:	1f 4f       	sbci	r17, 0xFF	; 255
    271a:	bc 01       	movw	r22, r24
    271c:	cd 01       	movw	r24, r26
    271e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2722:	dc 01       	movw	r26, r24
    2724:	cb 01       	movw	r24, r22
    2726:	f8 01       	movw	r30, r16
    2728:	91 83       	std	Z+1, r25	; 0x01
    272a:	80 83       	st	Z, r24
    272c:	1f c0       	rjmp	.+62     	; 0x276c <main+0x624>
    272e:	fe 01       	movw	r30, r28
    2730:	eb 59       	subi	r30, 0x9B	; 155
    2732:	ff 4f       	sbci	r31, 0xFF	; 255
    2734:	88 ec       	ldi	r24, 0xC8	; 200
    2736:	90 e0       	ldi	r25, 0x00	; 0
    2738:	91 83       	std	Z+1, r25	; 0x01
    273a:	80 83       	st	Z, r24
    273c:	fe 01       	movw	r30, r28
    273e:	eb 59       	subi	r30, 0x9B	; 155
    2740:	ff 4f       	sbci	r31, 0xFF	; 255
    2742:	80 81       	ld	r24, Z
    2744:	91 81       	ldd	r25, Z+1	; 0x01
    2746:	01 97       	sbiw	r24, 0x01	; 1
    2748:	f1 f7       	brne	.-4      	; 0x2746 <main+0x5fe>
    274a:	fe 01       	movw	r30, r28
    274c:	eb 59       	subi	r30, 0x9B	; 155
    274e:	ff 4f       	sbci	r31, 0xFF	; 255
    2750:	91 83       	std	Z+1, r25	; 0x01
    2752:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2754:	de 01       	movw	r26, r28
    2756:	a9 59       	subi	r26, 0x99	; 153
    2758:	bf 4f       	sbci	r27, 0xFF	; 255
    275a:	fe 01       	movw	r30, r28
    275c:	e9 59       	subi	r30, 0x99	; 153
    275e:	ff 4f       	sbci	r31, 0xFF	; 255
    2760:	80 81       	ld	r24, Z
    2762:	91 81       	ldd	r25, Z+1	; 0x01
    2764:	01 97       	sbiw	r24, 0x01	; 1
    2766:	11 96       	adiw	r26, 0x01	; 1
    2768:	9c 93       	st	X, r25
    276a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    276c:	fe 01       	movw	r30, r28
    276e:	e9 59       	subi	r30, 0x99	; 153
    2770:	ff 4f       	sbci	r31, 0xFF	; 255
    2772:	80 81       	ld	r24, Z
    2774:	91 81       	ldd	r25, Z+1	; 0x01
    2776:	00 97       	sbiw	r24, 0x00	; 0
    2778:	d1 f6       	brne	.-76     	; 0x272e <main+0x5e6>
    277a:	27 c0       	rjmp	.+78     	; 0x27ca <main+0x682>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    277c:	8e 01       	movw	r16, r28
    277e:	09 59       	subi	r16, 0x99	; 153
    2780:	1f 4f       	sbci	r17, 0xFF	; 255
    2782:	fe 01       	movw	r30, r28
    2784:	e7 59       	subi	r30, 0x97	; 151
    2786:	ff 4f       	sbci	r31, 0xFF	; 255
    2788:	60 81       	ld	r22, Z
    278a:	71 81       	ldd	r23, Z+1	; 0x01
    278c:	82 81       	ldd	r24, Z+2	; 0x02
    278e:	93 81       	ldd	r25, Z+3	; 0x03
    2790:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2794:	dc 01       	movw	r26, r24
    2796:	cb 01       	movw	r24, r22
    2798:	f8 01       	movw	r30, r16
    279a:	91 83       	std	Z+1, r25	; 0x01
    279c:	80 83       	st	Z, r24
    279e:	de 01       	movw	r26, r28
    27a0:	ad 59       	subi	r26, 0x9D	; 157
    27a2:	bf 4f       	sbci	r27, 0xFF	; 255
    27a4:	fe 01       	movw	r30, r28
    27a6:	e9 59       	subi	r30, 0x99	; 153
    27a8:	ff 4f       	sbci	r31, 0xFF	; 255
    27aa:	80 81       	ld	r24, Z
    27ac:	91 81       	ldd	r25, Z+1	; 0x01
    27ae:	8d 93       	st	X+, r24
    27b0:	9c 93       	st	X, r25
    27b2:	fe 01       	movw	r30, r28
    27b4:	ed 59       	subi	r30, 0x9D	; 157
    27b6:	ff 4f       	sbci	r31, 0xFF	; 255
    27b8:	80 81       	ld	r24, Z
    27ba:	91 81       	ldd	r25, Z+1	; 0x01
    27bc:	01 97       	sbiw	r24, 0x01	; 1
    27be:	f1 f7       	brne	.-4      	; 0x27bc <main+0x674>
    27c0:	fe 01       	movw	r30, r28
    27c2:	ed 59       	subi	r30, 0x9D	; 157
    27c4:	ff 4f       	sbci	r31, 0xFF	; 255
    27c6:	91 83       	std	Z+1, r25	; 0x01
    27c8:	80 83       	st	Z, r24



_delay_ms(2500);
LCD_void_Clear_Screen();
    27ca:	0e 94 1c 10 	call	0x2038	; 0x2038 <LCD_void_Clear_Screen>

LCD_void_DDRAM_Address(0,15);
    27ce:	80 e0       	ldi	r24, 0x00	; 0
    27d0:	6f e0       	ldi	r22, 0x0F	; 15
    27d2:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(3);
    27d6:	83 e0       	ldi	r24, 0x03	; 3
    27d8:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
LCD_void_DDRAM_Address(1,15);
    27dc:	81 e0       	ldi	r24, 0x01	; 1
    27de:	6f e0       	ldi	r22, 0x0F	; 15
    27e0:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(2);
    27e4:	82 e0       	ldi	r24, 0x02	; 2
    27e6:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
LCD_void_DDRAM_Address(1,14);
    27ea:	81 e0       	ldi	r24, 0x01	; 1
    27ec:	6e e0       	ldi	r22, 0x0E	; 14
    27ee:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(1);
    27f2:	81 e0       	ldi	r24, 0x01	; 1
    27f4:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>




LCD_void_DDRAM_Address(0,10);
    27f8:	80 e0       	ldi	r24, 0x00	; 0
    27fa:	6a e0       	ldi	r22, 0x0A	; 10
    27fc:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(1);
    2800:	81 e0       	ldi	r24, 0x01	; 1
    2802:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>



LCD_void_DDRAM_Address(1,10);
    2806:	81 e0       	ldi	r24, 0x01	; 1
    2808:	6a e0       	ldi	r22, 0x0A	; 10
    280a:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(1);
    280e:	81 e0       	ldi	r24, 0x01	; 1
    2810:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
LCD_void_DDRAM_Address(1,11);
    2814:	81 e0       	ldi	r24, 0x01	; 1
    2816:	6b e0       	ldi	r22, 0x0B	; 11
    2818:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(0);
    281c:	80 e0       	ldi	r24, 0x00	; 0
    281e:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
    2822:	fe 01       	movw	r30, r28
    2824:	e1 5a       	subi	r30, 0xA1	; 161
    2826:	ff 4f       	sbci	r31, 0xFF	; 255
    2828:	80 e0       	ldi	r24, 0x00	; 0
    282a:	90 e0       	ldi	r25, 0x00	; 0
    282c:	aa e7       	ldi	r26, 0x7A	; 122
    282e:	b4 e4       	ldi	r27, 0x44	; 68
    2830:	80 83       	st	Z, r24
    2832:	91 83       	std	Z+1, r25	; 0x01
    2834:	a2 83       	std	Z+2, r26	; 0x02
    2836:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2838:	8e 01       	movw	r16, r28
    283a:	05 5a       	subi	r16, 0xA5	; 165
    283c:	1f 4f       	sbci	r17, 0xFF	; 255
    283e:	fe 01       	movw	r30, r28
    2840:	e1 5a       	subi	r30, 0xA1	; 161
    2842:	ff 4f       	sbci	r31, 0xFF	; 255
    2844:	60 81       	ld	r22, Z
    2846:	71 81       	ldd	r23, Z+1	; 0x01
    2848:	82 81       	ldd	r24, Z+2	; 0x02
    284a:	93 81       	ldd	r25, Z+3	; 0x03
    284c:	20 e0       	ldi	r18, 0x00	; 0
    284e:	30 e0       	ldi	r19, 0x00	; 0
    2850:	4a ef       	ldi	r20, 0xFA	; 250
    2852:	54 e4       	ldi	r21, 0x44	; 68
    2854:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2858:	dc 01       	movw	r26, r24
    285a:	cb 01       	movw	r24, r22
    285c:	f8 01       	movw	r30, r16
    285e:	80 83       	st	Z, r24
    2860:	91 83       	std	Z+1, r25	; 0x01
    2862:	a2 83       	std	Z+2, r26	; 0x02
    2864:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2866:	fe 01       	movw	r30, r28
    2868:	e5 5a       	subi	r30, 0xA5	; 165
    286a:	ff 4f       	sbci	r31, 0xFF	; 255
    286c:	60 81       	ld	r22, Z
    286e:	71 81       	ldd	r23, Z+1	; 0x01
    2870:	82 81       	ldd	r24, Z+2	; 0x02
    2872:	93 81       	ldd	r25, Z+3	; 0x03
    2874:	20 e0       	ldi	r18, 0x00	; 0
    2876:	30 e0       	ldi	r19, 0x00	; 0
    2878:	40 e8       	ldi	r20, 0x80	; 128
    287a:	5f e3       	ldi	r21, 0x3F	; 63
    287c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2880:	88 23       	and	r24, r24
    2882:	44 f4       	brge	.+16     	; 0x2894 <main+0x74c>
		__ticks = 1;
    2884:	fe 01       	movw	r30, r28
    2886:	e7 5a       	subi	r30, 0xA7	; 167
    2888:	ff 4f       	sbci	r31, 0xFF	; 255
    288a:	81 e0       	ldi	r24, 0x01	; 1
    288c:	90 e0       	ldi	r25, 0x00	; 0
    288e:	91 83       	std	Z+1, r25	; 0x01
    2890:	80 83       	st	Z, r24
    2892:	64 c0       	rjmp	.+200    	; 0x295c <main+0x814>
	else if (__tmp > 65535)
    2894:	fe 01       	movw	r30, r28
    2896:	e5 5a       	subi	r30, 0xA5	; 165
    2898:	ff 4f       	sbci	r31, 0xFF	; 255
    289a:	60 81       	ld	r22, Z
    289c:	71 81       	ldd	r23, Z+1	; 0x01
    289e:	82 81       	ldd	r24, Z+2	; 0x02
    28a0:	93 81       	ldd	r25, Z+3	; 0x03
    28a2:	20 e0       	ldi	r18, 0x00	; 0
    28a4:	3f ef       	ldi	r19, 0xFF	; 255
    28a6:	4f e7       	ldi	r20, 0x7F	; 127
    28a8:	57 e4       	ldi	r21, 0x47	; 71
    28aa:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    28ae:	18 16       	cp	r1, r24
    28b0:	0c f0       	brlt	.+2      	; 0x28b4 <main+0x76c>
    28b2:	43 c0       	rjmp	.+134    	; 0x293a <main+0x7f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28b4:	fe 01       	movw	r30, r28
    28b6:	e1 5a       	subi	r30, 0xA1	; 161
    28b8:	ff 4f       	sbci	r31, 0xFF	; 255
    28ba:	60 81       	ld	r22, Z
    28bc:	71 81       	ldd	r23, Z+1	; 0x01
    28be:	82 81       	ldd	r24, Z+2	; 0x02
    28c0:	93 81       	ldd	r25, Z+3	; 0x03
    28c2:	20 e0       	ldi	r18, 0x00	; 0
    28c4:	30 e0       	ldi	r19, 0x00	; 0
    28c6:	40 e2       	ldi	r20, 0x20	; 32
    28c8:	51 e4       	ldi	r21, 0x41	; 65
    28ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28ce:	dc 01       	movw	r26, r24
    28d0:	cb 01       	movw	r24, r22
    28d2:	8e 01       	movw	r16, r28
    28d4:	07 5a       	subi	r16, 0xA7	; 167
    28d6:	1f 4f       	sbci	r17, 0xFF	; 255
    28d8:	bc 01       	movw	r22, r24
    28da:	cd 01       	movw	r24, r26
    28dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28e0:	dc 01       	movw	r26, r24
    28e2:	cb 01       	movw	r24, r22
    28e4:	f8 01       	movw	r30, r16
    28e6:	91 83       	std	Z+1, r25	; 0x01
    28e8:	80 83       	st	Z, r24
    28ea:	1f c0       	rjmp	.+62     	; 0x292a <main+0x7e2>
    28ec:	fe 01       	movw	r30, r28
    28ee:	e9 5a       	subi	r30, 0xA9	; 169
    28f0:	ff 4f       	sbci	r31, 0xFF	; 255
    28f2:	88 ec       	ldi	r24, 0xC8	; 200
    28f4:	90 e0       	ldi	r25, 0x00	; 0
    28f6:	91 83       	std	Z+1, r25	; 0x01
    28f8:	80 83       	st	Z, r24
    28fa:	fe 01       	movw	r30, r28
    28fc:	e9 5a       	subi	r30, 0xA9	; 169
    28fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2900:	80 81       	ld	r24, Z
    2902:	91 81       	ldd	r25, Z+1	; 0x01
    2904:	01 97       	sbiw	r24, 0x01	; 1
    2906:	f1 f7       	brne	.-4      	; 0x2904 <main+0x7bc>
    2908:	fe 01       	movw	r30, r28
    290a:	e9 5a       	subi	r30, 0xA9	; 169
    290c:	ff 4f       	sbci	r31, 0xFF	; 255
    290e:	91 83       	std	Z+1, r25	; 0x01
    2910:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2912:	de 01       	movw	r26, r28
    2914:	a7 5a       	subi	r26, 0xA7	; 167
    2916:	bf 4f       	sbci	r27, 0xFF	; 255
    2918:	fe 01       	movw	r30, r28
    291a:	e7 5a       	subi	r30, 0xA7	; 167
    291c:	ff 4f       	sbci	r31, 0xFF	; 255
    291e:	80 81       	ld	r24, Z
    2920:	91 81       	ldd	r25, Z+1	; 0x01
    2922:	01 97       	sbiw	r24, 0x01	; 1
    2924:	11 96       	adiw	r26, 0x01	; 1
    2926:	9c 93       	st	X, r25
    2928:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    292a:	fe 01       	movw	r30, r28
    292c:	e7 5a       	subi	r30, 0xA7	; 167
    292e:	ff 4f       	sbci	r31, 0xFF	; 255
    2930:	80 81       	ld	r24, Z
    2932:	91 81       	ldd	r25, Z+1	; 0x01
    2934:	00 97       	sbiw	r24, 0x00	; 0
    2936:	d1 f6       	brne	.-76     	; 0x28ec <main+0x7a4>
    2938:	27 c0       	rjmp	.+78     	; 0x2988 <main+0x840>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    293a:	8e 01       	movw	r16, r28
    293c:	07 5a       	subi	r16, 0xA7	; 167
    293e:	1f 4f       	sbci	r17, 0xFF	; 255
    2940:	fe 01       	movw	r30, r28
    2942:	e5 5a       	subi	r30, 0xA5	; 165
    2944:	ff 4f       	sbci	r31, 0xFF	; 255
    2946:	60 81       	ld	r22, Z
    2948:	71 81       	ldd	r23, Z+1	; 0x01
    294a:	82 81       	ldd	r24, Z+2	; 0x02
    294c:	93 81       	ldd	r25, Z+3	; 0x03
    294e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2952:	dc 01       	movw	r26, r24
    2954:	cb 01       	movw	r24, r22
    2956:	f8 01       	movw	r30, r16
    2958:	91 83       	std	Z+1, r25	; 0x01
    295a:	80 83       	st	Z, r24
    295c:	de 01       	movw	r26, r28
    295e:	ab 5a       	subi	r26, 0xAB	; 171
    2960:	bf 4f       	sbci	r27, 0xFF	; 255
    2962:	fe 01       	movw	r30, r28
    2964:	e7 5a       	subi	r30, 0xA7	; 167
    2966:	ff 4f       	sbci	r31, 0xFF	; 255
    2968:	80 81       	ld	r24, Z
    296a:	91 81       	ldd	r25, Z+1	; 0x01
    296c:	8d 93       	st	X+, r24
    296e:	9c 93       	st	X, r25
    2970:	fe 01       	movw	r30, r28
    2972:	eb 5a       	subi	r30, 0xAB	; 171
    2974:	ff 4f       	sbci	r31, 0xFF	; 255
    2976:	80 81       	ld	r24, Z
    2978:	91 81       	ldd	r25, Z+1	; 0x01
    297a:	01 97       	sbiw	r24, 0x01	; 1
    297c:	f1 f7       	brne	.-4      	; 0x297a <main+0x832>
    297e:	fe 01       	movw	r30, r28
    2980:	eb 5a       	subi	r30, 0xAB	; 171
    2982:	ff 4f       	sbci	r31, 0xFF	; 255
    2984:	91 83       	std	Z+1, r25	; 0x01
    2986:	80 83       	st	Z, r24
_delay_ms(short_time);
LCD_void_DDRAM_Address(1,11);
    2988:	81 e0       	ldi	r24, 0x01	; 1
    298a:	6b e0       	ldi	r22, 0x0B	; 11
    298c:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(' ');
    2990:	80 e2       	ldi	r24, 0x20	; 32
    2992:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
LCD_void_DDRAM_Address(1,12);
    2996:	81 e0       	ldi	r24, 0x01	; 1
    2998:	6c e0       	ldi	r22, 0x0C	; 12
    299a:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(0);
    299e:	80 e0       	ldi	r24, 0x00	; 0
    29a0:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
    29a4:	fe 01       	movw	r30, r28
    29a6:	ef 5a       	subi	r30, 0xAF	; 175
    29a8:	ff 4f       	sbci	r31, 0xFF	; 255
    29aa:	80 e0       	ldi	r24, 0x00	; 0
    29ac:	90 e0       	ldi	r25, 0x00	; 0
    29ae:	aa e7       	ldi	r26, 0x7A	; 122
    29b0:	b4 e4       	ldi	r27, 0x44	; 68
    29b2:	80 83       	st	Z, r24
    29b4:	91 83       	std	Z+1, r25	; 0x01
    29b6:	a2 83       	std	Z+2, r26	; 0x02
    29b8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29ba:	8e 01       	movw	r16, r28
    29bc:	03 5b       	subi	r16, 0xB3	; 179
    29be:	1f 4f       	sbci	r17, 0xFF	; 255
    29c0:	fe 01       	movw	r30, r28
    29c2:	ef 5a       	subi	r30, 0xAF	; 175
    29c4:	ff 4f       	sbci	r31, 0xFF	; 255
    29c6:	60 81       	ld	r22, Z
    29c8:	71 81       	ldd	r23, Z+1	; 0x01
    29ca:	82 81       	ldd	r24, Z+2	; 0x02
    29cc:	93 81       	ldd	r25, Z+3	; 0x03
    29ce:	20 e0       	ldi	r18, 0x00	; 0
    29d0:	30 e0       	ldi	r19, 0x00	; 0
    29d2:	4a ef       	ldi	r20, 0xFA	; 250
    29d4:	54 e4       	ldi	r21, 0x44	; 68
    29d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29da:	dc 01       	movw	r26, r24
    29dc:	cb 01       	movw	r24, r22
    29de:	f8 01       	movw	r30, r16
    29e0:	80 83       	st	Z, r24
    29e2:	91 83       	std	Z+1, r25	; 0x01
    29e4:	a2 83       	std	Z+2, r26	; 0x02
    29e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    29e8:	fe 01       	movw	r30, r28
    29ea:	e3 5b       	subi	r30, 0xB3	; 179
    29ec:	ff 4f       	sbci	r31, 0xFF	; 255
    29ee:	60 81       	ld	r22, Z
    29f0:	71 81       	ldd	r23, Z+1	; 0x01
    29f2:	82 81       	ldd	r24, Z+2	; 0x02
    29f4:	93 81       	ldd	r25, Z+3	; 0x03
    29f6:	20 e0       	ldi	r18, 0x00	; 0
    29f8:	30 e0       	ldi	r19, 0x00	; 0
    29fa:	40 e8       	ldi	r20, 0x80	; 128
    29fc:	5f e3       	ldi	r21, 0x3F	; 63
    29fe:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2a02:	88 23       	and	r24, r24
    2a04:	44 f4       	brge	.+16     	; 0x2a16 <main+0x8ce>
		__ticks = 1;
    2a06:	fe 01       	movw	r30, r28
    2a08:	e5 5b       	subi	r30, 0xB5	; 181
    2a0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a0c:	81 e0       	ldi	r24, 0x01	; 1
    2a0e:	90 e0       	ldi	r25, 0x00	; 0
    2a10:	91 83       	std	Z+1, r25	; 0x01
    2a12:	80 83       	st	Z, r24
    2a14:	64 c0       	rjmp	.+200    	; 0x2ade <main+0x996>
	else if (__tmp > 65535)
    2a16:	fe 01       	movw	r30, r28
    2a18:	e3 5b       	subi	r30, 0xB3	; 179
    2a1a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a1c:	60 81       	ld	r22, Z
    2a1e:	71 81       	ldd	r23, Z+1	; 0x01
    2a20:	82 81       	ldd	r24, Z+2	; 0x02
    2a22:	93 81       	ldd	r25, Z+3	; 0x03
    2a24:	20 e0       	ldi	r18, 0x00	; 0
    2a26:	3f ef       	ldi	r19, 0xFF	; 255
    2a28:	4f e7       	ldi	r20, 0x7F	; 127
    2a2a:	57 e4       	ldi	r21, 0x47	; 71
    2a2c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2a30:	18 16       	cp	r1, r24
    2a32:	0c f0       	brlt	.+2      	; 0x2a36 <main+0x8ee>
    2a34:	43 c0       	rjmp	.+134    	; 0x2abc <main+0x974>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a36:	fe 01       	movw	r30, r28
    2a38:	ef 5a       	subi	r30, 0xAF	; 175
    2a3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a3c:	60 81       	ld	r22, Z
    2a3e:	71 81       	ldd	r23, Z+1	; 0x01
    2a40:	82 81       	ldd	r24, Z+2	; 0x02
    2a42:	93 81       	ldd	r25, Z+3	; 0x03
    2a44:	20 e0       	ldi	r18, 0x00	; 0
    2a46:	30 e0       	ldi	r19, 0x00	; 0
    2a48:	40 e2       	ldi	r20, 0x20	; 32
    2a4a:	51 e4       	ldi	r21, 0x41	; 65
    2a4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a50:	dc 01       	movw	r26, r24
    2a52:	cb 01       	movw	r24, r22
    2a54:	8e 01       	movw	r16, r28
    2a56:	05 5b       	subi	r16, 0xB5	; 181
    2a58:	1f 4f       	sbci	r17, 0xFF	; 255
    2a5a:	bc 01       	movw	r22, r24
    2a5c:	cd 01       	movw	r24, r26
    2a5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a62:	dc 01       	movw	r26, r24
    2a64:	cb 01       	movw	r24, r22
    2a66:	f8 01       	movw	r30, r16
    2a68:	91 83       	std	Z+1, r25	; 0x01
    2a6a:	80 83       	st	Z, r24
    2a6c:	1f c0       	rjmp	.+62     	; 0x2aac <main+0x964>
    2a6e:	fe 01       	movw	r30, r28
    2a70:	e7 5b       	subi	r30, 0xB7	; 183
    2a72:	ff 4f       	sbci	r31, 0xFF	; 255
    2a74:	88 ec       	ldi	r24, 0xC8	; 200
    2a76:	90 e0       	ldi	r25, 0x00	; 0
    2a78:	91 83       	std	Z+1, r25	; 0x01
    2a7a:	80 83       	st	Z, r24
    2a7c:	fe 01       	movw	r30, r28
    2a7e:	e7 5b       	subi	r30, 0xB7	; 183
    2a80:	ff 4f       	sbci	r31, 0xFF	; 255
    2a82:	80 81       	ld	r24, Z
    2a84:	91 81       	ldd	r25, Z+1	; 0x01
    2a86:	01 97       	sbiw	r24, 0x01	; 1
    2a88:	f1 f7       	brne	.-4      	; 0x2a86 <main+0x93e>
    2a8a:	fe 01       	movw	r30, r28
    2a8c:	e7 5b       	subi	r30, 0xB7	; 183
    2a8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a90:	91 83       	std	Z+1, r25	; 0x01
    2a92:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a94:	de 01       	movw	r26, r28
    2a96:	a5 5b       	subi	r26, 0xB5	; 181
    2a98:	bf 4f       	sbci	r27, 0xFF	; 255
    2a9a:	fe 01       	movw	r30, r28
    2a9c:	e5 5b       	subi	r30, 0xB5	; 181
    2a9e:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa0:	80 81       	ld	r24, Z
    2aa2:	91 81       	ldd	r25, Z+1	; 0x01
    2aa4:	01 97       	sbiw	r24, 0x01	; 1
    2aa6:	11 96       	adiw	r26, 0x01	; 1
    2aa8:	9c 93       	st	X, r25
    2aaa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2aac:	fe 01       	movw	r30, r28
    2aae:	e5 5b       	subi	r30, 0xB5	; 181
    2ab0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab2:	80 81       	ld	r24, Z
    2ab4:	91 81       	ldd	r25, Z+1	; 0x01
    2ab6:	00 97       	sbiw	r24, 0x00	; 0
    2ab8:	d1 f6       	brne	.-76     	; 0x2a6e <main+0x926>
    2aba:	27 c0       	rjmp	.+78     	; 0x2b0a <main+0x9c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2abc:	8e 01       	movw	r16, r28
    2abe:	05 5b       	subi	r16, 0xB5	; 181
    2ac0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ac2:	fe 01       	movw	r30, r28
    2ac4:	e3 5b       	subi	r30, 0xB3	; 179
    2ac6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac8:	60 81       	ld	r22, Z
    2aca:	71 81       	ldd	r23, Z+1	; 0x01
    2acc:	82 81       	ldd	r24, Z+2	; 0x02
    2ace:	93 81       	ldd	r25, Z+3	; 0x03
    2ad0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ad4:	dc 01       	movw	r26, r24
    2ad6:	cb 01       	movw	r24, r22
    2ad8:	f8 01       	movw	r30, r16
    2ada:	91 83       	std	Z+1, r25	; 0x01
    2adc:	80 83       	st	Z, r24
    2ade:	de 01       	movw	r26, r28
    2ae0:	a9 5b       	subi	r26, 0xB9	; 185
    2ae2:	bf 4f       	sbci	r27, 0xFF	; 255
    2ae4:	fe 01       	movw	r30, r28
    2ae6:	e5 5b       	subi	r30, 0xB5	; 181
    2ae8:	ff 4f       	sbci	r31, 0xFF	; 255
    2aea:	80 81       	ld	r24, Z
    2aec:	91 81       	ldd	r25, Z+1	; 0x01
    2aee:	8d 93       	st	X+, r24
    2af0:	9c 93       	st	X, r25
    2af2:	fe 01       	movw	r30, r28
    2af4:	e9 5b       	subi	r30, 0xB9	; 185
    2af6:	ff 4f       	sbci	r31, 0xFF	; 255
    2af8:	80 81       	ld	r24, Z
    2afa:	91 81       	ldd	r25, Z+1	; 0x01
    2afc:	01 97       	sbiw	r24, 0x01	; 1
    2afe:	f1 f7       	brne	.-4      	; 0x2afc <main+0x9b4>
    2b00:	fe 01       	movw	r30, r28
    2b02:	e9 5b       	subi	r30, 0xB9	; 185
    2b04:	ff 4f       	sbci	r31, 0xFF	; 255
    2b06:	91 83       	std	Z+1, r25	; 0x01
    2b08:	80 83       	st	Z, r24
_delay_ms(short_time);
LCD_void_DDRAM_Address(1,12);
    2b0a:	81 e0       	ldi	r24, 0x01	; 1
    2b0c:	6c e0       	ldi	r22, 0x0C	; 12
    2b0e:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(' ');
    2b12:	80 e2       	ldi	r24, 0x20	; 32
    2b14:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
LCD_void_DDRAM_Address(1,13);
    2b18:	81 e0       	ldi	r24, 0x01	; 1
    2b1a:	6d e0       	ldi	r22, 0x0D	; 13
    2b1c:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(0);
    2b20:	80 e0       	ldi	r24, 0x00	; 0
    2b22:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
    2b26:	fe 01       	movw	r30, r28
    2b28:	ed 5b       	subi	r30, 0xBD	; 189
    2b2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b2c:	80 e0       	ldi	r24, 0x00	; 0
    2b2e:	90 e0       	ldi	r25, 0x00	; 0
    2b30:	aa e7       	ldi	r26, 0x7A	; 122
    2b32:	b4 e4       	ldi	r27, 0x44	; 68
    2b34:	80 83       	st	Z, r24
    2b36:	91 83       	std	Z+1, r25	; 0x01
    2b38:	a2 83       	std	Z+2, r26	; 0x02
    2b3a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b3c:	8e 01       	movw	r16, r28
    2b3e:	01 5c       	subi	r16, 0xC1	; 193
    2b40:	1f 4f       	sbci	r17, 0xFF	; 255
    2b42:	fe 01       	movw	r30, r28
    2b44:	ed 5b       	subi	r30, 0xBD	; 189
    2b46:	ff 4f       	sbci	r31, 0xFF	; 255
    2b48:	60 81       	ld	r22, Z
    2b4a:	71 81       	ldd	r23, Z+1	; 0x01
    2b4c:	82 81       	ldd	r24, Z+2	; 0x02
    2b4e:	93 81       	ldd	r25, Z+3	; 0x03
    2b50:	20 e0       	ldi	r18, 0x00	; 0
    2b52:	30 e0       	ldi	r19, 0x00	; 0
    2b54:	4a ef       	ldi	r20, 0xFA	; 250
    2b56:	54 e4       	ldi	r21, 0x44	; 68
    2b58:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b5c:	dc 01       	movw	r26, r24
    2b5e:	cb 01       	movw	r24, r22
    2b60:	f8 01       	movw	r30, r16
    2b62:	80 83       	st	Z, r24
    2b64:	91 83       	std	Z+1, r25	; 0x01
    2b66:	a2 83       	std	Z+2, r26	; 0x02
    2b68:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b6a:	fe 01       	movw	r30, r28
    2b6c:	ff 96       	adiw	r30, 0x3f	; 63
    2b6e:	60 81       	ld	r22, Z
    2b70:	71 81       	ldd	r23, Z+1	; 0x01
    2b72:	82 81       	ldd	r24, Z+2	; 0x02
    2b74:	93 81       	ldd	r25, Z+3	; 0x03
    2b76:	20 e0       	ldi	r18, 0x00	; 0
    2b78:	30 e0       	ldi	r19, 0x00	; 0
    2b7a:	40 e8       	ldi	r20, 0x80	; 128
    2b7c:	5f e3       	ldi	r21, 0x3F	; 63
    2b7e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2b82:	88 23       	and	r24, r24
    2b84:	2c f4       	brge	.+10     	; 0x2b90 <main+0xa48>
		__ticks = 1;
    2b86:	81 e0       	ldi	r24, 0x01	; 1
    2b88:	90 e0       	ldi	r25, 0x00	; 0
    2b8a:	9e af       	std	Y+62, r25	; 0x3e
    2b8c:	8d af       	std	Y+61, r24	; 0x3d
    2b8e:	46 c0       	rjmp	.+140    	; 0x2c1c <main+0xad4>
	else if (__tmp > 65535)
    2b90:	fe 01       	movw	r30, r28
    2b92:	ff 96       	adiw	r30, 0x3f	; 63
    2b94:	60 81       	ld	r22, Z
    2b96:	71 81       	ldd	r23, Z+1	; 0x01
    2b98:	82 81       	ldd	r24, Z+2	; 0x02
    2b9a:	93 81       	ldd	r25, Z+3	; 0x03
    2b9c:	20 e0       	ldi	r18, 0x00	; 0
    2b9e:	3f ef       	ldi	r19, 0xFF	; 255
    2ba0:	4f e7       	ldi	r20, 0x7F	; 127
    2ba2:	57 e4       	ldi	r21, 0x47	; 71
    2ba4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2ba8:	18 16       	cp	r1, r24
    2baa:	64 f5       	brge	.+88     	; 0x2c04 <main+0xabc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bac:	fe 01       	movw	r30, r28
    2bae:	ed 5b       	subi	r30, 0xBD	; 189
    2bb0:	ff 4f       	sbci	r31, 0xFF	; 255
    2bb2:	60 81       	ld	r22, Z
    2bb4:	71 81       	ldd	r23, Z+1	; 0x01
    2bb6:	82 81       	ldd	r24, Z+2	; 0x02
    2bb8:	93 81       	ldd	r25, Z+3	; 0x03
    2bba:	20 e0       	ldi	r18, 0x00	; 0
    2bbc:	30 e0       	ldi	r19, 0x00	; 0
    2bbe:	40 e2       	ldi	r20, 0x20	; 32
    2bc0:	51 e4       	ldi	r21, 0x41	; 65
    2bc2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bc6:	dc 01       	movw	r26, r24
    2bc8:	cb 01       	movw	r24, r22
    2bca:	bc 01       	movw	r22, r24
    2bcc:	cd 01       	movw	r24, r26
    2bce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bd2:	dc 01       	movw	r26, r24
    2bd4:	cb 01       	movw	r24, r22
    2bd6:	9e af       	std	Y+62, r25	; 0x3e
    2bd8:	8d af       	std	Y+61, r24	; 0x3d
    2bda:	0f c0       	rjmp	.+30     	; 0x2bfa <main+0xab2>
    2bdc:	88 ec       	ldi	r24, 0xC8	; 200
    2bde:	90 e0       	ldi	r25, 0x00	; 0
    2be0:	9c af       	std	Y+60, r25	; 0x3c
    2be2:	8b af       	std	Y+59, r24	; 0x3b
    2be4:	8b ad       	ldd	r24, Y+59	; 0x3b
    2be6:	9c ad       	ldd	r25, Y+60	; 0x3c
    2be8:	01 97       	sbiw	r24, 0x01	; 1
    2bea:	f1 f7       	brne	.-4      	; 0x2be8 <main+0xaa0>
    2bec:	9c af       	std	Y+60, r25	; 0x3c
    2bee:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bf0:	8d ad       	ldd	r24, Y+61	; 0x3d
    2bf2:	9e ad       	ldd	r25, Y+62	; 0x3e
    2bf4:	01 97       	sbiw	r24, 0x01	; 1
    2bf6:	9e af       	std	Y+62, r25	; 0x3e
    2bf8:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bfa:	8d ad       	ldd	r24, Y+61	; 0x3d
    2bfc:	9e ad       	ldd	r25, Y+62	; 0x3e
    2bfe:	00 97       	sbiw	r24, 0x00	; 0
    2c00:	69 f7       	brne	.-38     	; 0x2bdc <main+0xa94>
    2c02:	16 c0       	rjmp	.+44     	; 0x2c30 <main+0xae8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c04:	fe 01       	movw	r30, r28
    2c06:	ff 96       	adiw	r30, 0x3f	; 63
    2c08:	60 81       	ld	r22, Z
    2c0a:	71 81       	ldd	r23, Z+1	; 0x01
    2c0c:	82 81       	ldd	r24, Z+2	; 0x02
    2c0e:	93 81       	ldd	r25, Z+3	; 0x03
    2c10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c14:	dc 01       	movw	r26, r24
    2c16:	cb 01       	movw	r24, r22
    2c18:	9e af       	std	Y+62, r25	; 0x3e
    2c1a:	8d af       	std	Y+61, r24	; 0x3d
    2c1c:	8d ad       	ldd	r24, Y+61	; 0x3d
    2c1e:	9e ad       	ldd	r25, Y+62	; 0x3e
    2c20:	9a af       	std	Y+58, r25	; 0x3a
    2c22:	89 af       	std	Y+57, r24	; 0x39
    2c24:	89 ad       	ldd	r24, Y+57	; 0x39
    2c26:	9a ad       	ldd	r25, Y+58	; 0x3a
    2c28:	01 97       	sbiw	r24, 0x01	; 1
    2c2a:	f1 f7       	brne	.-4      	; 0x2c28 <main+0xae0>
    2c2c:	9a af       	std	Y+58, r25	; 0x3a
    2c2e:	89 af       	std	Y+57, r24	; 0x39
_delay_ms(short_time);
LCD_void_DDRAM_Address(1,13);
    2c30:	81 e0       	ldi	r24, 0x01	; 1
    2c32:	6d e0       	ldi	r22, 0x0D	; 13
    2c34:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(' ');
    2c38:	80 e2       	ldi	r24, 0x20	; 32
    2c3a:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
LCD_void_DDRAM_Address(0,12);
    2c3e:	80 e0       	ldi	r24, 0x00	; 0
    2c40:	6c e0       	ldi	r22, 0x0C	; 12
    2c42:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(0);
    2c46:	80 e0       	ldi	r24, 0x00	; 0
    2c48:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
    2c4c:	80 e0       	ldi	r24, 0x00	; 0
    2c4e:	90 e0       	ldi	r25, 0x00	; 0
    2c50:	aa e7       	ldi	r26, 0x7A	; 122
    2c52:	b4 e4       	ldi	r27, 0x44	; 68
    2c54:	8d ab       	std	Y+53, r24	; 0x35
    2c56:	9e ab       	std	Y+54, r25	; 0x36
    2c58:	af ab       	std	Y+55, r26	; 0x37
    2c5a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c5c:	6d a9       	ldd	r22, Y+53	; 0x35
    2c5e:	7e a9       	ldd	r23, Y+54	; 0x36
    2c60:	8f a9       	ldd	r24, Y+55	; 0x37
    2c62:	98 ad       	ldd	r25, Y+56	; 0x38
    2c64:	20 e0       	ldi	r18, 0x00	; 0
    2c66:	30 e0       	ldi	r19, 0x00	; 0
    2c68:	4a ef       	ldi	r20, 0xFA	; 250
    2c6a:	54 e4       	ldi	r21, 0x44	; 68
    2c6c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c70:	dc 01       	movw	r26, r24
    2c72:	cb 01       	movw	r24, r22
    2c74:	89 ab       	std	Y+49, r24	; 0x31
    2c76:	9a ab       	std	Y+50, r25	; 0x32
    2c78:	ab ab       	std	Y+51, r26	; 0x33
    2c7a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2c7c:	69 a9       	ldd	r22, Y+49	; 0x31
    2c7e:	7a a9       	ldd	r23, Y+50	; 0x32
    2c80:	8b a9       	ldd	r24, Y+51	; 0x33
    2c82:	9c a9       	ldd	r25, Y+52	; 0x34
    2c84:	20 e0       	ldi	r18, 0x00	; 0
    2c86:	30 e0       	ldi	r19, 0x00	; 0
    2c88:	40 e8       	ldi	r20, 0x80	; 128
    2c8a:	5f e3       	ldi	r21, 0x3F	; 63
    2c8c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2c90:	88 23       	and	r24, r24
    2c92:	2c f4       	brge	.+10     	; 0x2c9e <main+0xb56>
		__ticks = 1;
    2c94:	81 e0       	ldi	r24, 0x01	; 1
    2c96:	90 e0       	ldi	r25, 0x00	; 0
    2c98:	98 ab       	std	Y+48, r25	; 0x30
    2c9a:	8f a7       	std	Y+47, r24	; 0x2f
    2c9c:	3f c0       	rjmp	.+126    	; 0x2d1c <main+0xbd4>
	else if (__tmp > 65535)
    2c9e:	69 a9       	ldd	r22, Y+49	; 0x31
    2ca0:	7a a9       	ldd	r23, Y+50	; 0x32
    2ca2:	8b a9       	ldd	r24, Y+51	; 0x33
    2ca4:	9c a9       	ldd	r25, Y+52	; 0x34
    2ca6:	20 e0       	ldi	r18, 0x00	; 0
    2ca8:	3f ef       	ldi	r19, 0xFF	; 255
    2caa:	4f e7       	ldi	r20, 0x7F	; 127
    2cac:	57 e4       	ldi	r21, 0x47	; 71
    2cae:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2cb2:	18 16       	cp	r1, r24
    2cb4:	4c f5       	brge	.+82     	; 0x2d08 <main+0xbc0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cb6:	6d a9       	ldd	r22, Y+53	; 0x35
    2cb8:	7e a9       	ldd	r23, Y+54	; 0x36
    2cba:	8f a9       	ldd	r24, Y+55	; 0x37
    2cbc:	98 ad       	ldd	r25, Y+56	; 0x38
    2cbe:	20 e0       	ldi	r18, 0x00	; 0
    2cc0:	30 e0       	ldi	r19, 0x00	; 0
    2cc2:	40 e2       	ldi	r20, 0x20	; 32
    2cc4:	51 e4       	ldi	r21, 0x41	; 65
    2cc6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cca:	dc 01       	movw	r26, r24
    2ccc:	cb 01       	movw	r24, r22
    2cce:	bc 01       	movw	r22, r24
    2cd0:	cd 01       	movw	r24, r26
    2cd2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cd6:	dc 01       	movw	r26, r24
    2cd8:	cb 01       	movw	r24, r22
    2cda:	98 ab       	std	Y+48, r25	; 0x30
    2cdc:	8f a7       	std	Y+47, r24	; 0x2f
    2cde:	0f c0       	rjmp	.+30     	; 0x2cfe <main+0xbb6>
    2ce0:	88 ec       	ldi	r24, 0xC8	; 200
    2ce2:	90 e0       	ldi	r25, 0x00	; 0
    2ce4:	9e a7       	std	Y+46, r25	; 0x2e
    2ce6:	8d a7       	std	Y+45, r24	; 0x2d
    2ce8:	8d a5       	ldd	r24, Y+45	; 0x2d
    2cea:	9e a5       	ldd	r25, Y+46	; 0x2e
    2cec:	01 97       	sbiw	r24, 0x01	; 1
    2cee:	f1 f7       	brne	.-4      	; 0x2cec <main+0xba4>
    2cf0:	9e a7       	std	Y+46, r25	; 0x2e
    2cf2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cf4:	8f a5       	ldd	r24, Y+47	; 0x2f
    2cf6:	98 a9       	ldd	r25, Y+48	; 0x30
    2cf8:	01 97       	sbiw	r24, 0x01	; 1
    2cfa:	98 ab       	std	Y+48, r25	; 0x30
    2cfc:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cfe:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d00:	98 a9       	ldd	r25, Y+48	; 0x30
    2d02:	00 97       	sbiw	r24, 0x00	; 0
    2d04:	69 f7       	brne	.-38     	; 0x2ce0 <main+0xb98>
    2d06:	14 c0       	rjmp	.+40     	; 0x2d30 <main+0xbe8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d08:	69 a9       	ldd	r22, Y+49	; 0x31
    2d0a:	7a a9       	ldd	r23, Y+50	; 0x32
    2d0c:	8b a9       	ldd	r24, Y+51	; 0x33
    2d0e:	9c a9       	ldd	r25, Y+52	; 0x34
    2d10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d14:	dc 01       	movw	r26, r24
    2d16:	cb 01       	movw	r24, r22
    2d18:	98 ab       	std	Y+48, r25	; 0x30
    2d1a:	8f a7       	std	Y+47, r24	; 0x2f
    2d1c:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d1e:	98 a9       	ldd	r25, Y+48	; 0x30
    2d20:	9c a7       	std	Y+44, r25	; 0x2c
    2d22:	8b a7       	std	Y+43, r24	; 0x2b
    2d24:	8b a5       	ldd	r24, Y+43	; 0x2b
    2d26:	9c a5       	ldd	r25, Y+44	; 0x2c
    2d28:	01 97       	sbiw	r24, 0x01	; 1
    2d2a:	f1 f7       	brne	.-4      	; 0x2d28 <main+0xbe0>
    2d2c:	9c a7       	std	Y+44, r25	; 0x2c
    2d2e:	8b a7       	std	Y+43, r24	; 0x2b
_delay_ms(short_time);
LCD_void_DDRAM_Address(0,10);
    2d30:	80 e0       	ldi	r24, 0x00	; 0
    2d32:	6a e0       	ldi	r22, 0x0A	; 10
    2d34:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(' ');
    2d38:	80 e2       	ldi	r24, 0x20	; 32
    2d3a:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
LCD_void_DDRAM_Address(0,11);
    2d3e:	80 e0       	ldi	r24, 0x00	; 0
    2d40:	6b e0       	ldi	r22, 0x0B	; 11
    2d42:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(1);
    2d46:	81 e0       	ldi	r24, 0x01	; 1
    2d48:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
    2d4c:	80 e0       	ldi	r24, 0x00	; 0
    2d4e:	90 e0       	ldi	r25, 0x00	; 0
    2d50:	aa e7       	ldi	r26, 0x7A	; 122
    2d52:	b4 e4       	ldi	r27, 0x44	; 68
    2d54:	8f a3       	std	Y+39, r24	; 0x27
    2d56:	98 a7       	std	Y+40, r25	; 0x28
    2d58:	a9 a7       	std	Y+41, r26	; 0x29
    2d5a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d5c:	6f a1       	ldd	r22, Y+39	; 0x27
    2d5e:	78 a5       	ldd	r23, Y+40	; 0x28
    2d60:	89 a5       	ldd	r24, Y+41	; 0x29
    2d62:	9a a5       	ldd	r25, Y+42	; 0x2a
    2d64:	20 e0       	ldi	r18, 0x00	; 0
    2d66:	30 e0       	ldi	r19, 0x00	; 0
    2d68:	4a ef       	ldi	r20, 0xFA	; 250
    2d6a:	54 e4       	ldi	r21, 0x44	; 68
    2d6c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d70:	dc 01       	movw	r26, r24
    2d72:	cb 01       	movw	r24, r22
    2d74:	8b a3       	std	Y+35, r24	; 0x23
    2d76:	9c a3       	std	Y+36, r25	; 0x24
    2d78:	ad a3       	std	Y+37, r26	; 0x25
    2d7a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2d7c:	6b a1       	ldd	r22, Y+35	; 0x23
    2d7e:	7c a1       	ldd	r23, Y+36	; 0x24
    2d80:	8d a1       	ldd	r24, Y+37	; 0x25
    2d82:	9e a1       	ldd	r25, Y+38	; 0x26
    2d84:	20 e0       	ldi	r18, 0x00	; 0
    2d86:	30 e0       	ldi	r19, 0x00	; 0
    2d88:	40 e8       	ldi	r20, 0x80	; 128
    2d8a:	5f e3       	ldi	r21, 0x3F	; 63
    2d8c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2d90:	88 23       	and	r24, r24
    2d92:	2c f4       	brge	.+10     	; 0x2d9e <main+0xc56>
		__ticks = 1;
    2d94:	81 e0       	ldi	r24, 0x01	; 1
    2d96:	90 e0       	ldi	r25, 0x00	; 0
    2d98:	9a a3       	std	Y+34, r25	; 0x22
    2d9a:	89 a3       	std	Y+33, r24	; 0x21
    2d9c:	3f c0       	rjmp	.+126    	; 0x2e1c <main+0xcd4>
	else if (__tmp > 65535)
    2d9e:	6b a1       	ldd	r22, Y+35	; 0x23
    2da0:	7c a1       	ldd	r23, Y+36	; 0x24
    2da2:	8d a1       	ldd	r24, Y+37	; 0x25
    2da4:	9e a1       	ldd	r25, Y+38	; 0x26
    2da6:	20 e0       	ldi	r18, 0x00	; 0
    2da8:	3f ef       	ldi	r19, 0xFF	; 255
    2daa:	4f e7       	ldi	r20, 0x7F	; 127
    2dac:	57 e4       	ldi	r21, 0x47	; 71
    2dae:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2db2:	18 16       	cp	r1, r24
    2db4:	4c f5       	brge	.+82     	; 0x2e08 <main+0xcc0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2db6:	6f a1       	ldd	r22, Y+39	; 0x27
    2db8:	78 a5       	ldd	r23, Y+40	; 0x28
    2dba:	89 a5       	ldd	r24, Y+41	; 0x29
    2dbc:	9a a5       	ldd	r25, Y+42	; 0x2a
    2dbe:	20 e0       	ldi	r18, 0x00	; 0
    2dc0:	30 e0       	ldi	r19, 0x00	; 0
    2dc2:	40 e2       	ldi	r20, 0x20	; 32
    2dc4:	51 e4       	ldi	r21, 0x41	; 65
    2dc6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2dca:	dc 01       	movw	r26, r24
    2dcc:	cb 01       	movw	r24, r22
    2dce:	bc 01       	movw	r22, r24
    2dd0:	cd 01       	movw	r24, r26
    2dd2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2dd6:	dc 01       	movw	r26, r24
    2dd8:	cb 01       	movw	r24, r22
    2dda:	9a a3       	std	Y+34, r25	; 0x22
    2ddc:	89 a3       	std	Y+33, r24	; 0x21
    2dde:	0f c0       	rjmp	.+30     	; 0x2dfe <main+0xcb6>
    2de0:	88 ec       	ldi	r24, 0xC8	; 200
    2de2:	90 e0       	ldi	r25, 0x00	; 0
    2de4:	98 a3       	std	Y+32, r25	; 0x20
    2de6:	8f 8f       	std	Y+31, r24	; 0x1f
    2de8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2dea:	98 a1       	ldd	r25, Y+32	; 0x20
    2dec:	01 97       	sbiw	r24, 0x01	; 1
    2dee:	f1 f7       	brne	.-4      	; 0x2dec <main+0xca4>
    2df0:	98 a3       	std	Y+32, r25	; 0x20
    2df2:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2df4:	89 a1       	ldd	r24, Y+33	; 0x21
    2df6:	9a a1       	ldd	r25, Y+34	; 0x22
    2df8:	01 97       	sbiw	r24, 0x01	; 1
    2dfa:	9a a3       	std	Y+34, r25	; 0x22
    2dfc:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dfe:	89 a1       	ldd	r24, Y+33	; 0x21
    2e00:	9a a1       	ldd	r25, Y+34	; 0x22
    2e02:	00 97       	sbiw	r24, 0x00	; 0
    2e04:	69 f7       	brne	.-38     	; 0x2de0 <main+0xc98>
    2e06:	14 c0       	rjmp	.+40     	; 0x2e30 <main+0xce8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e08:	6b a1       	ldd	r22, Y+35	; 0x23
    2e0a:	7c a1       	ldd	r23, Y+36	; 0x24
    2e0c:	8d a1       	ldd	r24, Y+37	; 0x25
    2e0e:	9e a1       	ldd	r25, Y+38	; 0x26
    2e10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e14:	dc 01       	movw	r26, r24
    2e16:	cb 01       	movw	r24, r22
    2e18:	9a a3       	std	Y+34, r25	; 0x22
    2e1a:	89 a3       	std	Y+33, r24	; 0x21
    2e1c:	89 a1       	ldd	r24, Y+33	; 0x21
    2e1e:	9a a1       	ldd	r25, Y+34	; 0x22
    2e20:	9e 8f       	std	Y+30, r25	; 0x1e
    2e22:	8d 8f       	std	Y+29, r24	; 0x1d
    2e24:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2e26:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2e28:	01 97       	sbiw	r24, 0x01	; 1
    2e2a:	f1 f7       	brne	.-4      	; 0x2e28 <main+0xce0>
    2e2c:	9e 8f       	std	Y+30, r25	; 0x1e
    2e2e:	8d 8f       	std	Y+29, r24	; 0x1d
_delay_ms(short_time);
LCD_void_DDRAM_Address(0,12);
    2e30:	80 e0       	ldi	r24, 0x00	; 0
    2e32:	6c e0       	ldi	r22, 0x0C	; 12
    2e34:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(' ');
    2e38:	80 e2       	ldi	r24, 0x20	; 32
    2e3a:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
LCD_void_DDRAM_Address(0,13);
    2e3e:	80 e0       	ldi	r24, 0x00	; 0
    2e40:	6d e0       	ldi	r22, 0x0D	; 13
    2e42:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(0);
    2e46:	80 e0       	ldi	r24, 0x00	; 0
    2e48:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
    2e4c:	80 e0       	ldi	r24, 0x00	; 0
    2e4e:	90 e0       	ldi	r25, 0x00	; 0
    2e50:	aa e7       	ldi	r26, 0x7A	; 122
    2e52:	b4 e4       	ldi	r27, 0x44	; 68
    2e54:	89 8f       	std	Y+25, r24	; 0x19
    2e56:	9a 8f       	std	Y+26, r25	; 0x1a
    2e58:	ab 8f       	std	Y+27, r26	; 0x1b
    2e5a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e5c:	69 8d       	ldd	r22, Y+25	; 0x19
    2e5e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2e60:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2e62:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2e64:	20 e0       	ldi	r18, 0x00	; 0
    2e66:	30 e0       	ldi	r19, 0x00	; 0
    2e68:	4a ef       	ldi	r20, 0xFA	; 250
    2e6a:	54 e4       	ldi	r21, 0x44	; 68
    2e6c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e70:	dc 01       	movw	r26, r24
    2e72:	cb 01       	movw	r24, r22
    2e74:	8d 8b       	std	Y+21, r24	; 0x15
    2e76:	9e 8b       	std	Y+22, r25	; 0x16
    2e78:	af 8b       	std	Y+23, r26	; 0x17
    2e7a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2e7c:	6d 89       	ldd	r22, Y+21	; 0x15
    2e7e:	7e 89       	ldd	r23, Y+22	; 0x16
    2e80:	8f 89       	ldd	r24, Y+23	; 0x17
    2e82:	98 8d       	ldd	r25, Y+24	; 0x18
    2e84:	20 e0       	ldi	r18, 0x00	; 0
    2e86:	30 e0       	ldi	r19, 0x00	; 0
    2e88:	40 e8       	ldi	r20, 0x80	; 128
    2e8a:	5f e3       	ldi	r21, 0x3F	; 63
    2e8c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2e90:	88 23       	and	r24, r24
    2e92:	2c f4       	brge	.+10     	; 0x2e9e <main+0xd56>
		__ticks = 1;
    2e94:	81 e0       	ldi	r24, 0x01	; 1
    2e96:	90 e0       	ldi	r25, 0x00	; 0
    2e98:	9c 8b       	std	Y+20, r25	; 0x14
    2e9a:	8b 8b       	std	Y+19, r24	; 0x13
    2e9c:	3f c0       	rjmp	.+126    	; 0x2f1c <main+0xdd4>
	else if (__tmp > 65535)
    2e9e:	6d 89       	ldd	r22, Y+21	; 0x15
    2ea0:	7e 89       	ldd	r23, Y+22	; 0x16
    2ea2:	8f 89       	ldd	r24, Y+23	; 0x17
    2ea4:	98 8d       	ldd	r25, Y+24	; 0x18
    2ea6:	20 e0       	ldi	r18, 0x00	; 0
    2ea8:	3f ef       	ldi	r19, 0xFF	; 255
    2eaa:	4f e7       	ldi	r20, 0x7F	; 127
    2eac:	57 e4       	ldi	r21, 0x47	; 71
    2eae:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2eb2:	18 16       	cp	r1, r24
    2eb4:	4c f5       	brge	.+82     	; 0x2f08 <main+0xdc0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2eb6:	69 8d       	ldd	r22, Y+25	; 0x19
    2eb8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2eba:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ebc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ebe:	20 e0       	ldi	r18, 0x00	; 0
    2ec0:	30 e0       	ldi	r19, 0x00	; 0
    2ec2:	40 e2       	ldi	r20, 0x20	; 32
    2ec4:	51 e4       	ldi	r21, 0x41	; 65
    2ec6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2eca:	dc 01       	movw	r26, r24
    2ecc:	cb 01       	movw	r24, r22
    2ece:	bc 01       	movw	r22, r24
    2ed0:	cd 01       	movw	r24, r26
    2ed2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ed6:	dc 01       	movw	r26, r24
    2ed8:	cb 01       	movw	r24, r22
    2eda:	9c 8b       	std	Y+20, r25	; 0x14
    2edc:	8b 8b       	std	Y+19, r24	; 0x13
    2ede:	0f c0       	rjmp	.+30     	; 0x2efe <main+0xdb6>
    2ee0:	88 ec       	ldi	r24, 0xC8	; 200
    2ee2:	90 e0       	ldi	r25, 0x00	; 0
    2ee4:	9a 8b       	std	Y+18, r25	; 0x12
    2ee6:	89 8b       	std	Y+17, r24	; 0x11
    2ee8:	89 89       	ldd	r24, Y+17	; 0x11
    2eea:	9a 89       	ldd	r25, Y+18	; 0x12
    2eec:	01 97       	sbiw	r24, 0x01	; 1
    2eee:	f1 f7       	brne	.-4      	; 0x2eec <main+0xda4>
    2ef0:	9a 8b       	std	Y+18, r25	; 0x12
    2ef2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ef4:	8b 89       	ldd	r24, Y+19	; 0x13
    2ef6:	9c 89       	ldd	r25, Y+20	; 0x14
    2ef8:	01 97       	sbiw	r24, 0x01	; 1
    2efa:	9c 8b       	std	Y+20, r25	; 0x14
    2efc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2efe:	8b 89       	ldd	r24, Y+19	; 0x13
    2f00:	9c 89       	ldd	r25, Y+20	; 0x14
    2f02:	00 97       	sbiw	r24, 0x00	; 0
    2f04:	69 f7       	brne	.-38     	; 0x2ee0 <main+0xd98>
    2f06:	14 c0       	rjmp	.+40     	; 0x2f30 <main+0xde8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f08:	6d 89       	ldd	r22, Y+21	; 0x15
    2f0a:	7e 89       	ldd	r23, Y+22	; 0x16
    2f0c:	8f 89       	ldd	r24, Y+23	; 0x17
    2f0e:	98 8d       	ldd	r25, Y+24	; 0x18
    2f10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f14:	dc 01       	movw	r26, r24
    2f16:	cb 01       	movw	r24, r22
    2f18:	9c 8b       	std	Y+20, r25	; 0x14
    2f1a:	8b 8b       	std	Y+19, r24	; 0x13
    2f1c:	8b 89       	ldd	r24, Y+19	; 0x13
    2f1e:	9c 89       	ldd	r25, Y+20	; 0x14
    2f20:	98 8b       	std	Y+16, r25	; 0x10
    2f22:	8f 87       	std	Y+15, r24	; 0x0f
    2f24:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f26:	98 89       	ldd	r25, Y+16	; 0x10
    2f28:	01 97       	sbiw	r24, 0x01	; 1
    2f2a:	f1 f7       	brne	.-4      	; 0x2f28 <main+0xde0>
    2f2c:	98 8b       	std	Y+16, r25	; 0x10
    2f2e:	8f 87       	std	Y+15, r24	; 0x0f
_delay_ms(short_time);
LCD_void_DDRAM_Address(0,13);
    2f30:	80 e0       	ldi	r24, 0x00	; 0
    2f32:	6d e0       	ldi	r22, 0x0D	; 13
    2f34:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(' ');
    2f38:	80 e2       	ldi	r24, 0x20	; 32
    2f3a:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
LCD_void_DDRAM_Address(0,14);
    2f3e:	80 e0       	ldi	r24, 0x00	; 0
    2f40:	6e e0       	ldi	r22, 0x0E	; 14
    2f42:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_Data(0);
    2f46:	80 e0       	ldi	r24, 0x00	; 0
    2f48:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <LCD_void_Write_Data>
    2f4c:	80 e0       	ldi	r24, 0x00	; 0
    2f4e:	90 e0       	ldi	r25, 0x00	; 0
    2f50:	aa e7       	ldi	r26, 0x7A	; 122
    2f52:	b4 e4       	ldi	r27, 0x44	; 68
    2f54:	8b 87       	std	Y+11, r24	; 0x0b
    2f56:	9c 87       	std	Y+12, r25	; 0x0c
    2f58:	ad 87       	std	Y+13, r26	; 0x0d
    2f5a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f5c:	6b 85       	ldd	r22, Y+11	; 0x0b
    2f5e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2f60:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f62:	9e 85       	ldd	r25, Y+14	; 0x0e
    2f64:	20 e0       	ldi	r18, 0x00	; 0
    2f66:	30 e0       	ldi	r19, 0x00	; 0
    2f68:	4a ef       	ldi	r20, 0xFA	; 250
    2f6a:	54 e4       	ldi	r21, 0x44	; 68
    2f6c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f70:	dc 01       	movw	r26, r24
    2f72:	cb 01       	movw	r24, r22
    2f74:	8f 83       	std	Y+7, r24	; 0x07
    2f76:	98 87       	std	Y+8, r25	; 0x08
    2f78:	a9 87       	std	Y+9, r26	; 0x09
    2f7a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2f7c:	6f 81       	ldd	r22, Y+7	; 0x07
    2f7e:	78 85       	ldd	r23, Y+8	; 0x08
    2f80:	89 85       	ldd	r24, Y+9	; 0x09
    2f82:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f84:	20 e0       	ldi	r18, 0x00	; 0
    2f86:	30 e0       	ldi	r19, 0x00	; 0
    2f88:	40 e8       	ldi	r20, 0x80	; 128
    2f8a:	5f e3       	ldi	r21, 0x3F	; 63
    2f8c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2f90:	88 23       	and	r24, r24
    2f92:	2c f4       	brge	.+10     	; 0x2f9e <main+0xe56>
		__ticks = 1;
    2f94:	81 e0       	ldi	r24, 0x01	; 1
    2f96:	90 e0       	ldi	r25, 0x00	; 0
    2f98:	9e 83       	std	Y+6, r25	; 0x06
    2f9a:	8d 83       	std	Y+5, r24	; 0x05
    2f9c:	3f c0       	rjmp	.+126    	; 0x301c <main+0xed4>
	else if (__tmp > 65535)
    2f9e:	6f 81       	ldd	r22, Y+7	; 0x07
    2fa0:	78 85       	ldd	r23, Y+8	; 0x08
    2fa2:	89 85       	ldd	r24, Y+9	; 0x09
    2fa4:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fa6:	20 e0       	ldi	r18, 0x00	; 0
    2fa8:	3f ef       	ldi	r19, 0xFF	; 255
    2faa:	4f e7       	ldi	r20, 0x7F	; 127
    2fac:	57 e4       	ldi	r21, 0x47	; 71
    2fae:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2fb2:	18 16       	cp	r1, r24
    2fb4:	4c f5       	brge	.+82     	; 0x3008 <main+0xec0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fb6:	6b 85       	ldd	r22, Y+11	; 0x0b
    2fb8:	7c 85       	ldd	r23, Y+12	; 0x0c
    2fba:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fbc:	9e 85       	ldd	r25, Y+14	; 0x0e
    2fbe:	20 e0       	ldi	r18, 0x00	; 0
    2fc0:	30 e0       	ldi	r19, 0x00	; 0
    2fc2:	40 e2       	ldi	r20, 0x20	; 32
    2fc4:	51 e4       	ldi	r21, 0x41	; 65
    2fc6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fca:	dc 01       	movw	r26, r24
    2fcc:	cb 01       	movw	r24, r22
    2fce:	bc 01       	movw	r22, r24
    2fd0:	cd 01       	movw	r24, r26
    2fd2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2fd6:	dc 01       	movw	r26, r24
    2fd8:	cb 01       	movw	r24, r22
    2fda:	9e 83       	std	Y+6, r25	; 0x06
    2fdc:	8d 83       	std	Y+5, r24	; 0x05
    2fde:	0f c0       	rjmp	.+30     	; 0x2ffe <main+0xeb6>
    2fe0:	88 ec       	ldi	r24, 0xC8	; 200
    2fe2:	90 e0       	ldi	r25, 0x00	; 0
    2fe4:	9c 83       	std	Y+4, r25	; 0x04
    2fe6:	8b 83       	std	Y+3, r24	; 0x03
    2fe8:	8b 81       	ldd	r24, Y+3	; 0x03
    2fea:	9c 81       	ldd	r25, Y+4	; 0x04
    2fec:	01 97       	sbiw	r24, 0x01	; 1
    2fee:	f1 f7       	brne	.-4      	; 0x2fec <main+0xea4>
    2ff0:	9c 83       	std	Y+4, r25	; 0x04
    2ff2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ff4:	8d 81       	ldd	r24, Y+5	; 0x05
    2ff6:	9e 81       	ldd	r25, Y+6	; 0x06
    2ff8:	01 97       	sbiw	r24, 0x01	; 1
    2ffa:	9e 83       	std	Y+6, r25	; 0x06
    2ffc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ffe:	8d 81       	ldd	r24, Y+5	; 0x05
    3000:	9e 81       	ldd	r25, Y+6	; 0x06
    3002:	00 97       	sbiw	r24, 0x00	; 0
    3004:	69 f7       	brne	.-38     	; 0x2fe0 <main+0xe98>
    3006:	14 c0       	rjmp	.+40     	; 0x3030 <main+0xee8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3008:	6f 81       	ldd	r22, Y+7	; 0x07
    300a:	78 85       	ldd	r23, Y+8	; 0x08
    300c:	89 85       	ldd	r24, Y+9	; 0x09
    300e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3010:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3014:	dc 01       	movw	r26, r24
    3016:	cb 01       	movw	r24, r22
    3018:	9e 83       	std	Y+6, r25	; 0x06
    301a:	8d 83       	std	Y+5, r24	; 0x05
    301c:	8d 81       	ldd	r24, Y+5	; 0x05
    301e:	9e 81       	ldd	r25, Y+6	; 0x06
    3020:	9a 83       	std	Y+2, r25	; 0x02
    3022:	89 83       	std	Y+1, r24	; 0x01
    3024:	89 81       	ldd	r24, Y+1	; 0x01
    3026:	9a 81       	ldd	r25, Y+2	; 0x02
    3028:	01 97       	sbiw	r24, 0x01	; 1
    302a:	f1 f7       	brne	.-4      	; 0x3028 <main+0xee0>
    302c:	9a 83       	std	Y+2, r25	; 0x02
    302e:	89 83       	std	Y+1, r24	; 0x01
_delay_ms(short_time);
LCD_void_DDRAM_Address(0,14);
    3030:	80 e0       	ldi	r24, 0x00	; 0
    3032:	6e e0       	ldi	r22, 0x0E	; 14
    3034:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>




LCD_void_Clear_Screen();
    3038:	0e 94 1c 10 	call	0x2038	; 0x2038 <LCD_void_Clear_Screen>
LCD_void_Write_String("Bernardo Silva");
    303c:	8e e6       	ldi	r24, 0x6E	; 110
    303e:	90 e0       	ldi	r25, 0x00	; 0
    3040:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <LCD_void_Write_String>
LCD_void_DDRAM_Address(1,0);
    3044:	81 e0       	ldi	r24, 0x01	; 1
    3046:	60 e0       	ldi	r22, 0x00	; 0
    3048:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <LCD_void_DDRAM_Address>
LCD_void_Write_String("!!!GOOOOOOAL!!");
    304c:	8d e7       	ldi	r24, 0x7D	; 125
    304e:	90 e0       	ldi	r25, 0x00	; 0
    3050:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <LCD_void_Write_String>
    3054:	ff cf       	rjmp	.-2      	; 0x3054 <main+0xf0c>

00003056 <__udivmodqi4>:
    3056:	99 1b       	sub	r25, r25
    3058:	79 e0       	ldi	r23, 0x09	; 9
    305a:	04 c0       	rjmp	.+8      	; 0x3064 <__udivmodqi4_ep>

0000305c <__udivmodqi4_loop>:
    305c:	99 1f       	adc	r25, r25
    305e:	96 17       	cp	r25, r22
    3060:	08 f0       	brcs	.+2      	; 0x3064 <__udivmodqi4_ep>
    3062:	96 1b       	sub	r25, r22

00003064 <__udivmodqi4_ep>:
    3064:	88 1f       	adc	r24, r24
    3066:	7a 95       	dec	r23
    3068:	c9 f7       	brne	.-14     	; 0x305c <__udivmodqi4_loop>
    306a:	80 95       	com	r24
    306c:	08 95       	ret

0000306e <__prologue_saves__>:
    306e:	2f 92       	push	r2
    3070:	3f 92       	push	r3
    3072:	4f 92       	push	r4
    3074:	5f 92       	push	r5
    3076:	6f 92       	push	r6
    3078:	7f 92       	push	r7
    307a:	8f 92       	push	r8
    307c:	9f 92       	push	r9
    307e:	af 92       	push	r10
    3080:	bf 92       	push	r11
    3082:	cf 92       	push	r12
    3084:	df 92       	push	r13
    3086:	ef 92       	push	r14
    3088:	ff 92       	push	r15
    308a:	0f 93       	push	r16
    308c:	1f 93       	push	r17
    308e:	cf 93       	push	r28
    3090:	df 93       	push	r29
    3092:	cd b7       	in	r28, 0x3d	; 61
    3094:	de b7       	in	r29, 0x3e	; 62
    3096:	ca 1b       	sub	r28, r26
    3098:	db 0b       	sbc	r29, r27
    309a:	0f b6       	in	r0, 0x3f	; 63
    309c:	f8 94       	cli
    309e:	de bf       	out	0x3e, r29	; 62
    30a0:	0f be       	out	0x3f, r0	; 63
    30a2:	cd bf       	out	0x3d, r28	; 61
    30a4:	09 94       	ijmp

000030a6 <__epilogue_restores__>:
    30a6:	2a 88       	ldd	r2, Y+18	; 0x12
    30a8:	39 88       	ldd	r3, Y+17	; 0x11
    30aa:	48 88       	ldd	r4, Y+16	; 0x10
    30ac:	5f 84       	ldd	r5, Y+15	; 0x0f
    30ae:	6e 84       	ldd	r6, Y+14	; 0x0e
    30b0:	7d 84       	ldd	r7, Y+13	; 0x0d
    30b2:	8c 84       	ldd	r8, Y+12	; 0x0c
    30b4:	9b 84       	ldd	r9, Y+11	; 0x0b
    30b6:	aa 84       	ldd	r10, Y+10	; 0x0a
    30b8:	b9 84       	ldd	r11, Y+9	; 0x09
    30ba:	c8 84       	ldd	r12, Y+8	; 0x08
    30bc:	df 80       	ldd	r13, Y+7	; 0x07
    30be:	ee 80       	ldd	r14, Y+6	; 0x06
    30c0:	fd 80       	ldd	r15, Y+5	; 0x05
    30c2:	0c 81       	ldd	r16, Y+4	; 0x04
    30c4:	1b 81       	ldd	r17, Y+3	; 0x03
    30c6:	aa 81       	ldd	r26, Y+2	; 0x02
    30c8:	b9 81       	ldd	r27, Y+1	; 0x01
    30ca:	ce 0f       	add	r28, r30
    30cc:	d1 1d       	adc	r29, r1
    30ce:	0f b6       	in	r0, 0x3f	; 63
    30d0:	f8 94       	cli
    30d2:	de bf       	out	0x3e, r29	; 62
    30d4:	0f be       	out	0x3f, r0	; 63
    30d6:	cd bf       	out	0x3d, r28	; 61
    30d8:	ed 01       	movw	r28, r26
    30da:	08 95       	ret

000030dc <_exit>:
    30dc:	f8 94       	cli

000030de <__stop_program>:
    30de:	ff cf       	rjmp	.-2      	; 0x30de <__stop_program>
